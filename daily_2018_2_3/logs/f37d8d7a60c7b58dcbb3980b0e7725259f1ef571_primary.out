cset: moving following pidspec: 29538
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.15043723 seconds)
loading group "string"... done (took 0.632516976 seconds)
loading group "linalg"... done (took 9.670211061 seconds)
loading group "parallel"... done (took 0.170959965 seconds)
loading group "find"... done (took 2.432821009 seconds)
loading group "tuple"... done (took 2.347749087 seconds)
loading group "dates"... done (took 1.420840797 seconds)
loading group "micro"... done (took 0.640428544 seconds)
loading group "io"... done (took 0.692347416 seconds)
loading group "scalar"... done (took 54.690433154 seconds)
loading group "sparse"... done (took 14.16873437 seconds)
loading group "broadcast"... done (took 1.339403447 seconds)
loading group "union"... done (took 10.979884111 seconds)
loading group "simd"... done (took 3.824785286 seconds)
loading group "random"... done (took 14.271802752 seconds)
loading group "problem"... done (took 2.183819153 seconds)
loading group "array"... done (took 23.904163882 seconds)
loading group "misc"... done (took 1.534503427 seconds)
loading group "sort"... done (took 3.725498801 seconds)
loading group "collection"... done (took 20.65206483 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.899497155 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.174556439 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.240212618 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.570988747 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.311470379 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.208457138 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.203541165 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.182552206 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.619044036 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.231429831 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.192579143 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.403987158 seconds)
done (took 7.050727092 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.302419897 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.093766835 seconds)
    (2/2) benchmarking "String"...
    done (took 0.236571729 seconds)
  done (took 0.995718016 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.099930171 seconds)
    (2/2) benchmarking "String"...
    done (took 0.142913603 seconds)
  done (took 0.912487096 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.133715593 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.20312738 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.151143782 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.147849798 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.137096766 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.150094867 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.134162258 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.149522511 seconds)
  done (took 1.741478546 seconds)
done (took 4.754012771 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.523513385 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.920116385 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.541738704 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.221648226 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.35000306 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.366160637 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.379486738 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.271412123 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.131592262 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.098631493 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.257075177 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.462874623 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.463345571 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.967010389 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098426516 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.151680851 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.202787624 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.796052563 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.119987264 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.157737003 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.537120797 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.25645609 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.157475527 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.150573266 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.227029552 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.167820782 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.171212535 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.144485457 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.712370936 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.172890527 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.242015593 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.123632174 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171280065 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.204316093 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.280628999 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152177662 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.726661009 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.242974099 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124703544 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.141684063 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.725864105 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.161383445 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.253794913 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.147314901 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114464503 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179776369 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.140156843 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.116627497 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.15186706 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.145384228 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199841338 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.482938925 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.145455949 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.241256309 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.149486019 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.726156068 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.136788462 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.319044817 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.165150051 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.150405733 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.131424508 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.129459074 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.200883594 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.132722034 seconds)
  done (took 22.729406536 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.250608073 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.251674445 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.119814731 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.203908102 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.186447532 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.121357171 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.146602413 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.118606488 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.171371862 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.221908025 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.184549625 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.255299617 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.135129622 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.135473952 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.223220334 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.293864147 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.147971309 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.164065816 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.129634085 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.154837638 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.183867713 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.137694654 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.15231362 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.13585112 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.214009833 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.24799812 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.162091545 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.166147165 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.145199178 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.139444095 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.183587141 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.206314864 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.117332369 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.146172017 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.218319632 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.165069089 seconds)
  done (took 7.029200613 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.147955278 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.179731641 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.249709872 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.284858441 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.228736898 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.228536834 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1878633 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.220736385 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.235957613 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.334346717 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.397456186 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.205284511 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172181471 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.158200561 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12125051 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.13705262 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.119937541 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.875418554 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.213058401 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.182595459 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.228304287 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156368636 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.139880573 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.41128528 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.126477037 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.14381784 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.135637564 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.110708835 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.264041903 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13423267 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.517715646 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.143397076 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.137620097 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17425097 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.254526706 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.165862076 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.180697064 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135267191 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.144535255 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.252081057 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157643966 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.120174975 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119842236 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174671192 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.172407057 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.147504846 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146560933 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17754368 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.145018609 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149937347 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.164331336 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.236479183 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.223742858 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.125929767 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.319979862 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.166746812 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.139723501 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.1501092 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.867932667 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.161776783 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.14036698 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.119516633 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.152987214 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.137743015 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.49589283 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.158564119 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.164433274 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.120010866 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.199574084 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.151587367 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.157529566 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128132742 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.145333246 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.148098373 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.145192501 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121303195 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.145676484 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.121859058 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.147808984 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.145506842 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.141625982 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125762523 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.141037314 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189235462 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.15369421 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.147753426 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168650065 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.147592663 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.129304232 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173674476 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.138706374 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.129702895 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.144429866 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.247934774 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.136616233 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.164785231 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153407876 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.182253186 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.129651598 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.326240713 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.122617569 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.181742711 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.137632499 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155737836 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.155699389 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122022998 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144531987 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.120163224 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.142648517 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.190947637 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.143958103 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.122424461 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.149215469 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.134146898 seconds)
  done (took 32.236260572 seconds)
done (took 62.66234193 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.486218176 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104546379 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.129644799 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110426707 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.130719242 seconds)
  done (took 1.708867632 seconds)
done (took 2.440189556 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.22563437 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.325744748 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.259583737 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.142259489 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.208189006 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.205637944 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.191487137 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.201485695 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211850254 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.225890321 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.121633718 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.227511052 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.21819548 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.190156564 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.138746626 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.242142871 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.202612701 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.191941509 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.232791411 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149174452 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.140424043 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.164163392 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.143640091 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.148872133 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.14484681 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163638341 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147507569 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164069397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.136780004 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.148175038 seconds)
  done (took 2.391507295 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.166835558 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146769055 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.139108979 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.155372029 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.13813101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.148064582 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.142129089 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161987616 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.149615508 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16276469 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.136883929 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.144864911 seconds)
  done (took 2.369095197 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.116561339 seconds)
done (took 9.764688853 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.222721757 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.586577283 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.194354133 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.3147333 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.370941279 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.313767997 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.662677088 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.245908093 seconds)
  done (took 15.764416548 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.258602661 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.136371699 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.153896803 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.131990418 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.155638367 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.137374158 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.150802162 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.135297718 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.152117718 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.131861301 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.132346616 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.152399514 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.135378105 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.148341272 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.13201393 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.148621386 seconds)
  done (took 3.195260439 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.179026861 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.175750527 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.138394412 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.158362231 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.135984901 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.157583459 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.142003809 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.155917714 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.134037092 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.152002238 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.143006733 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.155070548 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.138053026 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.152997128 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.141215112 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.177967141 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.13777661 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.159574983 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.160919569 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.161580318 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.160465829 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.14246233 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.159055711 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.142012222 seconds)
  done (took 4.473540939 seconds)
done (took 24.176525794 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.193959126 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.144137231 seconds)
  done (took 1.089421461 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.20712662 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.223328584 seconds)
  done (took 1.187092425 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.155339613 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.147756834 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.162019355 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.161035432 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.132500268 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.149006711 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.155085756 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.149028352 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.131751729 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.149612555 seconds)
  done (took 2.255213524 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.137200058 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.151921945 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.149289469 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.215776646 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.157828353 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.135509762 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.153488903 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.137644379 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.154017548 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.132927962 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.153137629 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.150453923 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.15331429 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.15305899 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.154262445 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.137293174 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.157600967 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.135568349 seconds)
  done (took 3.480945979 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.137007273 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.132875799 seconds)
  done (took 1.034171922 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.140215339 seconds)
    (2/7) benchmarking "second"...
    done (took 0.132902021 seconds)
    (3/7) benchmarking "month"...
    done (took 0.152001812 seconds)
    (4/7) benchmarking "year"...
    done (took 0.150230258 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.132946457 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.131925683 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.149046576 seconds)
  done (took 1.752890777 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.578425296 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.266969856 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.394172427 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102619153 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153757037 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.370828238 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.155392296 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103508894 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102414842 seconds)
  done (took 3.018005744 seconds)
done (took 14.576614026 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.136591738 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.323310535 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.637131283 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.171066986 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.131168521 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.208778761 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.384460647 seconds)
done (took 2.76541196 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352804116 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.207735818 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.120194 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.136500562 seconds)
  done (took 1.583790796 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.127655418 seconds)
    (2/2) benchmarking "read"...
    done (took 0.143942457 seconds)
  done (took 1.046433143 seconds)
done (took 3.402950498 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.157914532 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.154457521 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.140954591 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.156277153 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.14058944 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.15868641 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.139622562 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.156359907 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.141481338 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.154786938 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139360678 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.157939357 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.138169675 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.157303825 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137372523 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.276741859 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.13908961 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152508588 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134302086 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.154941142 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.140232494 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.154400974 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.14049364 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.157855737 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.140405889 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156968272 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.137001076 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.155167064 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.140547585 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.156222002 seconds)
  done (took 5.335940058 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.14165273 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.129685872 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.151875852 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.14195648 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.151612588 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.138032034 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.152399525 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.134701283 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.151982599 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.131755999 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.152637893 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.132089076 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.149730477 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.133618073 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.151219123 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.137093859 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.158534137 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.132543512 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.152576704 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.137041563 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.13779075 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.156035711 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.136313442 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.156078766 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.135610336 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.152937346 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.137303243 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.154722827 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.136993444 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.154361101 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.140509256 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.157020307 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.137430896 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.165221576 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.14009316 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.153847812 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.142818011 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.132303493 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.157290006 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.13256459 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.153002961 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.135143288 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.156057513 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.142809878 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.155162067 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.137153495 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.155629604 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.13879035 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.156362753 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.141465698 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.15230407 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.138485699 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.158249387 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.139850215 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.139145289 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.153100391 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.136133681 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.154551967 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.138768824 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.157539335 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.133103388 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.153767021 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.141369285 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.156176898 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.153623013 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.162816972 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.1358288 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.15819391 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.137493705 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.163207505 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.139821115 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.16755159 seconds)
  done (took 11.303168374 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.139528232 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136722004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.156934712 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137104525 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.157062338 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140592369 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.156605611 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137980823 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155942193 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137518164 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156979401 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.136732905 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.156353805 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.136778216 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136673728 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.157239313 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.137620406 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156956731 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.136476017 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.157161238 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138696622 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.157307 seconds)
  done (took 4.009342712 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.284522078 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.142238865 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.208949817 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.149414222 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.176638116 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.16938282 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.142567874 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.162456258 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143601727 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.167113751 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.146931427 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162960396 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.155201822 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.168243794 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.166282214 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.149560023 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.161541278 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.149679222 seconds)
  done (took 3.796789313 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.139664505 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.137627017 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.158932558 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137609522 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.158672219 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.139200567 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.159816541 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.141185901 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.158578945 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.13778715 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.157549859 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140329438 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.137970126 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.159920637 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13811583 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.158015694 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.138308003 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159338712 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13884581 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.158566644 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.14016663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.158682185 seconds)
  done (took 4.049191105 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154904163 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.160148311 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.160387097 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.164528221 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.140332617 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.160713657 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.145718695 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.160553913 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.148068733 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.16027602 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.144079651 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.159776058 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.155667078 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.16075322 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.146886619 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.159942326 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.142030463 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.160014878 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.143673894 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.138982093 seconds)
  done (took 3.862661857 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.234264495 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.179600041 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.177921454 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.164704571 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.173302328 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.151705127 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177571347 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.152625081 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.172929028 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.181045762 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1520392 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.169847312 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.15864775 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.173589856 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.153989883 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.185555107 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.163327559 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.187726102 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.169953217 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.155686585 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.186416404 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.157352426 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.186086891 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.157054654 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.177368672 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.151469535 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.171729318 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.175105998 seconds)
  done (took 5.598918907 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.152397277 seconds)
    (2/2) benchmarking "in"...
    done (took 0.168171885 seconds)
  done (took 1.120721039 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.142289465 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141252287 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.162756744 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.140397427 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.158770413 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.140179912 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.161536067 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.141294409 seconds)
  done (took 1.989874312 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.254006854 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.252042909 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.140684368 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.166052241 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.254161759 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.239311833 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173266967 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.162788522 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.138670137 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.155962599 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.247362921 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.129763038 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.160292225 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133559624 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.160247942 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143542482 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.162110482 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.148463256 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.163503357 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.136611562 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.160979563 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.140830233 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.165709278 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.146833399 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.156287102 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.143807119 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.165359937 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.151663313 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.159726349 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.142874571 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.161137676 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.141162605 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.161776826 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.139647764 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.157404372 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.254122661 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.14257005 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.153842534 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.135002882 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.162361835 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.162385442 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.158251601 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.160868859 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.140604957 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.168130702 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.146660471 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.167960456 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.143692984 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.133894532 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.159062989 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.141308132 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159482349 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.140507645 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.157772213 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.135928392 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.162393843 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.136713877 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.152446112 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.132144012 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.151708019 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.134215999 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.152492971 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.138055104 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.159160731 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.136832997 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.159166752 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.13948697 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.164115487 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.142408104 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.164518696 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.140355912 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.179475839 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.14173387 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.169703756 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.148690884 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.163906947 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138737283 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.169836705 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.14181999 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.164471324 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.146373819 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.187671737 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.1449518 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.160319955 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.138269942 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.172462099 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.144357682 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.167783786 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.135377679 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172428448 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.144509141 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.166055494 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.136162687 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.162723887 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.136820813 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.170375772 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.134144357 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.162815113 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.139347548 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.16943266 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147704341 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1629728 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.144472499 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.170427376 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.148271969 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.162657724 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.213416933 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.141123705 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.160613072 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.146695529 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.14848509 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.161686003 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.142077934 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.164241541 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.140241652 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.158964407 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.148570514 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.165272891 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.145461068 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.170084422 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.146203032 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.168122202 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.145759764 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.175272381 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.140418744 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.170553477 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.152710168 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.166672389 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.146093251 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.167627592 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.145818463 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.165229089 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.148314745 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.163491718 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150198908 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.163965626 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.145260719 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.167693398 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.150651833 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.165428122 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.140563359 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.164252089 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.146046508 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.165065729 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.147904248 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.166977177 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.141082916 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.159157258 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.145482132 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.161035272 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.146344041 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.175159993 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.14016735 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.169173593 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.140709397 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.174680098 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.141758936 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.171477269 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149807608 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.172065373 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.150297048 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.159415976 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.141333298 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.16896378 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.146016528 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.162475881 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.145007362 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.143765974 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.175801291 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.139554361 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.172334294 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.137125885 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.16442087 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.150187023 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.1682171 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.149122154 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.162849294 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.176623362 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17888548 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.15119314 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.167638827 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.145869368 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.171816221 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.144041094 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.171252267 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.150919278 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.17243098 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.145500601 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.167050128 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1525343 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.164541351 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.14680641 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.165847917 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.14737653 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.160935766 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.146338461 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.158882926 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.150534304 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.168295555 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.149376378 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.171976798 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.148465372 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.16693428 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.155541692 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.163564274 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.151088015 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.159582204 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.151664379 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.178492559 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.152550382 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.173119035 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.147947018 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.16443152 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.146001975 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176103775 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146383448 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.167217334 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.14760849 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.160275402 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.139016372 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.171698073 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.149506534 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.142433403 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.169188671 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.147587143 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170374092 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.139528773 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.154560574 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.148234463 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.172934354 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.141726247 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.167690298 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.142368448 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.165953178 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.173094481 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.135599329 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.143195178 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.172113381 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.149876826 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.168283594 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.146024578 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.172330529 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.150991313 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.169424921 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.146537086 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.159177309 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150117735 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.158472454 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.140559846 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.158861322 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.146698638 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.161587791 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.145004191 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.165311217 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.137974325 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.16296222 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.150975475 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.174580798 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.152620067 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.168090699 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.150848704 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.168706158 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.146910484 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.157594995 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.146685588 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.155819539 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.135296642 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.162208011 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.137043203 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.169351063 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.136126301 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.163401194 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.139112644 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.162732846 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.152068649 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.171498913 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.141235848 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.176253514 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.158879983 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.163283056 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.137901613 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167990033 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146093685 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.166758541 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.144794707 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.171813333 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.151228774 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.174640141 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.151897484 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.167128121 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.148927356 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.178357482 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.145324111 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.175601872 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.154375734 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.176463245 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.145226935 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.152183372 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.169529676 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.172065872 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.143358862 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.168789756 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.149960601 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.16839837 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.145555692 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.167647926 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.145926183 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.141585639 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.167329613 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.154760749 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.169570316 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.152720486 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.168141031 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.147314156 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.169994103 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.14325784 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.177623105 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.147197482 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.17788513 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.150419232 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.164053436 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.142142415 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.175990615 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.149322537 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.175477742 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.141107128 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.174419436 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.156308738 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.174383853 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.150954202 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.179295114 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.157238184 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.174105132 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.146679475 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.154464078 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.138591231 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.165361237 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.145494212 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.164387685 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.146560185 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.157962419 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146882922 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.167500047 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.145576606 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.158993904 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.135413032 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.161803703 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.147929047 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.145865548 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.170088121 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.152510773 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.172705939 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.145529806 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.176866031 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.154435354 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.171296448 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.153979192 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.162910851 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.145182719 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.159694165 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.150330321 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.171528051 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.14426823 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.165862732 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.148296822 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.178214107 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.144108953 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.177548462 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.156579918 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.168213179 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.147146227 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.169866274 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.139167512 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.164454847 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147454054 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.159917047 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.154525092 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.163529632 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.142418854 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.167783274 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.149052211 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.156469461 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.144752396 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.169364324 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.154077539 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.164747697 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.147505121 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.161149843 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.147863881 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.144180253 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.169957673 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.145427607 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.169052462 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.135613085 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.170351795 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.145495618 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.167344403 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.139274672 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.161325755 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.136735307 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.161632015 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.147568413 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.159400047 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.15018 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.172419587 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.146506532 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.16170501 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.149296515 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.16178836 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.148200901 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.159869376 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.143317873 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.157553526 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.144697333 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.161851048 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.148736352 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.164294944 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.144176545 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.177517282 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.154091095 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.165999936 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.145659063 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.172139339 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.139969948 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.158684247 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.148043532 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.171707108 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.160494918 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.176009866 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.14745688 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.171532364 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.154383246 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.17462172 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.153171455 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.159995676 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.143979514 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.174435281 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.152708158 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.17178106 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.145731021 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.176411145 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.146617943 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.170296673 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.145158913 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.165005113 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.146248253 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.176918987 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.1489235 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.147845509 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.169659872 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.154977984 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.168725306 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.142902978 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.162291185 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.155447872 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.173081437 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.158428329 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.165606002 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.143778548 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.163833154 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.150094288 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.172516573 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.141014437 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.165594139 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.140464028 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.173067195 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15398546 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.16179173 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.144273593 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.176200895 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.147971542 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.169467706 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.152792568 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.173639649 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.15961113 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.173809551 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.146658877 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.164164984 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.141346147 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.162503673 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.138265771 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.169409841 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155171436 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.167472709 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.150717023 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174477734 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.154440588 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.17683449 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.155850398 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.170065573 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.156206388 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.162553107 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.150253103 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.161596496 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.139878859 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.166148558 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.14977136 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1626979 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.145772564 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.146254622 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.168708087 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.139731475 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.16371326 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.149900395 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.175338845 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.148918134 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167585215 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.14346273 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.169229086 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.153057124 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.170272912 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.142187265 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.172634798 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.150094719 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168087709 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.142962819 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.172363162 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.15078494 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.171297728 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.156748107 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.165912937 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.145828899 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.176977408 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.156332307 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.179648608 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.146011231 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.161854649 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.150329525 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.170898659 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.147906787 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.178486954 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.161039347 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.175681267 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.14628557 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.163225217 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152671195 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.170645858 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.14485604 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.163579576 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.142353653 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.174055176 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.143271323 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.169170454 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.143841137 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.175608419 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.152091741 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.176079429 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.154578048 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.161927207 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.149283276 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.172257044 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.15880128 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.178337215 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.147942519 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.17237707 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.155574418 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.176741806 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.155078985 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.174469155 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.151043443 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.154511839 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.17672777 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.154237915 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.166997655 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.15341904 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.180741728 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.154096296 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.181137415 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.149699241 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168892981 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.146715005 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.175855611 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.153001842 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.171313853 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.157002291 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.178757586 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.147390207 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.169065942 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.149141178 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.17557305 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.156990359 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.18097566 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.149277226 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.16796987 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.159486073 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.179324238 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146684291 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.180252537 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.161030928 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.173052358 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.157925788 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.184589341 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.155885911 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.174687264 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.147136542 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.175460875 seconds)
  done (took 95.105668689 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.20035072 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.179980164 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.153676606 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.172736685 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16699516 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.176103579 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.150112831 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.174978648 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.157702421 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.189700724 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.15685515 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.178483743 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.17282724 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.197167339 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.196256717 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.166370965 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.182830164 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.159762838 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.181376072 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.159942671 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.197217601 seconds)
  done (took 4.568173282 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.15844899 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.15821121 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1821794 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156664601 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.182342447 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.155936518 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.179222908 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.158029681 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.182723496 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.159313109 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.181408969 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158798659 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.157762371 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.179564776 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155342251 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.182851373 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.158890205 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.183091137 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.158088612 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.181659525 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.159604764 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.18076553 seconds)
  done (took 4.609159704 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.181516337 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.160958506 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.181610768 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.159171066 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.186974254 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.157980905 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.187349873 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.157465369 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.191615697 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.151982276 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.17331857 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.153606166 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.181263516 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.158351176 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.176345655 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.158580924 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.190947893 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.158009508 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.18325727 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.155632811 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.171328145 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.160341181 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.160948531 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.176097355 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.163481474 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.189264838 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.161926566 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.188877294 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.14984627 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.185392248 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.158414072 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.178315472 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.150506912 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.17330209 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.151910707 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.187006628 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.163068071 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.161191584 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.184294698 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.151425518 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.184815267 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.163297606 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.174390064 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.159432275 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.18457054 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.156421847 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.18751127 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.160077244 seconds)
  done (took 9.044423084 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.189767563 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.222790837 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.158801896 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.217229993 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.196623118 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.167094885 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.18985559 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.192116405 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.1816561 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.164303019 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.202848484 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.174499619 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.191280199 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.16817579 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.189724705 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.166089195 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.189259144 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.163641615 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.192471192 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.164063888 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.19778182 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.190052605 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.174423709 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.197008585 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.167223327 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.187531245 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.164420889 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.190498637 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.173497827 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.195295103 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.168116502 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.192837831 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.19772348 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.165167221 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.164326825 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.190929606 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.197672095 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.165171721 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.189084894 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.164044013 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.188670251 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.165031127 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.189695557 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.174746816 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.187679778 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.164463275 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.183482199 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.157975666 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.193075295 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.160579573 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.191453969 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.170755451 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.190424957 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.162354638 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.193571758 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.194088089 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.162422668 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.181469808 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.16433462 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.194784735 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.16156432 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.191126373 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.177886815 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.191135625 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.17157568 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.200947864 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.166979453 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.192485317 seconds)
  done (took 13.339204888 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.196884324 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.192826439 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.178609379 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.19990028 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.166570651 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.19381682 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.168930704 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.192857946 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.167709526 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.433226814 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.185407781 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.300986553 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.171933519 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.199282732 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.168846298 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.194406498 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.167836231 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.193747765 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.168825832 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.194669462 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.165578296 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.200672271 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.167922951 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.201193524 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.201900501 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.166124528 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.19163627 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.168112306 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.19990333 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.167999045 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.204394369 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.168076474 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.192594507 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.200339582 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.178515924 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.193066331 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.165696192 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.191311936 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.165540489 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.188288965 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.166529821 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.202477659 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.166636558 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.188813756 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.163835479 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.193018668 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.172544903 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.198592551 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.195750092 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.174287499 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.194192435 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.175162838 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.194788659 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.163892875 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.201415416 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.205213789 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.172470468 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.197688006 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.167434048 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.201610363 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174697127 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.203660682 seconds)
  done (took 12.708278446 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.163050154 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.16375699 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.186988243 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.16117575 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.1872125 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.155225198 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.181497494 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.159932457 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.18417521 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.164169754 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.187819245 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.163697509 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.187621547 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.163900057 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.162299512 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.186105396 seconds)
  done (took 3.684994059 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.180464001 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.20239491 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.263918956 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.16432729 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.179869042 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.164059 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.183727149 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.166559011 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.164232789 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.192297197 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.16893905 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.195051087 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.207320581 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.167266577 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.191165319 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.165480391 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.187737905 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.169210188 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.165222938 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.272595119 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.198092821 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.169489305 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.191264806 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.170284938 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.192571859 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.170845527 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.199518097 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.165874894 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.19254574 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.168235432 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.193091873 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.172976179 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.1886003 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.170755029 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.192527184 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.167538359 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.191761348 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.165938992 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.196449486 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.165677104 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.193398951 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.165018719 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.189565139 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.16123439 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.185462556 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.163182487 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.188127023 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.168724411 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.192776248 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.165981269 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.192303371 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.166156679 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.193532326 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.170980243 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.194145215 seconds)
  done (took 10.99520403 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.172123454 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.188589789 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.177843344 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.187950858 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.170371358 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.166641602 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.192798503 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.167439077 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.19292939 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.164845589 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.194550899 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.168412953 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.194526687 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.165409948 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.191283175 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.168934928 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.191310055 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.167147207 seconds)
  done (took 4.161367383 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.162877029 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.163738486 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.191286205 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.164568839 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.190096151 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.166074169 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.188394109 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.164511396 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.189901638 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.163585835 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.187335035 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.16586405 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162421425 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.188862062 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.165205719 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.191414704 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.16510092 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.190962552 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.163116591 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.186761512 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.163660749 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.190458092 seconds)
  done (took 4.808490466 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.176374169 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.296180359 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.200151679 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.308737445 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.164390281 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.191437079 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.19034768 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.15977669 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.201437293 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.163713953 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.187846713 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.164030505 seconds)
  done (took 3.342069427 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193774903 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.225368194 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.165573622 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188989664 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172574744 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197281889 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.172182811 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196817936 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.180977373 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205373834 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195453829 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.180980256 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205214085 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.179468738 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.204274666 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177193263 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197478706 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.172547482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19451375 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.211021229 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17311284 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203099919 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173063575 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195328617 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.169913 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.202637569 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173454989 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.200757467 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189541755 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176121309 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197060325 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169289333 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20269286 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.180374038 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195505238 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.179444619 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197130755 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20792981 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173263277 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.203439209 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.165713321 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19808178 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175712607 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198975127 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.203152785 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168662925 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199649443 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171303529 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192466952 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189206403 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197322115 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.202496573 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176625134 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.203257514 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.177863335 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.216734385 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.207577277 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175319599 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200266422 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.183298469 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.204618329 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173738698 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.20149077 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195873571 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167267253 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.202472435 seconds)
  done (took 13.478533554 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.204166911 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.191821672 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170692703 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.209397459 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173952735 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196957433 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172684901 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198439544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171432742 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18841256 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.23864452 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172831352 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203250279 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.177754913 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197401694 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173885374 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197840358 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196001693 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16054588 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.209017425 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162122828 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198917101 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176552928 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.204681985 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.209370323 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174635517 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197123081 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172225481 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194022062 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169390866 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201415468 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173069469 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.204238525 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.169723291 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203636731 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196969173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172862703 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.203027858 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172654872 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.20457027 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.181520304 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.214668603 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.172448794 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.202858825 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.208095865 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172891408 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199514532 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171612129 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198119867 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173299443 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.209975909 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.180003603 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.210183438 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198642748 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172028823 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197820097 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17460241 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197653401 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175554153 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.204410726 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180908707 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201337209 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.218899107 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174469874 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200634324 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184071393 seconds)
  done (took 13.498228258 seconds)
done (took 235.185385069 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.332578495 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.367502548 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.162661619 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.537891094 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.155887902 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.894244196 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.989390974 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.26432814 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.161887551 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.158413886 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.188968744 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.174818727 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.538635445 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.178540217 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.161769218 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.203778962 seconds)
  done (took 32.423761377 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.362432729 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.414707443 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.176762281 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.193116802 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.167736687 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.192652833 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.164267266 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.192947522 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.1626394 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.192800715 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.161864776 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.176602851 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.181534553 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.153253325 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.156689944 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.189534632 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.187926515 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.167346018 seconds)
  done (took 4.558315244 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.18337019 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.229602927 seconds)
  done (took 1.386499803 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.193917301 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.284381979 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.387063501 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.243012787 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.185037768 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.204239495 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.237408026 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.178853353 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.278838031 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.180153527 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.205079864 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.188997622 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.189885697 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.195197046 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.182764821 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.187434972 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.195784396 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.206775312 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.179935195 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.192034313 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.192984527 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.192540131 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.171853615 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.208151149 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.274789685 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.175589044 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.190798902 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.166874821 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.193016465 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.177848671 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.199990065 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.180535923 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.203952959 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.250727363 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.167652136 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.246760503 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.19505742 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.161862924 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.20546108 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.166231953 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.195237033 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.191751915 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.17937451 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.186457738 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.167005147 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.190097543 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.165431841 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.183274444 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.171199097 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.191722577 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.172722694 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.196143173 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.242830452 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.167452036 seconds)
  done (took 11.783796693 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.001756569 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.205743208 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.193656625 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.160831508 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.204991135 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.177541721 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.022507443 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.185512734 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.32117929 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.093468061 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.20296142 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.168387805 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.334146894 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.317021559 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.366131257 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.423432819 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.855784355 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.201658216 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191173517 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.234291726 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188324345 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175015574 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.202264346 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518477281 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.162069089 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.187466323 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.17325094 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.199031961 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.246660175 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.16706026 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.191886367 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.270290998 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.363685478 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.275518642 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.162717773 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.188898781 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.165418269 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.260936306 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.367717995 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.28655891 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.259301455 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.162671902 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.190778058 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.172157742 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.208539734 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.162673029 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.254951674 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.263282131 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.262435915 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197637471 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.168638394 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.195507648 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.169675285 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.250423484 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.191967926 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.430348716 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.456449631 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.163915006 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1945284 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.181390547 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.337439044 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.198626781 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.311724223 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.214866301 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.286506136 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.191998752 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.884125065 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.259519489 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.164549004 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.197239812 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.171142006 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.200859913 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167931171 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.251755477 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.502934127 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192929647 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.169659182 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.186016722 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.296999601 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.167023043 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.183288287 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.253208786 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.167525981 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.192412792 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.169301573 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.191114208 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.26152075 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.342337552 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.170442633 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.187977541 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163377883 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.197369689 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.157208449 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.298178361 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.32323274 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.236564206 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.293984043 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162655141 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.247883526 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.250194015 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.184123254 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.248111083 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.162054878 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.191118255 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16019247 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.316673649 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.194160798 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186519614 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.161222453 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.187475768 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.239693816 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.16059361 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.18606194 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.247068735 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.557655198 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.252959187 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.158012119 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.190393103 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163016997 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.244533611 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.187831189 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.334943777 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.171168577 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.256679744 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.190443018 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.160449389 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.189925969 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.244071801 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.17137532 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.194565049 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.17064316 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.201182344 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.347815953 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.290332795 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.199182874 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.315747147 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.266749468 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.17183694 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.263466529 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.199979743 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.260068002 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.171207021 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.195089772 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163940059 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.907734835 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.169259849 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.191404466 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164622591 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.269872927 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.180834544 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.160736523 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159112443 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.183372483 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.864979576 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.190627171 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.164820919 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.189028929 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.16656234 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.190514829 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16658002 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.193983524 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.248560658 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.315321195 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.198617628 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.164791013 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.190901426 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.24602264 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.164114798 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.186541755 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159209317 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.185720201 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.16854645 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.19034412 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.167101264 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.255500201 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.250444987 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.304112137 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.665263154 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.160263983 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190103626 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.314277852 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.194487396 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.398637573 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166716867 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.329598793 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.252485422 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.15768563 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.453785149 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.247865155 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.245612682 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.189451672 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.262514478 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.158103881 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.193605144 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.243422142 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1575614 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.190976637 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.246839859 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.175136265 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.202577033 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.321189129 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.185498913 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.321097383 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.16414518 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.259579917 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.189020658 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170304043 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.397751436 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.186391888 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.192551781 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.221990548 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.201696736 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.166009029 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.061680438 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.160097952 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.201423695 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.171923338 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.32237313 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.248130132 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165660329 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.194704869 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.174485659 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.254044833 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.301910004 seconds)
  done (took 62.600415998 seconds)
done (took 113.718440105 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.329817885 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.229815044 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.436238398 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232948559 seconds)
  done (took 2.293872481 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.346341668 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.215669777 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.29812593 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.192736178 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.309521289 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.164780452 seconds)
  done (took 2.544436016 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.231198731 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.228641552 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23018218 seconds)
  done (took 1.710717056 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.26573659 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.267149788 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.413103508 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327340292 seconds)
  done (took 2.355241432 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.34361746 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.173566447 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.225662447 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.29627895 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.311707837 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.274227143 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.210828417 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.212288697 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.220072994 seconds)
  done (took 3.325420329 seconds)
done (took 13.252820596 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.274736266 seconds)
    (2/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.336416059 seconds)
    (3/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.473274831 seconds)
    (4/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.25897457 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.165944308 seconds)
    (6/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.448223266 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.168553866 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.365029536 seconds)
    (9/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.172252574 seconds)
    (10/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.403412974 seconds)
    (11/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.279871133 seconds)
    (12/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.297976498 seconds)
    (13/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.487077173 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.323356512 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.133376957 seconds)
    (16/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.257106629 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.248097758 seconds)
    (18/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.197397399 seconds)
    (19/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.168897124 seconds)
    (20/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.376754618 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.196160273 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.172282545 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.216082824 seconds)
    (24/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.40079662 seconds)
    (25/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.203679865 seconds)
    (26/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.346486982 seconds)
    (27/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.156076067 seconds)
    (28/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.280113363 seconds)
    (29/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.145688605 seconds)
    (30/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.233379712 seconds)
    (31/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.323030239 seconds)
    (32/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.259282664 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.191851919 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.194236288 seconds)
    (35/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.208473346 seconds)
    (36/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.157946156 seconds)
    (37/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.538291871 seconds)
    (38/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.140623857 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.218222395 seconds)
    (40/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.196804495 seconds)
    (41/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.229150757 seconds)
    (42/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.257576509 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.214140118 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.180030137 seconds)
    (45/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.168784117 seconds)
    (46/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.231206545 seconds)
    (47/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.204483251 seconds)
    (48/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.452822062 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.143681366 seconds)
    (50/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.205297744 seconds)
    (51/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.226104293 seconds)
    (52/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.163679986 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.172745057 seconds)
    (54/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.223071432 seconds)
    (55/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.340203581 seconds)
    (56/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.179880097 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.311834314 seconds)
    (58/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.137388867 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.169580923 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.207942224 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.172205369 seconds)
    (62/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.21462918 seconds)
    (63/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.261497131 seconds)
    (64/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.191317067 seconds)
    (65/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135533065 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.185076314 seconds)
    (67/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.164452276 seconds)
    (68/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139719183 seconds)
    (69/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.140111305 seconds)
    (70/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.205266529 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.193500828 seconds)
    (72/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.148178298 seconds)
    (73/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.260414393 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.194512133 seconds)
    (75/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.288136225 seconds)
    (76/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.349893372 seconds)
    (77/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.264589829 seconds)
    (78/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.206823291 seconds)
    (79/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.144874617 seconds)
    (80/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.139872166 seconds)
    (81/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.240620638 seconds)
    (82/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.20090837 seconds)
    (83/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.203185526 seconds)
    (84/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.162444941 seconds)
    (85/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.140209158 seconds)
    (86/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.186299628 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.212568691 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.16449684 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.209930846 seconds)
    (90/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.127341787 seconds)
    (91/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.216547211 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.167642104 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.200760029 seconds)
    (94/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.133768212 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.164167789 seconds)
    (96/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.21452585 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.188992631 seconds)
    (98/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.198169472 seconds)
    (99/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.204535632 seconds)
    (100/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.130472356 seconds)
    (101/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.16929494 seconds)
    (102/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.177129186 seconds)
    (103/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.134029371 seconds)
    (104/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.16016545 seconds)
    (105/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.186547924 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.196617245 seconds)
    (107/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.138632893 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.174321398 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.197902832 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.190345055 seconds)
    (111/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.197731253 seconds)
    (112/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.136462474 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.201602151 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.177242935 seconds)
    (115/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.133745125 seconds)
    (116/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.173028746 seconds)
    (117/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.145039346 seconds)
    (118/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.196390232 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.195149735 seconds)
    (120/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.212616014 seconds)
    (121/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.211241421 seconds)
    (122/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.260395444 seconds)
    (123/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.166787417 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.219229661 seconds)
    (125/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.196302604 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.140454038 seconds)
    (127/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.19357549 seconds)
    (128/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.199860356 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.182282186 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.192888979 seconds)
    (131/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.133514729 seconds)
    (132/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.189614709 seconds)
    (133/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.191597349 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.185128002 seconds)
    (135/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.130098175 seconds)
    (136/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.286077766 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.181468542 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.215160837 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.165623534 seconds)
    (140/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.196892843 seconds)
    (141/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.195544384 seconds)
    (142/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.141312252 seconds)
    (143/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.159897665 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.174881696 seconds)
    (145/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.13584064 seconds)
    (146/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.165651074 seconds)
    (147/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.226238068 seconds)
    (148/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.211148589 seconds)
    (149/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.135792017 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.138670817 seconds)
    (151/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.134210889 seconds)
    (152/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.165397209 seconds)
    (153/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.133802097 seconds)
    (154/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.128538813 seconds)
    (155/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.134699973 seconds)
    (156/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.159437569 seconds)
    (157/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.192514216 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.189238149 seconds)
    (159/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.13317908 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.162365458 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.191351745 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.160519391 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.193348179 seconds)
    (164/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.169329022 seconds)
    (165/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.189590052 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.169204752 seconds)
    (167/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.152711576 seconds)
    (168/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.173956547 seconds)
    (169/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.136540743 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.222486901 seconds)
    (171/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.133774873 seconds)
    (172/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.193563506 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.189439648 seconds)
    (174/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.129088614 seconds)
    (175/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.13487048 seconds)
    (176/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.161983403 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.163657187 seconds)
    (178/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.154459289 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.168955746 seconds)
    (180/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.135572402 seconds)
    (181/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.165189053 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.16807046 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.207234316 seconds)
    (184/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.132920868 seconds)
    (185/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.136894082 seconds)
    (186/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.132087742 seconds)
    (187/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.15517158 seconds)
    (188/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.136229812 seconds)
    (189/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.136550188 seconds)
    (190/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.195709057 seconds)
    (191/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.137525897 seconds)
    (192/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.172227844 seconds)
  done (took 39.669022638 seconds)
done (took 40.697850189 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.314551272 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.154965608 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.169521178 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.198532753 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.30363172 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179228239 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.215122028 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.170314136 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.208124054 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.170242265 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.187824838 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.188916516 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.199877328 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.302786081 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.171776437 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.204731551 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.165223982 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.210297357 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.183982053 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.227422579 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.298863147 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.168653657 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.216420648 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.164386758 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.292605821 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.193406901 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.170813986 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.200541376 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.183132916 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.200577732 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.170709163 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.189656931 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.18652376 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.211420943 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160300578 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.196627599 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.160369216 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.16539249 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.179267344 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.199000388 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.184185443 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.196677684 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.171961366 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.188222882 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.1727808 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.195802008 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162426609 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.199352645 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.162487266 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.197240144 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.164762812 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.211364098 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.172149562 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.18544265 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.162298376 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.18770009 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.181415584 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.18743086 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.188832068 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.161355063 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.198607238 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.162909075 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.200670627 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.165311817 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.203602598 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.166032764 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.198122838 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.173277729 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.200981679 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.169187546 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.19470363 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.177262595 seconds)
done (took 14.961602205 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.178366081 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.23336965 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.322811908 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.31638476 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.190225945 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.209362593 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.204843938 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.187449376 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.204523946 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.185329603 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.223724106 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.19892069 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.313158363 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.209069766 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.204219845 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.180581399 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.173729655 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.196726088 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.3130952 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.21355771 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.187017814 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.210291478 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.188466018 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.206265604 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.171494529 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.227112755 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.174497553 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.20385564 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.169266962 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.20181887 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.211931813 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.169332879 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.196767857 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.186365068 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.214499877 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.180473581 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.212290211 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.18818646 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.197500188 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.179464607 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.211430562 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.183788942 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.191835746 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.184441856 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.202197107 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.181907716 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.200370918 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.179683988 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.195759505 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.175437372 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.193253536 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.191764725 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.207432744 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.18272553 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.207067461 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.18223333 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.206518026 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.184389711 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.198327685 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.179355795 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.195950334 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.175807414 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.195709992 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.195097586 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.198411884 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.186078343 seconds)
  done (took 14.398774838 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.193018912 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.225369013 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.178553765 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.211790357 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.173149137 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.189310026 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.161348596 seconds)
  done (took 2.433952634 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.169481817 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.327201544 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.318133755 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.318144105 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.349682772 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.338542952 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.190023286 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.198190289 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.199335509 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.203967938 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.327032052 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.414581076 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.174085848 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.207355883 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.327264043 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.162101476 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.319605744 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.206971928 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.178424229 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.349116345 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.184160988 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.2253163 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.1763315 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.194162836 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.324375399 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.165162301 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.40013824 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.18320508 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.206100022 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.181883258 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.206302311 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.266054895 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.325021439 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.179091418 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.199640903 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.319758656 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.314291535 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.181984687 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.397357521 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.167912116 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.307953896 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.214765025 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.179887584 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.208654042 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.205787509 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.307439952 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.185021244 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.208836221 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.178587033 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.332315024 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.206185586 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.326869242 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.175628564 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.208776636 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.174121536 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.21765693 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.211098649 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.181788152 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.337258943 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.211917783 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.320813703 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.330831328 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.316227653 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.322839291 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.219372661 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.328180062 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.303791595 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.177361958 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.203442043 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.180762178 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.348241578 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.180778276 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.205303142 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.312816539 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182396129 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.32240712 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.323110581 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.206827095 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.177413899 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.198205596 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.178932166 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.195344308 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.314549048 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.207576673 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.178960225 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.212318461 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.179892725 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.208109424 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.171766447 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.217684432 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.179941059 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.206267422 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.184786919 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.209572716 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.181441022 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.358355769 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.178512922 seconds)
  done (took 24.489887981 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.174157786 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.166844686 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.200365554 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.166896651 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.201624819 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.166564134 seconds)
  done (took 2.21299856 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.207800607 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.20791861 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.18942059 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.208127539 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.22864361 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.31178674 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.320887086 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.205823133 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.226834619 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.195191186 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.319608237 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.319672555 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.316359277 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.2135904 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.320852343 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.183238436 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.323535326 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.210602377 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.188077772 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208731063 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.179457775 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.21341774 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.177937041 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.303168599 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.213836112 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.182161096 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.204900712 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.220095725 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.190741413 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.205781209 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.185335058 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.21272071 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.173581705 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.206145592 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.32465821 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.172747442 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.207752493 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.183029208 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.213259444 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.182213433 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.317708397 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.210903212 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.186658987 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.215966648 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.204534876 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.176402838 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.211041181 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.175006599 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.322311576 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.21514257 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.183944569 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.213375292 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.18243497 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.214918576 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.172791027 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.205170536 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.184195476 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.320667817 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.217154501 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.173071799 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.213211032 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.210748498 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.177597939 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.213142012 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.183458877 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.211207718 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.174516069 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.21053315 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.179980742 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.210849008 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.186412884 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.211432885 seconds)
  done (took 16.884084906 seconds)
done (took 61.508232915 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.677670982 seconds)
  done (took 2.812117854 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.234741962 seconds)
  done (took 2.36972092 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.850896156 seconds)
  done (took 19.02214829 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.492638414 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.416936763 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.087444749 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.24016962 seconds)
  done (took 3.375955047 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.145601785 seconds)
  done (took 2.296504918 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.471937769 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.342568944 seconds)
  done (took 1.955702245 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.818639665 seconds)
  done (took 1.975442123 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.956836468 seconds)
  done (took 3.097883612 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.366603889 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.284107842 seconds)
  done (took 1.80589445 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.72600288 seconds)
  done (took 1.890580679 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.589252033 seconds)
  done (took 17.75317475 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.325546243 seconds)
  done (took 1.490077314 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.357291197 seconds)
  done (took 1.523430956 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.608099178 seconds)
  done (took 4.773729982 seconds)
done (took 67.291342978 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.18635853 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.210729221 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.186399313 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.209739952 seconds)
  done (took 1.943314495 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.190061137 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.207271358 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.187076661 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.179655929 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.215136752 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.20684929 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.18225841 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.183021472 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.212142383 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.181813559 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.209254544 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.180034459 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.212423252 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.179217345 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.207897329 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.183472061 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.213191553 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.179987258 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.212265293 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.180807187 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.209938578 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.182092651 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.213809839 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.183497643 seconds)
  done (took 5.854173983 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.182782907 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.171621443 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.203625065 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.171253679 seconds)
  done (took 1.901580268 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.197802956 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.222513791 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.196159372 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.218610715 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.196660302 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.221567086 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.181231924 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.206550838 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.181746316 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.219937946 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.198569726 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.224648614 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.194085642 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.215123102 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.192888171 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.205176322 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.184788092 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.222871584 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.189221376 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.221875386 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.185036557 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.218909416 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.179609228 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.22168662 seconds)
  done (took 6.071852115 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.260037713 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.221316832 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.206823811 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.256033649 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.237395188 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.18080154 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.235690753 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.188468745 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.213518943 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.189895124 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.208079506 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.227479285 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.21550096 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.182521136 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.211323982 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.186089102 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.218611961 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.185349642 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.249500353 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.213005441 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.187976388 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.221924296 seconds)
  done (took 5.873017728 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.190675477 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.199056463 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.173072506 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.196253897 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.1860554 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.20213799 seconds)
  done (took 2.32352177 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.17717028 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.1671457 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.196614724 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.166625293 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.200667121 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.167443126 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.194544358 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.167527525 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.195949308 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.169875176 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.194717759 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.167806205 seconds)
  done (took 3.338254345 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274761936 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215150293 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.346569563 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.463028895 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257015081 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252067044 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.375566014 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223860016 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.272713931 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228847939 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274840949 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227212424 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246838309 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279873569 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207793879 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.242727385 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26460459 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275767255 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236240029 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30942886 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248730276 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269193002 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25899654 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242016252 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229665184 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227930407 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.211845289 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191652198 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260896569 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2576859 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267735324 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215267362 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235299273 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282100084 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322360139 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273253434 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.357621846 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227394558 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.22810882 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.28324495 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.323341644 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237463516 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284703652 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244479174 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19522727 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286201956 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243530699 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.252852676 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.228289437 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235698922 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274556239 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244375997 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.264301275 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230537991 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392858734 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199723372 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.235478316 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270212515 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279805243 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268656066 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273365425 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.216889364 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.263129123 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287107295 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309321952 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.206377356 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.257621351 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187688844 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258641412 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302477073 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277262803 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252307003 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.28370489 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196159282 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268175029 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258341762 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21912142 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.302441036 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267348921 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.213713255 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217503568 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228291006 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19031385 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.284334241 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184280245 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.311281982 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22880683 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.269908985 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240504242 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248062156 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256695917 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253174603 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225497027 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241732481 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.156586795 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237571648 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.251723035 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224874887 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222818248 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216065112 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235358486 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.219476052 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217679326 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.21580061 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235891254 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.22030756 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250633972 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235330538 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.227393757 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273472171 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210692288 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.259560576 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26496249 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290362726 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195339708 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.227493064 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31765693 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26522287 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.203096113 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265574118 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.294662705 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.206131363 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231919954 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259772161 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288345093 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209293262 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299391615 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233643378 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200240182 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.222841545 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268939887 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224664122 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.254997855 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220823987 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.23132007 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281225125 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.221577941 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205018149 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278264838 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228205416 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189879805 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231755748 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200857072 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.237123749 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.244912085 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.204799764 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249698259 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261444284 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232415191 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252458154 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229062332 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266058472 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198976796 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.266493517 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212614311 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.214921449 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.268950154 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295389701 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196198748 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275666468 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.254861712 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272660519 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23943678 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224863168 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27680049 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193508316 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.21558182 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226352473 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266270439 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259175874 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.286024781 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267338433 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.259645758 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.230065248 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245060319 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264004453 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.280098974 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222523924 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.235207559 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268383851 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233407523 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.217236154 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.18716994 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.223669898 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230910407 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198442872 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230345573 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275294137 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229344036 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271340867 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.264305285 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232864556 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259348886 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.220693703 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254406581 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.243033615 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234608531 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.289094302 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287667175 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245671428 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234869519 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258326821 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.185488541 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222247294 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.198679149 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.253645965 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233695058 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200310873 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238889068 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.288681222 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262400971 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214411614 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282306891 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260034972 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.299702665 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.184832221 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.258576672 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261328997 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234755236 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.284488794 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228161806 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.225492282 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290136732 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237681559 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286940765 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234804889 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278061071 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289738548 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.261513502 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198166594 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240691966 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255294461 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206576927 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.257300654 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207465471 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226448544 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244039859 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.203829037 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236614313 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28581955 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20808878 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270919804 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.25214684 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265256203 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193012482 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238729339 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270660282 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212914045 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.190218319 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231677348 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287428051 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247671385 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246771068 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237409449 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22741284 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.414124382 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249882679 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267144764 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2326079 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204779242 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271070911 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25403257 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224219641 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.280091408 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238983973 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307953001 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.264508279 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.206649814 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227630862 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21330666 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246286593 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.195114759 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.249357698 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.260808818 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.208425308 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283440786 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235009923 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.267721965 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274356651 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.212808386 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.244436705 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205651158 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325194648 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267463486 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270426655 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.260046402 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.230806434 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279421405 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189300287 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223945776 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.227263254 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251938646 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228506596 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277350146 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.25752796 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274967751 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245255222 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25963597 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238231215 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.194681085 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.26629917 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215688129 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278887134 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23115601 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.234323062 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251632577 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.214861641 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196624378 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257598476 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.386489139 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242282273 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234355109 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.193117035 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.378863705 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197506754 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229576353 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.224900944 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265963048 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.228987059 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.252743003 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272761561 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237152994 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.226612111 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232040378 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269886657 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276426502 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234903614 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273184334 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.243190557 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258126259 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223933153 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268955011 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243089951 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.213853633 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257057518 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29552772 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.23960215 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.231230241 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269021435 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239461494 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270757524 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270894173 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237145152 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250566905 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226803359 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262280906 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205481015 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221559978 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226204486 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.262122235 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229079087 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270371454 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239426413 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230487485 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194236241 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244284471 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266818622 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207962379 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.229266629 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283898485 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.197622608 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281254214 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311751433 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228649692 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237208727 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241388912 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196338169 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237354508 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242188366 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199590012 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.273860997 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244882266 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.228163995 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27214665 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26253798 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233167674 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253383775 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239243335 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.334615475 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.229467555 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291798346 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218517492 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296827796 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247706048 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24409312 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271368764 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249992819 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26329956 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214977086 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.320641033 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263554823 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.236694924 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230445567 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240785758 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206402903 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.231718358 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218543734 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272519148 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24045532 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.204087628 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.26832083 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242273624 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.215134759 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240194515 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30118942 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218493415 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287116182 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.286631707 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236963442 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244464536 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27259043 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228094896 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.230714166 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269055237 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245528536 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219397828 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.234567199 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.234744486 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283789274 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.225574251 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258478931 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244642054 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269713455 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274607654 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.201853033 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279153633 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241413763 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276022127 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196872998 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.250735244 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23814409 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23340748 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.194867609 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272403623 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259191171 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.267173121 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210985691 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.276005278 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29595778 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.192075692 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232052365 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384465739 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228703537 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29408841 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.189877549 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237987513 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244176745 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227821306 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.266025636 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272984647 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.199488495 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229588997 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.212914521 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.249086989 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.225151266 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239212925 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281306599 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25598572 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252008414 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.235029526 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.35704871 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211299892 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27248962 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.175147743 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.230798436 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209082113 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235367747 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241416928 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.275969903 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318032633 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.235056137 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.246232105 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203671748 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.2278686 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198884338 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.261061407 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249357461 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27216782 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217275554 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.192695437 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211996893 seconds)
  done (took 120.216106846 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241656377 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.227789185 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.243157069 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.297676128 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269358743 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.365854196 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.304170895 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.320364151 seconds)
  done (took 3.576841599 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.19366295 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.236343715 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.244346704 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.187153854 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.210342225 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.588519052 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.238824881 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.224671711 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.23013915 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.223405033 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.210236788 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.64125903 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.219835962 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.218522217 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.219439864 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.180796259 seconds)
  done (took 5.559231758 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.388040509 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.733061962 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.289200817 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.415239412 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.372634911 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.292554747 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.926173075 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.287779398 seconds)
  done (took 14.013381185 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.245057294 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.272222237 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.52617129 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.412746225 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.286103473 seconds)
  done (took 3.05345444 seconds)
done (took 174.876927068 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.198841623 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.193092187 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.225619969 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.195768238 seconds)
  done (took 2.102126876 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.259853164 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.152643861 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.187982447 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.151546544 seconds)
  done (took 2.064854512 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.456007183 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.152251787 seconds)
  done (took 1.940460892 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.218927773 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.718041373 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.205453669 seconds)
  done (took 2.467448268 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.21001986 seconds)
  done (took 1.529099254 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.192802273 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.186947993 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.380922823 seconds)
  done (took 2.07973264 seconds)
done (took 13.495081247 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.217515677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.025555026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.651204766 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.202460333 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.820601754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.468756812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.502065786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.248731995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.271956631 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.213060838 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.211822028 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.791730374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.48250763 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.9470531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.467834468 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.942482474 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.794334766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.182948085 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.218013699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.183672351 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.479122745 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.180451467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.211258099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.182477063 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.791350848 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.488237886 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.21117247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.955561349 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.210760209 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.190862739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.500752875 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.182434938 seconds)
  done (took 23.724888053 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.187153608 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.268339998 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.235820592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.215103306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189136684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.215262291 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.192785911 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.226172298 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.31205552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.182261215 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.234508327 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.181088472 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.218117877 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.181953934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.236633181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.181258097 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.215164347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.182396407 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.219957707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.183664198 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.233622851 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.181007402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.214817839 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183104207 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.21322283 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.199678029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.213046212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.194041231 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.213585073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.192260381 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.218098589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183400797 seconds)
  done (took 8.023747659 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.227614449 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.279586494 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239008192 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.252596123 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.268172947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.184248974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.30196096 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.249299558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.289244874 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.218410041 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.20428152 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.215107283 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.223419799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.216524507 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.206379287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.215221176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.184573265 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.213651098 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.220226669 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186035304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.235837479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182108188 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.214877951 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.18433463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.212982044 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.203137452 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.212309226 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.195721112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.213814712 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193361006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.218517125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18370355 seconds)
  done (took 8.376101713 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.201228238 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.196513938 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.237928538 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.236523933 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.193552896 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.196132945 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.228165816 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.191848288 seconds)
  done (took 3.018652688 seconds)
done (took 44.454022488 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.208856651 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.229672667 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.205386156 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.197371717 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.380254805 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.190090233 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.232888178 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.191877146 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.195387664 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.23774618 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.182280268 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.223445026 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.202589851 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.226550954 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.351436412 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.196927757 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.386234739 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.350525459 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.192677475 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.231197776 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.192127062 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.354185501 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.22891155 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.191212086 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.335012355 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.21921175 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.340835886 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.194484028 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.226288124 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.18457339 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.351516152 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.227859457 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.192324113 seconds)
  done (took 9.366627455 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.30313613 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.226647964 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.192804319 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.225228771 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.193804648 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.224387993 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.33524817 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.191901473 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.225329672 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.193881244 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.223813686 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.284539122 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.231340437 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.189408634 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.227244108 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.17203306 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.339668758 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.224866711 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.184977534 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.155355918 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.221557661 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.190885709 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.347883897 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.220069135 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.192151636 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.223997797 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.194289812 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.197022135 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.227987441 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.194204087 seconds)
  done (took 8.102811173 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.200702726 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.206341061 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.24413536 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.291341796 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.222402535 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.23701942 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.208874892 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.236885613 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.21531801 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.219285438 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.201867274 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.254812283 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.203467949 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.230078149 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.185989356 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.235012545 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.201658901 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.219869457 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.194640667 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.236901649 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.206319891 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.236429062 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.209128321 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.227876139 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.185386485 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.228373148 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.197681872 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.22945234 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.195784254 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.234666858 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.188741695 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.222392588 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.189727323 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.254425085 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.190529726 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.233473204 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.206743298 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.233586296 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.200127629 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.252503659 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.189833857 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.222765219 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.213539429 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.277108193 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.188796507 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.232681151 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.189110659 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.236458961 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.18573049 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.238233922 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.22935857 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.220878451 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.208719119 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.218519653 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.185805802 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.228845227 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.18809108 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.225129914 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.202300629 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.221269835 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.208597123 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.228029123 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199853525 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.222559363 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.19883469 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.21894125 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.187297045 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.224410444 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.214064811 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.228514818 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.224684594 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.22017591 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.198795347 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.234946837 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.199101958 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.232969731 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.186711084 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.231740684 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.199443251 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.225181521 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.201452292 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.2237271 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.192025461 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.237246032 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.208531808 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.235841261 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.199789616 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.229988916 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.189891669 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.221729148 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205787982 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.221326764 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.191803284 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.234273802 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.189583066 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.222550519 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.198809056 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.196077601 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.22032188 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.214304538 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.224417299 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.188282139 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.246745015 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.191431441 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.225378976 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.198393656 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.262485637 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.18784468 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.229230108 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.198538971 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.221053604 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.197156017 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.223056694 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.188257123 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.236543218 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.20427254 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.229672869 seconds)
  done (took 26.602404002 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.45193604 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.438848848 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.291119779 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.523019919 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.200757196 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.395891402 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.43974683 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.441851272 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.223048102 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.223210675 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.280358159 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.405259452 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.226522582 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.249803054 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.445210672 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.524759776 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.218554548 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.263756043 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.258689279 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.203057893 seconds)
  done (took 8.073086819 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.20203739 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.255027318 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.211795529 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.238792366 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.201247849 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.238137526 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.190238129 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.242098204 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.201682609 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.228656047 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.193352681 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.228035603 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.203859556 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.204295821 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.237303025 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.212041392 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.231413986 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.193520853 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.244262308 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.193533739 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.200338453 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.214836748 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.23125562 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.210833748 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.239426358 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.201121921 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.220800107 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.193503152 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.22990667 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.199681754 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.225950976 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.197488937 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.228791625 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.170532252 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.233690146 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.204853503 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.226346347 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.194104446 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.194123606 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.224896381 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.203596791 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.233969675 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.197710026 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.196673261 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.20922104 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.176179689 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.236762624 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.201528265 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.204458803 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.210289945 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.233658787 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.204320444 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.229843074 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.211396543 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.229568889 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.207319665 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.232810223 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.20403059 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.226748302 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.189437518 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.220929723 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.193104395 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.230525467 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.204728452 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.233491421 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.199374434 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.230273291 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.192443042 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.193423767 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.225043259 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.192617973 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.23662731 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.242465134 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.203179418 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.196525938 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.233367222 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.197654596 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.192287093 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.19913036 seconds)
  done (took 18.238066898 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.219374838 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.232136462 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.208495948 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.256150719 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.203088835 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.228633412 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.202059848 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.209007047 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.238255694 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.20821128 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.238577347 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.235709004 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.213528992 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.233830657 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.200846507 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.238189592 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.204086296 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.262002692 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.203318158 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.250033762 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.206553562 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.228498079 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.20415582 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.235367939 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.21969191 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.235297 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.217544989 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.23623766 seconds)
  done (took 7.660029092 seconds)
done (took 79.382521115 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.568919051 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.708609806 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.478207869 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.482373249 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.488813586 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.508923504 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.478296979 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.481054866 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.998999975 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.455485976 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.483493071 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.482275707 seconds)
done (took 32.04230346 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.556279353 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.177209365 seconds)
    (2/2) benchmarking "String"...
    done (took 2.187416883 seconds)
  done (took 5.7319031 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.162518119 seconds)
    (2/2) benchmarking "String"...
    done (took 2.178551474 seconds)
  done (took 5.709293244 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.467129886 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.470397466 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.715827453 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.468430099 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.468914446 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.474208041 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.472214953 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.476547453 seconds)
  done (took 17.913665719 seconds)
done (took 35.749739684 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.519960122 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.663358213 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.72573279 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.461120174 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.474897035 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.478602364 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.468351187 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.495270072 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.47351222 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.46430922 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.882343692 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.738561736 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.469734269 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.8523154 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.463104715 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.499617865 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.463224109 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.708244411 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.471136617 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.505133948 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.449345661 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.450888391 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.479418816 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.474190753 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.468586206 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.479718293 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.46576931 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.469789271 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.665569799 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.503661097 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.505148591 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.465289236 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.464297287 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.465097563 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.477296833 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.472550788 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.666578093 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.471480566 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.447977196 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.472837221 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.665689487 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.471769702 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.469014374 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.466261465 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.454641147 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.48895546 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.449022959 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.577098384 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.488531254 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.463761419 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.535461523 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.852770116 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.463380245 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.473194865 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.473487106 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.703139002 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.476374202 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.517753642 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.485144405 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.47260001 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.464948671 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.462067988 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.480186002 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.476033377 seconds)
  done (took 160.796943234 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.468935049 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.469828716 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.462207255 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.524712402 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.468397284 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.465051936 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.467607428 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.468056234 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.462646182 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.497991584 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.468574911 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.466235416 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.468439426 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.437005647 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.474677639 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.488158624 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.468853231 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.462603818 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.474521723 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.468396605 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.463172567 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.465313773 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.463385188 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.460909463 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.503519322 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.539481346 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.48100053 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.489340481 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.469558719 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.465273133 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.498493291 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.513674594 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.049678351 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.328668535 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.473922558 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.469218576 seconds)
  done (took 89.93306626 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.466961139 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.463979546 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.467137569 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.467244329 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.465562524 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.498224203 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.466303061 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.001629356 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.997200916 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.440980402 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.093972141 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.701780997 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.671638642 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.463652291 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.558104608 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.47517677 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.4643621 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.559858114 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.48817082 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.466729213 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.467947276 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.999209288 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.481962324 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.590481512 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.63281186 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.461058163 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.49694821 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.863985526 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.460199386 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.498264555 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.797809609 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.49321049 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.462891989 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.75100898 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.920468339 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.577293688 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.4635592 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.498333455 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.466359018 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.74869385 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.466934739 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.467600977 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.472182179 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.04927579 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.47012714 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.994870334 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.46641389 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.388642421 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.463840035 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.467997482 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.878004498 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.069940334 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.467225341 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.469081468 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.469441765 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.469214621 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.468001604 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.499036095 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.867418751 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.293994629 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.471166089 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.473849001 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.499201347 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.470004353 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.476670909 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.463263133 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.258865966 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.524716837 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.720266646 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.998518002 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.46745736 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.562140187 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.577206265 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.462319537 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.469560819 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.471257389 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.47025705 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.57959247 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.462957843 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.217025056 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.463436762 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.640153423 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.465891493 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.671345589 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.566217779 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.46520199 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.754208602 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.468993738 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.47181371 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.149833163 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.563475461 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.466579999 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.472083186 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.471364712 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.469887001 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.221866305 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.991863514 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.669796104 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.471799921 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.281869018 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.469248233 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.352876545 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.985505513 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.075040058 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.472588845 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.58041839 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.634709838 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.467313242 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.471248033 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.681889267 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.471921451 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.534039802 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.466264857 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.87237689 seconds)
  done (took 407.667486722 seconds)
done (took 659.767517079 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.456998597 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.450842924 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.452966273 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.450084628 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.451361871 seconds)
  done (took 13.628867681 seconds)
done (took 14.996383339 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.473021649 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.470359418 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.472778512 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.205713058 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.473576939 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.475540815 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.473817587 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.472693467 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.474792071 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.475677469 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.177796256 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.475486075 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.473746686 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.345847863 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.191510797 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.475171108 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.284113189 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.47738148 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.474063376 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.754922279 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.483976303 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.5413537 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.733806038 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.518793096 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.7614639 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.792662521 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.485905144 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.647186402 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.517354045 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.49726301 seconds)
  done (took 21.103481514 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.28697138 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.772627647 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.485539217 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.556474989 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.737543601 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.520003144 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.764965006 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.794165612 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.487558856 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.642715045 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.499632443 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.496915797 seconds)
  done (took 21.129459047 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.174631054 seconds)
done (took 93.907990991 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.51153475 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.574447296 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.510872504 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.495903817 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.493241031 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.493976242 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.497599037 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.494029925 seconds)
  done (took 13.44190392 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.494094785 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.49306996 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.490526854 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.491334662 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.493370871 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.492353956 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.492294931 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.494845253 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.49295615 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.493957642 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.492610948 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.493475104 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.493435446 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.495998519 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.4943676 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.493389874 seconds)
  done (took 25.265148897 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.498452651 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.492424618 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.496679418 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.49446085 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.493573157 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.495627585 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.495727972 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.493799955 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.494451182 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.495513092 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.497245242 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.493087365 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.494949617 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.497195113 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.494882974 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.496142581 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.494096309 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.495865615 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.499305422 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.495171364 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.495222486 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.49468122 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.496696432 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.494554313 seconds)
  done (took 37.263253493 seconds)
done (took 77.342169046 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.482179153 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.481316413 seconds)
  done (took 6.336766193 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.554027031 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.555018526 seconds)
  done (took 4.483788308 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.499257787 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.498150059 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.498396917 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.494595544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.497517331 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.498371757 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.495616193 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.49731693 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.497457362 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.49716068 seconds)
  done (took 16.348134317 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.498711674 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.497372473 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.495357278 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.498544945 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.499404877 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.497452744 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.495778224 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.498069696 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.496297024 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.497122401 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.497193168 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.499336175 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.497404263 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.498089747 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.497619565 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.49892296 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.498630489 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.498244053 seconds)
  done (took 28.334767028 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.50910466 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.517496033 seconds)
  done (took 4.400584613 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.624669551 seconds)
    (2/7) benchmarking "second"...
    done (took 1.540162915 seconds)
    (3/7) benchmarking "month"...
    done (took 1.602850703 seconds)
    (4/7) benchmarking "year"...
    done (took 1.594097357 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.537789068 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.519264578 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.539805929 seconds)
  done (took 12.335437423 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.493497339 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.774268409 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.93588712 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.649282078 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.483323476 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.509392676 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.468285029 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.514042665 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.51228724 seconds)
  done (took 16.716148906 seconds)
done (took 90.331911843 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.499142627 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.521358273 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.494859584 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.503998888 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.825804736 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.536601424 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.486407381 seconds)
done (took 18.24927881 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.466596329 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.474417628 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.462961804 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.491923393 seconds)
  done (took 11.268535207 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.474594048 seconds)
    (2/2) benchmarking "read"...
    done (took 1.793923535 seconds)
  done (took 5.635803794 seconds)
done (took 18.28067271 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.48299131 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.481406301 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.48154121 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.479607686 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.481330826 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.480631221 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.479836226 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.478783856 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.480587469 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.479221868 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.480704003 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.478064079 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.475709939 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.475676347 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.473963442 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.4740459 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.473408661 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.476953687 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.466202078 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.465227224 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.465030878 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.464330275 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.464552968 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.46487751 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.465840121 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.457961561 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.460124679 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.456965648 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.459426325 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.456928271 seconds)
  done (took 45.523085347 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.465574405 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.455491637 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.45224816 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.452506332 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.452321001 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.451451515 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.452768016 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.448891862 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.43986979 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.436776522 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.436989549 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.441859429 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.441215516 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.438232693 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.4398733 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.438265776 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.437294523 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.436519758 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.437751657 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.436042571 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.432261541 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.43728199 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.433216793 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.43304019 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.436780119 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.43416671 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.434231132 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.438856278 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.434365703 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.430124851 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.430305454 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.43070633 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.431532951 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.430297047 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.432047049 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.431009862 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.433863039 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.434263062 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.429663465 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.431610807 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.429397925 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.429256595 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.428664716 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.43099127 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.43032849 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.433267252 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.429994299 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.429703096 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.429865856 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.429344233 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.42947419 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.430941126 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.431263561 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.429672499 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.430548424 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.430744972 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.430768747 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.429371455 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.434950013 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.429166546 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.434133608 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.431722282 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.4302202 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.431881992 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.430486542 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.431628492 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.431358189 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.433491221 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.431884742 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.432043119 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.43163439 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.432521137 seconds)
  done (took 104.693379791 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.434496409 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.433397774 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.434014661 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.431906628 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.43171413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.431758837 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.437060823 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.431580659 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.432882486 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.43247491 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.434878714 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.433053912 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.431924519 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.431106537 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.431602476 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.433177235 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.431596459 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.433170287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.431579438 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.434482289 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.433509217 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.435045946 seconds)
  done (took 32.848674718 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.437193724 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.432286201 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.436620524 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.435218169 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.437475335 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.434616028 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.432582224 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.435596796 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.432648736 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.431324428 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.432310725 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.43432283 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.435811584 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.434447592 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.432036416 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.433826409 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.437750068 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.433179079 seconds)
  done (took 27.144475741 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.436727138 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.435094803 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.433677389 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.436133088 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.43577498 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.433906341 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.436263619 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.434829929 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.43221656 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.432524467 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.438358223 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.434979171 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.435720765 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.435212701 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.432844932 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.436499484 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.439206867 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.434267555 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.435762462 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.435370998 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.435165584 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.434663458 seconds)
  done (took 32.899926629 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.435177042 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.431794243 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.435255628 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.434338186 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.43500094 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.43358126 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.436867017 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.434691992 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.435513442 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.432790396 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.436521751 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.435584712 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.438258047 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.435510795 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.435077897 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.435336998 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.436188662 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.435113842 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.436295427 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.43984876 seconds)
  done (took 30.034932598 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.440761587 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.441030095 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.43640104 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.433264683 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.434073825 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.433456629 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.435504971 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.432223572 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.432218614 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.433001609 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.427966286 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.430923397 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.432800223 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.431063455 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.429815227 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.429579441 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.430042522 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.433726553 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.424160899 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.426837844 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.427885542 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.428830764 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.427159139 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.430377566 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.433804118 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.429391373 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.427816644 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.431240089 seconds)
  done (took 41.412973713 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.447885276 seconds)
    (2/2) benchmarking "in"...
    done (took 1.450430893 seconds)
  done (took 4.219942122 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.427884647 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.433779825 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.433804925 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.429328513 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.426605833 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.429392964 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.43254819 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.42850363 seconds)
  done (took 12.761587782 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.423742579 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.431654556 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.433502052 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.430113502 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.430593146 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.423607656 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.431067279 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.44004732 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.420353501 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.424504103 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.42695216 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.431161968 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.42409247 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.426857744 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.423982579 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.429154238 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.433438039 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.436205174 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.434784833 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.432661834 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.432619481 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.429351456 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.424948953 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.439047948 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.425935848 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.439026642 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.43332125 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.437784659 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.429816012 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.432724225 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.428758096 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.435737961 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.43293368 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.432009166 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.433781667 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.432936543 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.438331558 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.434764943 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.436423191 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.439089483 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.438794048 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.434361584 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.428671641 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.428667891 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.435140272 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.434147161 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.435230545 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.437118431 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.429684505 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.429069187 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.43801119 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.428365013 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.434954425 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.435263108 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.435526154 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.438189381 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.442067213 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.432430843 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.4290568 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.439565383 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.448052388 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.437564288 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.43587554 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.439014963 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.433893173 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.440999465 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.439419318 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.440500257 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.43761414 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.43756598 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.438629068 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.448392182 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.44257797 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.441096547 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.439482358 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.434368639 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.432874369 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.440247851 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.439815458 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.436300631 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.442591366 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.439917401 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.438266449 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.44008624 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.433538679 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.442769256 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.440715134 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.442575083 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.428534354 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.442192053 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.449207195 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.440744193 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.42920621 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.430904098 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.437322035 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.439969402 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.43034625 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.438616212 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.44460907 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.441029911 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.433683782 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.434522549 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.435062943 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.445654381 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.440444287 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.440778567 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.446068366 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.432738908 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.443200261 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.445208372 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.438877247 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.429881602 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.438023319 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.446490064 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.431573997 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.436884349 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.441028031 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.434857343 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.442288109 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.44029705 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.435536232 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.443381515 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.442963897 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.440077051 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.437014711 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.444585198 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.441357451 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.433714278 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.445413626 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.442635173 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.438393368 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.437938116 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.443508758 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.43828487 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.441874633 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.431389883 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.446757266 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.442059887 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.442315238 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.43664404 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.442108031 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.439798991 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.439917089 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.445522449 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.449407194 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.434255507 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.450745105 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.437841231 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.439050081 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.44003983 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.450367516 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.444803773 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.434769131 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.444192715 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.436257345 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.440331738 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.438890484 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.445062742 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.443067478 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.441711269 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.442143671 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.437082729 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.439596716 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.448409091 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.446466184 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.444196745 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.448594377 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.444420202 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.445415205 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.43517878 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.441995248 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.434348665 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.440561822 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.446300142 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.444815173 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.446863554 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.441902301 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.450202588 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.447496603 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.444294493 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.440584516 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.444464665 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.452635526 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.449080192 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.453058969 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.445004256 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.45039757 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.440751377 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.438318342 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.450653272 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.439458199 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.453029634 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.452985248 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.449629064 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.438174245 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.445863731 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.439044847 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.451288723 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.448271702 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.450224778 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.445334675 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.448342826 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.442724109 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.453413793 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.440065335 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.45069078 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.438728284 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.449383244 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.449060889 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.44826581 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.447224116 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.440267849 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.443777029 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.451062739 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.449299533 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.449414623 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.440452776 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.45018886 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.436636957 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.443313941 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.450248413 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.450250646 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.444076291 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.451843808 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.446341931 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.44662209 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.449654859 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.445194143 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.453084682 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.443610282 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.44535776 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.451857165 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.449336493 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.442032087 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.456654353 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.446825034 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.439104822 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.450976192 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.4576582 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.444737653 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.443830146 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.453262535 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.449920691 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.448304553 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.450960584 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.441268299 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.453932286 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.454833017 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.459092678 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.444191532 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.451008799 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.443709024 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.453179333 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.447477208 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.452254769 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.443651499 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.44818001 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.453630733 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.449457068 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.445018772 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.457376769 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.453296976 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.449891032 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.445133866 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.45199435 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.450120802 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.445598686 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.448978703 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.447215928 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.452243858 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.445829689 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.452877738 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.444659927 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.461080759 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.468844061 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.456314236 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.452458383 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.450831503 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.454982859 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.447120637 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.443310117 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.446459168 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.444855577 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.450328632 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.45005812 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.449764984 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.447545776 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.455587815 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.450699407 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.452968569 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.451419043 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.45095649 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.446877878 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.456194469 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.454136933 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.453525119 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.44327942 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.455216978 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.449824578 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.453787272 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.451520288 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.45056986 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.461571899 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.454237137 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.451651582 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.44998888 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.448203703 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.448645811 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.449331272 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.455559169 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.444290107 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.454577292 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.442517631 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.44769584 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.450346407 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.455289133 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.45506823 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.44789056 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.456964644 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.453054577 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.445633287 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.450490481 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.455591349 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.458240143 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.463570938 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.449426161 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.457487303 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.454298644 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.456649501 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.454368522 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.454255228 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.453185802 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.453297007 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.461727848 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.457551531 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.448343287 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.456453395 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.462509031 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.455776154 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.452837458 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.451505557 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.452853294 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.467113341 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.454228031 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.454377626 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.447389171 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.457668956 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.456803657 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.458775901 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.460713092 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.459673068 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.461045328 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.462175547 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.459695302 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.458470541 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.461336806 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.461402216 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.462587232 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.465442782 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.453603291 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.464951815 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.458529219 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.45000766 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.455916763 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.454649198 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.459961781 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.453013473 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.465140483 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.457774982 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.455867297 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.46139127 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.466510546 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.452942233 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.459160626 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.465472979 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.452729982 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.459188703 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.460724331 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.452330842 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.461886279 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.46226282 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.451850341 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.453988268 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.454107241 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.462212508 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.455255114 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.462978866 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.45130378 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.45966033 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.462842336 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.460970873 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.461415057 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.462598748 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.45525379 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.458309658 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.4584473 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.46585541 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.456858277 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.458873844 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.451377569 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.46426146 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.469039588 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.453943783 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.463217733 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.460806295 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.455936123 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.455845612 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.46355505 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.456895968 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.46610761 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.452525445 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.45370911 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.45746528 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.463437431 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.462748645 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.465642669 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.456068142 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.455857889 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.460636323 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.462599241 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.456321072 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.458394704 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.466085834 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.455063184 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.451864664 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.462652323 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.45580513 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.468991332 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.455747039 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.458951832 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.457812032 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.465839453 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.460877849 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.461719137 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.454659243 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.456601098 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.463544591 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.460302553 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.460867148 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.459831268 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.462844596 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.458978018 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.454350687 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.458381825 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.459847861 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.460072594 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.464423375 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.458405337 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.459500183 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.459845467 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.463284369 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.466319868 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.467076853 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.45629048 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.47344848 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.467081768 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.471486535 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.458595844 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.461357261 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.459922005 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.465553932 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.465457687 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.458666101 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.471156851 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.470818063 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.472741698 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.46477624 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.46352064 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.45733448 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.469506721 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.467351909 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.458721045 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.47352947 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.464133097 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.472807091 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.467525024 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.465192392 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.456316852 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.452831315 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.46309763 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.459574667 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.46536959 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.461779141 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.467380137 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.463697167 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.4668207 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.467589097 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.469189135 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.464847612 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.4606007 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.469763688 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.460263473 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.468293535 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.468071462 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.46020764 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.470463212 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.465818897 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.460442603 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.463481162 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.465662086 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.468316795 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.456870022 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.465421028 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.470669363 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.477800887 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.466954694 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.459728197 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.467131207 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.470116751 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.467098545 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.469996688 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.463987049 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.47893716 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.478431443 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.460532405 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.464915612 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.469620276 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.473874675 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.471578472 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.466392711 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.467450518 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.466002266 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.473087159 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.465457673 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.473562378 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.47452681 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.467544688 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.469061093 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.466154656 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.46835491 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.471645234 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.47867982 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.469184548 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.462662132 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.479249204 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.479902265 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.469431544 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.477418573 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.475326405 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.46997067 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.476016869 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.464093297 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.469009867 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.467634147 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.477795696 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.472306389 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.472864376 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.467743844 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.463884616 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.47385577 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.477037374 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.507305429 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.471155157 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.459868406 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.46595216 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.469119374 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.473527244 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.47146763 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.47325279 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.473396804 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.470986906 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.46599818 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.483858096 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.482398444 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.476918255 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.473244762 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.470837724 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.470593715 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.474414779 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.469250059 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.474197298 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.475209857 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.47329509 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.470535796 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.47949943 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.473711548 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.46945546 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.470530394 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.466417511 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.473455527 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.48109768 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.490192981 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.473852307 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.475502466 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.474350967 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.475135314 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.469740308 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.480020722 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.473839288 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.471427819 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.473546954 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.475670263 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.476220785 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.472833003 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.469612675 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.475594058 seconds)
  done (took 867.157509125 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.477792441 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.476776113 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.477354702 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.469733338 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.474139382 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.477208372 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.471673549 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.47610232 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.478239191 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.47487469 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.479335684 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.476309319 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.477996592 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.474965346 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.474998056 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.476167722 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.477924706 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.476463945 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.476923313 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.474484801 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.475106166 seconds)
  done (took 32.352062769 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.475682365 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.475023026 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.472194152 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.478748829 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.476871198 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.471725828 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.478935537 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.474405197 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.476490517 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.478715839 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.477744483 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.477125831 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.477876246 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.476601429 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.475248766 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.476851973 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.475221031 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.477420701 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.477280645 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.478423665 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.475121568 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.476998115 seconds)
  done (took 33.842856706 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.478248179 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.477505109 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.471272981 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.474659292 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.479945048 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.477535956 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.480063413 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.4775531 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.48024616 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.472547694 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.470810532 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.473101387 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.473066039 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.484634076 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.475790167 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.485664161 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.479248735 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.481539019 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.478534057 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.478763083 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.484129583 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.489888707 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.480094679 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.47361187 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.481026677 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.482379433 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.479861721 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.480732225 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.472888011 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.482872162 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.482071028 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.475350206 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.479853666 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.478953527 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.473695566 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.483427957 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.483428193 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.481197964 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.481179232 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.481072723 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.488131762 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.476896705 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.479260926 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.487339952 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.477716135 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.471598766 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.481146625 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.48161373 seconds)
  done (took 72.358231096 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.483411211 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.480055607 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.480266038 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.483911345 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.483795994 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.482522078 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.480496067 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.481110908 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.482250171 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.477554564 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.483347396 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.480732678 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.479534206 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.478588176 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.483681186 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.481519655 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.481340369 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.484491649 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.483305108 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.482045793 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.480168598 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.485215674 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.48367528 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.482742203 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.485245728 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.480846199 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.482952684 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.483631423 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.485941964 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.482680338 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.483338724 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.485380347 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.487655643 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.484930566 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.481868582 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.483601978 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.487156119 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.482099506 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.484597585 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.482845644 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.481172814 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.481796588 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.480582035 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.480641673 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.484837393 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.48498932 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.487960216 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.487064186 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.486800987 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.486249018 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.485252204 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.481710825 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.484064802 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.481399777 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.483638737 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.481808168 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.482158402 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.482222755 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.485341952 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.485343235 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.486902497 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.483045593 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.481394581 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.485683303 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.483086594 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.483811987 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.482924529 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.486043051 seconds)
  done (took 102.222908535 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.486182064 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.482690103 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.486026065 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.490719708 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.488154679 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.484541284 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.485258853 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.490526164 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.486201527 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.48882495 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.489345525 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.483811441 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.485363969 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.485057999 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.484442698 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.485726088 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.493348578 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.487705276 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.487257511 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.482284919 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.487873144 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.489520678 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.486365683 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.485516822 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.483774357 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.489751844 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.487275208 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.4915601 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.488724875 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.491292137 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.490326272 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.489616486 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.487634341 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.48810691 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.490951772 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.488085055 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.485994921 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.486672052 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.489234448 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.491911224 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.492648995 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.48788467 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.490888905 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.488651194 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.493332955 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.491570374 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.488986949 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.489922758 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.490488875 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.489943612 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.491980827 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.484920313 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.492148705 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.490693281 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.490171358 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.488236727 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.490763106 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.487929523 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.495169575 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.491996596 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.493700011 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.491212209 seconds)
  done (took 93.664369989 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.490519973 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.49393787 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.488170089 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.487939518 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.492875878 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.491470766 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.492403511 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.490762728 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.494160385 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.492851673 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.490872302 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.492258526 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.489283813 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.491054438 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.490364769 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.493136187 seconds)
  done (took 25.235788108 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.489425398 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.494466635 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.492911612 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.490205111 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.491791219 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.488671917 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.495862357 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.490095478 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.495555744 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.48985588 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.497338607 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.495348423 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.493011941 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.4940922 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.492208763 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.490867317 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.493225837 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.496351209 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.491477578 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.495702923 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.490526516 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.493024466 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.493847001 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.492690261 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.494395533 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.493912627 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.495544052 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.491693507 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.497137221 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.494640985 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.49234614 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.49589415 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.492672194 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.494767518 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.49522472 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.496214346 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.494321321 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.497437642 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.496747679 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.495864834 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.498297046 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.499412132 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.497330103 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.497165175 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.497594194 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.498337528 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.496310101 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.498963273 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.493583571 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.499400722 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.498208626 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.497982065 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.494423418 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.499956023 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.501133421 seconds)
  done (took 83.585249693 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.495385274 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.499106614 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.49947341 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.495890436 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.49749606 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.497739339 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.499549444 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.501016662 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.49696553 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.500207227 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.499584881 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.50205859 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.499163232 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.5003004 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.499455285 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.501168951 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.498017404 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.497003216 seconds)
  done (took 28.356712263 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.493302189 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.499346221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.499533865 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.499788527 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.499498012 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.500694758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.501306663 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.501909948 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.500453068 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.501611314 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.500300403 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.500588108 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.501560323 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.499910738 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.501633055 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.50168379 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.502454879 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.502302968 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.500790933 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.500110466 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.496971317 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.501285331 seconds)
  done (took 34.388218261 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.489203355 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.490449205 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.489367708 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.506039415 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.501302181 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.493828771 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.492037081 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.494121626 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.51135447 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.514730776 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.511582046 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.498350892 seconds)
  done (took 19.369907343 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.502327705 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.497834614 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.502946981 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.500699064 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.497602506 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.498633434 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.500163724 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.502807227 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.498673828 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.497150316 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.504545313 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.496261622 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.50344598 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.502123094 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.503848167 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.503096697 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.502024901 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.501540552 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.503130528 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.499843761 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.502719537 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.499745293 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.504460837 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.500623093 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.504561673 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.505422819 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.504982432 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.505050663 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.502348429 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.504088014 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.503661906 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.503664608 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.505805795 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.504704341 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.506723559 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.505729719 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.505580022 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.506099781 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.506455347 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.503387182 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.50637795 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.503983862 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.504375744 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.50721419 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.504864577 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.507123942 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.50477632 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.504746586 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.503276886 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.504473578 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.508573746 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.507362335 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.506051238 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.508849295 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.504094147 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.502060701 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.506784319 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.508617713 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.50759184 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.504846165 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.506716175 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.506667459 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.506528797 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.507072527 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.507513553 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.506806792 seconds)
  done (took 100.643292835 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.49977406 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.504158564 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.507657622 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.504669595 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.508489023 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.507279063 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.504397426 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.508078236 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.506378087 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.505281604 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.505467639 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.509967204 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.508914345 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.507174349 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.507393965 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.504749852 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.508796614 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.505617848 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.505939997 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.504793385 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.506937879 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.507750256 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.509618935 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.50735696 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.505029422 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.512885286 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.508021297 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.505810805 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.509154711 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.503619028 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.510647293 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.507046124 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.509356956 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.50908683 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.50851251 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.510660129 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.508420315 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.50660919 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.510649997 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.510988387 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.508126633 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.510256436 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.507120235 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.511744409 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.511597382 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.511802707 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.510400846 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.506925062 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.511542095 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.508970031 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.512641883 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.51068248 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.511487137 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.512077641 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.512270478 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.510973604 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.513593301 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.514690364 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.51201009 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.51347177 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.512196591 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.514813039 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.513924571 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.511832271 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.514486101 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.510333147 seconds)
  done (took 100.979839107 seconds)
done (took 1927.058078491 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.497119731 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.493972032 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.502778339 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.5567167 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.504196758 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.638157547 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.357824877 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.500262425 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.503054075 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.503430572 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.502158144 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.495922918 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.909981673 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.505249351 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.504259873 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.499257557 seconds)
  done (took 58.865377781 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.529689713 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.51935133 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.634428377 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.530575548 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.546373437 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.712526112 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.583402238 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.523658346 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.692082339 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.527457084 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.516936085 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.547278882 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.525488949 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.507774676 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.547331303 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.711324541 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.789981722 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.529890686 seconds)
  done (took 32.867708757 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.962729709 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.539790374 seconds)
  done (took 5.906619696 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.542742227 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.525793306 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.520118997 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.521259204 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.513228339 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.526389379 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.523553134 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.534914442 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.515846409 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.650193788 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.533442697 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.533025763 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.525944123 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.522186471 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.527029152 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.567314326 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.655401612 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.540136153 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.527834674 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.52509512 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.521152009 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.697836723 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.576186948 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.53892154 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.648494322 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.52495414 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.531824034 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.537357249 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.671512529 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.53403748 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.522411921 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.520481131 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.52170704 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.496422609 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.064536825 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.537188804 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.55290658 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.532476399 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.526054818 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.663755679 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.525239885 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.528311122 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.520022315 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.053523476 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.652383481 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.733477968 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.525180879 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.529705389 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.522664846 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.660683653 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.530373761 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.52723482 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.585273781 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.522420648 seconds)
  done (took 96.374474094 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.559497703 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.518118184 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.699195605 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.548789006 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.515776118 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.538291504 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.527254951 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.802246879 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.529028691 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.517745747 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.838581596 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.163495079 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.516530197 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.561988001 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.563983347 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.550896684 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.516362674 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.516247069 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.513900605 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.51949806 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.083884047 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.526846185 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.526611049 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.72076388 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.55599826 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078512967 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.525144169 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.516876785 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.522232018 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.517506931 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.11977136 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.527169236 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.57285716 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.515823063 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.809165284 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.9220679 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881082138 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.52780161 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.553273941 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.520999296 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.522463235 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064866192 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.89770806 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.522448293 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.518476345 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.072195643 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.519490345 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.515660874 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.519606075 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.78774428 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.52150723 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.522468765 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.530537224 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.520631074 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.515564974 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.587469274 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.582442383 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066453049 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.519880292 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.521138447 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.533972168 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.519348029 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.53064214 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.523280089 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.521336141 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.902649248 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701520727 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.521377857 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.897547349 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.116531575 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.516091531 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.214154491 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.516246765 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.541422607 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.632932977 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.522527345 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.516289788 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065548526 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.554333261 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.52115118 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874167675 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.520863577 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.820124281 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.532190593 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.518120114 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.114743257 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.527423608 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.58546895 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.52430016 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.528528452 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.529504592 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.523412902 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.80964382 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.547997099 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.520996095 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.519831921 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.554497543 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.520938519 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.531743075 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.525147799 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.190098218 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.528909378 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.520589586 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.521635514 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.517116385 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.520492015 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.521428166 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.517917695 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.801253371 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.52125866 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.534762656 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.522848985 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.520345658 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.520518142 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.720532046 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.521446611 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.832399155 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.523289271 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.518883664 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.527539731 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.525426813 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.567571983 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.518449442 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.526128299 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.43419597 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.884968006 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.539691714 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.521030842 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.523967341 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.523045184 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.527278306 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.526020644 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.559428756 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.522570146 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.340966542 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.555066523 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.549415317 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.522992366 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.529137151 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.528263016 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.525060896 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.528147879 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.841085312 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.811872837 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.766006268 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.524341081 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.526486131 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.336446148 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.573031372 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.704177083 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.543558779 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.520426462 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.822373958 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.724137524 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.526238959 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.527035992 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.522576843 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.807385197 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.542576026 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846297097 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.144496611 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.523089052 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.530333173 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.33965853 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.266561119 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.523750249 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.52799655 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.822275583 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.54593238 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.524750334 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.523312047 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.523055013 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.527118144 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.526004896 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.528278935 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.525024125 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.522842501 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.599113853 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.722762171 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.545191917 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.529002202 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068602966 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.535270501 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.524083453 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.52828912 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.525429559 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.526152251 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.572520436 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.532064646 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.561035848 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.526421006 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.531310498 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.140598307 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.526797607 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.531497273 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.721322827 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.288080575 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.525921583 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.526269732 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.529619978 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.563388339 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.10100785 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.527721602 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.835486139 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.535459769 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.570200841 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.532979509 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.54823106 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094293233 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.530423077 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.52865264 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.266866843 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.532288195 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.305557423 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.528827743 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.528719553 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.204320977 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.52541345 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.5335812 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.538680986 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.534339341 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.851074645 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.539628292 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.556595208 seconds)
  done (took 541.287074633 seconds)
done (took 736.68897366 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.523403276 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.532973699 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.532779377 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.536668836 seconds)
  done (took 11.539380857 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.546678899 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.540884476 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.546134153 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.534085402 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.544622196 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.533586637 seconds)
  done (took 10.66190709 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.527545347 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.538292167 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.539112954 seconds)
  done (took 9.019892991 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.736410668 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.540507756 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.893983309 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.535262915 seconds)
  done (took 10.12474238 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.543160976 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.543046906 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.544788095 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.54466594 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.545897179 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.546751599 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.549643288 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.547492757 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.549283619 seconds)
  done (took 15.332612167 seconds)
done (took 58.091546889 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.624175367 seconds)
    (2/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.732182191 seconds)
    (3/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.194472455 seconds)
    (4/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.694383549 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.60255795 seconds)
    (6/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.52090684 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.571260696 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.682840794 seconds)
    (9/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.571089516 seconds)
    (10/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.517554038 seconds)
    (11/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.365948603 seconds)
    (12/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.692272047 seconds)
    (13/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.517994857 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.634410995 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.395653638 seconds)
    (16/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.438016406 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.922670771 seconds)
    (18/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.654596965 seconds)
    (19/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.564334532 seconds)
    (20/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.576270274 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.639111444 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.561878966 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.611516684 seconds)
    (24/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.440094633 seconds)
    (25/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.602981422 seconds)
    (26/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.509587006 seconds)
    (27/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.513450946 seconds)
    (28/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.390861795 seconds)
    (29/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.388866003 seconds)
    (30/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.308375889 seconds)
    (31/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.515178764 seconds)
    (32/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.51372517 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.610639451 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.625241129 seconds)
    (35/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.358223599 seconds)
    (36/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.511009797 seconds)
    (37/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.89631323 seconds)
    (38/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.312637812 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.546575324 seconds)
    (40/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.512241674 seconds)
    (41/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.446716187 seconds)
    (42/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.60914094 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.603402231 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.680280468 seconds)
    (45/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.197759508 seconds)
    (46/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.515392546 seconds)
    (47/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.556663542 seconds)
    (48/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.791120052 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.933665684 seconds)
    (50/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.561119436 seconds)
    (51/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.753977502 seconds)
    (52/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.521556642 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.601852199 seconds)
    (54/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.527449694 seconds)
    (55/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.716733669 seconds)
    (56/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.561906672 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.508428839 seconds)
    (58/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.513893086 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.542566084 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.651926305 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.525280679 seconds)
    (62/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.527349292 seconds)
    (63/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.377114438 seconds)
    (64/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.796485876 seconds)
    (65/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.449522714 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.632334934 seconds)
    (67/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.725476915 seconds)
    (68/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.633956148 seconds)
    (69/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.676580307 seconds)
    (70/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.560128057 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.435226809 seconds)
    (72/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.268300605 seconds)
    (73/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.51884528 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.620732173 seconds)
    (75/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.514350309 seconds)
    (76/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.515884621 seconds)
    (77/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.512856414 seconds)
    (78/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.574338308 seconds)
    (79/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.513212979 seconds)
    (80/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.514903277 seconds)
    (81/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.368131871 seconds)
    (82/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.512220453 seconds)
    (83/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.580645209 seconds)
    (84/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.518875056 seconds)
    (85/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.52117112 seconds)
    (86/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.539299841 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.626163963 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.64259651 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.610444797 seconds)
    (90/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.61110958 seconds)
    (91/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.45359622 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.655218498 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.563217087 seconds)
    (94/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.622790039 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.684795172 seconds)
    (96/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.366588229 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.621820254 seconds)
    (98/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.604432593 seconds)
    (99/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.511023618 seconds)
    (100/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.520901031 seconds)
    (101/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.265323107 seconds)
    (102/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.574338977 seconds)
    (103/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.518527075 seconds)
    (104/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.626432795 seconds)
    (105/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.710852239 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.599981538 seconds)
    (107/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.529928301 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.653747327 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.63476708 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.789388386 seconds)
    (111/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.647859555 seconds)
    (112/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.531548986 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.577689132 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.619773824 seconds)
    (115/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.756463594 seconds)
    (116/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.521672261 seconds)
    (117/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.754592134 seconds)
    (118/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.732558765 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.633510756 seconds)
    (120/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.519764588 seconds)
    (121/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.562017921 seconds)
    (122/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.513542387 seconds)
    (123/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.519945959 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.511242675 seconds)
    (125/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.541934179 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.953600696 seconds)
    (127/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.61900995 seconds)
    (128/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.573634436 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.54387319 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.536778598 seconds)
    (131/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.835927212 seconds)
    (132/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.651798388 seconds)
    (133/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.605898097 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.64521828 seconds)
    (135/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.515334229 seconds)
    (136/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.523396861 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.665645528 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.618402658 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.776790213 seconds)
    (140/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.531292366 seconds)
    (141/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.528250029 seconds)
    (142/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.537558735 seconds)
    (143/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.498967667 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.607231894 seconds)
    (145/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.517390767 seconds)
    (146/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.40076439 seconds)
    (147/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.520899997 seconds)
    (148/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.545748482 seconds)
    (149/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.523542329 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.043692729 seconds)
    (151/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.773506099 seconds)
    (152/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.523952555 seconds)
    (153/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.525120808 seconds)
    (154/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.660344911 seconds)
    (155/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.865964431 seconds)
    (156/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.520690029 seconds)
    (157/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.589543014 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.692715503 seconds)
    (159/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.526890978 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.686041202 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.779870465 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.597171776 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.667635181 seconds)
    (164/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.553820895 seconds)
    (165/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.732181758 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.573427959 seconds)
    (167/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.740488815 seconds)
    (168/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.615631034 seconds)
    (169/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.519778252 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.663694927 seconds)
    (171/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.724712569 seconds)
    (172/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.586506825 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.619644542 seconds)
    (174/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.691887906 seconds)
    (175/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.523254536 seconds)
    (176/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.535729153 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.694199196 seconds)
    (178/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.546586641 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.659757242 seconds)
    (180/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.264488124 seconds)
    (181/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.372267993 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.643945186 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.747247891 seconds)
    (184/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.854168115 seconds)
    (185/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.527625085 seconds)
    (186/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.527924891 seconds)
    (187/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.638966784 seconds)
    (188/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.270081307 seconds)
    (189/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.524522976 seconds)
    (190/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.576310767 seconds)
    (191/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.521797278 seconds)
    (192/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.630980968 seconds)
  done (took 392.74940255 seconds)
done (took 394.169257078 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.567146876 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.63779011 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.547676952 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.547273973 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.549354944 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.548437353 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.569029469 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.547752521 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.561096239 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.561534713 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.542910015 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.558872113 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.56305238 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.556808402 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.582139088 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.547926314 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.549618357 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.555422457 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.562025333 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.561417807 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.54932768 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.54998627 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.574837259 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.549255927 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.556013466 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.557028349 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.556147086 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.549599951 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.553996403 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.562138344 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.548112371 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.557149768 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.564693283 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.559191037 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.551969811 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.557570814 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.550647924 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.642266997 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.569289977 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.560403745 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.557235656 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.564599503 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.553943417 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.55594887 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.561110028 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.57552704 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.556159386 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.565266141 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.549967263 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.555216882 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.574047061 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.560055785 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.558133429 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.542723983 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.566367775 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.564288958 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.558625514 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.56889252 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.556345813 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.554524992 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.586650725 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.569824504 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.557258815 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.557923168 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.557143917 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.566696585 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.558588015 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.567806057 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.557004474 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.554921768 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.554333201 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.560044215 seconds)
done (took 121.813970417 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.6725321 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.546870498 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.706873182 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.557666972 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.715314973 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.674413988 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.555104731 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.558815376 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.559785459 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.348544882 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.557856966 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.559464194 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.547814088 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.559256042 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.670395157 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.55986625 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.557936259 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.244910607 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.559112494 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.688193423 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.550223253 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.558659826 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.558380488 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.35248673 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.547196258 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.544487807 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.686683528 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.560458801 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.253138609 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.543869604 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.548005402 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.251765984 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.684677521 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.57853415 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.56950719 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.568773074 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.717040292 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.563377493 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.674396884 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.677153702 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.711726394 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.599576823 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.543829508 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.550878134 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.562499252 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.561121819 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.560638886 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.590241319 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.551942052 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.561717409 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.24789211 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.57172499 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.568563137 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.561083792 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.560090225 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.5819887 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.559880956 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.561371844 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.688447776 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.561575706 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.677898833 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.357461906 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.35117306 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.562350419 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.549954111 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.559990965 seconds)
  done (took 123.137733531 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.619486252 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.629145268 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.666472941 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.553748699 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.603587725 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.667347102 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.55561093 seconds)
  done (took 12.729692694 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.559964252 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.561536019 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.601103655 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.601150096 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.5618008 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.728818311 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.56218471 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.565725187 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.56149634 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.604001663 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.562688293 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.563329601 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.570288314 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.55112548 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.601758051 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.566744899 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.668771063 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.556740418 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.563871109 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.709739577 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.562066857 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.571373303 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.607229596 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.567480721 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.562772488 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.562070255 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.315086468 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.564882958 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.565254107 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.563283665 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.563507875 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.624367455 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.563115329 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.554513942 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.564117527 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.670582315 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.56468567 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.564557568 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.565997366 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.55522721 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.563885195 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.563812072 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.566969679 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.565545184 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.565703422 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.581604727 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.565045146 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.563393699 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.565695396 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.565583167 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.605845877 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.564183315 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.56577364 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.565805771 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.609824375 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.574158302 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.565233123 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.565741406 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.564846049 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.566004009 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.711690244 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.603025319 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.567162601 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.604729588 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.566564181 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.565524419 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.566466419 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.566835185 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.649360532 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.564616068 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.605073377 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.568479469 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.73943503 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.583265577 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.56808065 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.560657562 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.561464768 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.567448426 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.556163749 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.566902214 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.567772443 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.562852778 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.565614582 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.568264167 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.567541575 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.716770695 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.668027599 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.567754952 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.576302867 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.565842208 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.567887005 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.611610899 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.566595534 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.56738899 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.610292604 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.675043014 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.611587745 seconds)
  done (took 159.887904802 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.572523061 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.572873761 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.563168865 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.586710308 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.561202903 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.561675343 seconds)
  done (took 10.858116356 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.562242743 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.570866104 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.568172604 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.569335729 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.568460272 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.571091559 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.570276156 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.562166695 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.571532218 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.569662551 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.56952695 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.572373602 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.572034432 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.57117055 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.569191994 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.57046923 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.570966554 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.569517777 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.56917965 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.571691437 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.558194561 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.57135791 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.57191539 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.563479739 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.573948379 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.572119833 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.586184522 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.570646191 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.571350094 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.566503059 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.573251053 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.572509777 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.566034145 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.567425609 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.574818543 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.564248068 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.57458843 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.573449875 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.571045092 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.572083025 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.573539401 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.573217694 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.57316465 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.573687382 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.566318136 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.568007371 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.577765747 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.589122611 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.572698443 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.573397755 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.573302032 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.574179224 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.574410273 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.575606858 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.56622832 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.568666105 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.57678525 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.572655756 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.573501819 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.566736334 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.575811319 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.57335265 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.566601622 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.57411007 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.573607351 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.574537179 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.567769948 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.574912711 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.575227018 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.576060515 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.576539874 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.57420647 seconds)
  done (took 115.593834972 seconds)
done (took 423.638007095 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.044177175 seconds)
  done (took 4.489374233 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.582697384 seconds)
  done (took 4.029510199 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.50748586 seconds)
  done (took 22.955090932 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.63969054 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.567471383 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.590168336 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.565720351 seconds)
  done (took 11.807463457 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.025063487 seconds)
  done (took 4.469975661 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.577749395 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.56997749 seconds)
  done (took 6.594499749 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.86427879 seconds)
  done (took 4.310943419 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.247949341 seconds)
  done (took 4.695035732 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.592175577 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.579362029 seconds)
  done (took 6.625851254 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.546009581 seconds)
  done (took 3.993414312 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.382768011 seconds)
  done (took 17.828003405 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.590046411 seconds)
  done (took 4.036691784 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.608074037 seconds)
  done (took 4.055141918 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.094937088 seconds)
  done (took 6.540464484 seconds)
done (took 107.877236892 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.561122343 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.563311224 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.56462526 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.561228491 seconds)
  done (took 11.698238675 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.64007314 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.640717648 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.649336591 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.634032382 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.634217753 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.643554488 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.602629079 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.601712438 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.633268082 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.629198866 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.645461694 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.637342677 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.643451974 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.605308846 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.62942511 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.645485848 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.633387915 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.650697832 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.601182491 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.635807486 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.579493454 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.637127371 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.630257028 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.579922393 seconds)
  done (took 40.510478901 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.088209223 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.638377976 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.724238073 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.620672659 seconds)
  done (took 8.522305107 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.681693646 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.684488745 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.698872961 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.737532312 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.786635625 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.698285613 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.60579751 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.60128862 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.586343795 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.684347995 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.757196582 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.683222558 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.899122648 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.579893854 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.898245193 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.579929827 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.57982524 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.684101106 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.731697121 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.762863193 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.579381675 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.682715208 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.686738417 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.685214324 seconds)
  done (took 42.004724702 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.589668761 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.597034661 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.581147339 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.597421061 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.582292276 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.583907164 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.584581354 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.589083371 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.581670305 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.581020337 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.582139045 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.594950413 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.581889433 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.581493599 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.590086947 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.584231877 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.584528463 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.589018024 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.590583779 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.583045809 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.581443049 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.589867284 seconds)
  done (took 36.351485564 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.56616981 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.566897853 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.918600793 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.821875302 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.566930004 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.573517425 seconds)
  done (took 15.465708158 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.642723781 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.781666164 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.582778225 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.931517929 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.021576226 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.584183575 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.574978067 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.813942555 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.123149616 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.127478833 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.622875979 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.647963052 seconds)
  done (took 22.907454983 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65931949 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.577600062 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.582441472 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583956235 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.585744178 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.578620472 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.587014367 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.048400793 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.591187178 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85373498 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593938547 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670048436 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.825397845 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.577819692 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.589801832 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.562826269 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815422505 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105450035 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.587292129 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586209398 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.613072406 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.583963898 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.595920457 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.784831379 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.587046939 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.579735243 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.844056437 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.58005895 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86589648 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839563442 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841432945 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.583612737 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855217519 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998697765 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693777641 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785637543 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.592683949 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.583112647 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.568976053 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.592753468 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.583473896 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.583289835 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840036163 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584390627 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.58128214 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.589876271 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06015591 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.59569944 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.581127847 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.583006342 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.84375319 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666440749 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.587761482 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.582061269 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647694196 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588236972 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.587827904 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.696590865 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221745813 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58100518 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590093764 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.590470199 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.583168441 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584171931 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230424786 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.590008139 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.588779553 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590126924 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58370546 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.581721057 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606160448 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582681807 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.603484301 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584660277 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350955609 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.589782418 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.585079863 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152761569 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606119651 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.59039749 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810043733 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584558731 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584263308 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.58452632 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.583776438 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353346776 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.597795417 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.562708104 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619385702 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.052970018 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.79504184 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610816492 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614264966 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8072108 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.559897379 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586260471 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.58564413 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588558632 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60661976 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059523226 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590719515 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.591316548 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833840799 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.796801537 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.585868876 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.569571343 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070182473 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607630639 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.612309533 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.58700771 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.797768789 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.20556496 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854895088 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595460385 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.626132386 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.586228173 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422080419 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61166748 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.602260183 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.587046727 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869566481 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.444671593 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597558229 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660848625 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.587931826 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.586867754 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.599907696 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.598034576 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.588345252 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.778499655 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.595987248 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.855237223 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.596688268 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.589245388 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.586426015 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600057179 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.589645022 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.810106185 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588920476 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870706344 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.589513766 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590824809 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590127474 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.804589695 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.604957342 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.596735426 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929762735 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591603252 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.596821137 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859476428 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.626599636 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703256176 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622390521 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.596489564 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.844600232 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.593661629 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.598032745 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.603786102 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.592553333 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595351253 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.598271448 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583755928 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212575261 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569169415 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.594538467 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.59194968 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.607581748 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664881779 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598486757 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.796892694 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.597062961 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603171743 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.59836505 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.591403485 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818592252 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852752647 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.60465526 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766882466 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.058805142 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212765292 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607447456 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.59091419 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.590725749 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.591133514 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.592821049 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593021234 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.592997705 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7987084 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864028108 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.594315458 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.216988991 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596140758 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.593054847 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.600463705 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851072634 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.602913887 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596063333 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.592740725 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599931899 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.613189907 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.860250579 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817280046 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.609127234 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.593392011 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.113259862 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602408219 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.624685212 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.594279611 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.621973115 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.594721664 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133735048 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933423927 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.585915219 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857499402 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.610434592 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.611451693 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.59390549 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594717569 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599160311 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.608159943 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602407912 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.800833178 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.598356135 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596312378 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237335313 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368219468 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176815454 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.598470214 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.60347361 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.604253644 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.073493131 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600643009 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.59610505 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844516903 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067963427 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600538412 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07097984 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.614546779 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.36813169 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864738653 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822712657 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.60030599 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.617330601 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860897347 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.81049612 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625148512 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.596525205 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602611915 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.57307379 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13799218 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.611686423 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.77843086 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071489504 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609036609 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.599682877 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.680342587 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.609983198 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003505471 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.607720411 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599163942 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.604751359 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.61569383 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146621607 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.603122427 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.600555574 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248806853 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.605788963 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.086559484 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604386036 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.807290697 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.866279861 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.844034867 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.602049952 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.605631886 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.8427624 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862583611 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607236275 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.599300555 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172753195 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.463175785 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.608215649 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600688656 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.44826942 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610177616 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897876899 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.614806308 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.60925853 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61467019 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.601607882 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600903997 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.60028339 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.605977667 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577291312 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111452232 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.616271648 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607555195 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.614519145 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609161089 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.848677325 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.616709862 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.224094613 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838313107 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.602483716 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636379623 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.60671598 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600279245 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.579912372 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.602214334 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.602582344 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652326108 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.828343235 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.601377209 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.58439548 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.670353409 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.81904939 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.601917765 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.614359073 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821193001 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.608267883 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.618139606 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382921261 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.642531346 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.61694206 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614086155 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.60008838 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632344424 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679705494 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81064404 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.869057688 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.868416755 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007886596 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620100776 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.610759087 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.618599276 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686196053 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608642484 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.615977491 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.6038828 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225772481 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384527789 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238450122 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872393763 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.606766793 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614494923 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604693891 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849794786 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.602978473 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880558633 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60498821 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.606181059 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631613776 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620074009 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621467799 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824132053 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879475223 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.603903707 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607143764 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610719291 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.607100398 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873382477 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.81681047 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138445417 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186270655 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609669648 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.603708789 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.096275467 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88974005 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608277237 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.607585228 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60711163 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.607324248 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.609133374 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.621710833 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607125628 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862410431 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871206029 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040256407 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.877403561 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.637502535 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.487594266 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617680266 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.860131125 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438782896 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.817537765 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242051379 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34400503 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860537336 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685959485 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817931771 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.615499235 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845783321 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.607710358 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.614294779 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.610300821 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60986557 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.6087238 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.871671414 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244258848 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865664771 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.61538823 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.617179068 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.639236477 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.818633201 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.839930582 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387696765 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835988034 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878097877 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.619185881 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.609691074 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244426778 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877930341 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611191718 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.614906789 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830986801 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.616570678 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645624007 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.488654943 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.610135707 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187856331 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.832023063 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631960582 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.617844476 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35025894 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244703424 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.621932508 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13462311 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.619676933 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621616998 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893939113 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.618228675 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.617918077 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904824817 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.616930806 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.61199337 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832092525 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.24035875 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.398603958 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.620596005 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61433731 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.613293666 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614070971 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682986844 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615402078 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.612391055 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.004189266 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.621965764 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612328816 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625727566 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.623133078 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615332988 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.621912392 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61245752 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.620622899 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.610279396 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.590939083 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.624959253 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735550698 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186567082 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624148725 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.228780925 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.949335203 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.861536769 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.619071002 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.596178657 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.619319809 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615371339 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.613675692 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61635325 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.610761608 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196894167 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.62801388 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.885687827 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62095278 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.825833302 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827844979 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.616165039 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836047832 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626445462 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643555683 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.591306222 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613727367 seconds)
  done (took 1087.317988188 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.64996506 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.606265624 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.614631803 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.665557137 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.610163038 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.711965174 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.606672704 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.645762661 seconds)
  done (took 22.596409576 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.619392237 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.61663273 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.617296426 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.617984214 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.61687542 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.094833413 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.613665227 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.615887942 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.633583515 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.608033519 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.611482924 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.23358005 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.624933622 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.613714684 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.629716244 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.617472128 seconds)
  done (took 36.473340034 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.631447997 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.896246087 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.483369982 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.612667174 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.638401489 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.619601748 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.914564582 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.610736011 seconds)
  done (took 28.893702291 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.621745399 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.623928404 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.623405377 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.623796802 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.623308771 seconds)
  done (took 9.602924567 seconds)
done (took 1363.792721099 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.623168488 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.623594398 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.622472079 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.624926452 seconds)
  done (took 7.981026033 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.591883436 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.594985763 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.597439097 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.605731434 seconds)
  done (took 10.876703731 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.97834817 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.14478015 seconds)
  done (took 5.610989893 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.616502176 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.38094823 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.366461124 seconds)
  done (took 8.850811717 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.895449178 seconds)
  done (took 3.38400312 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.042534142 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.128154623 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.606818265 seconds)
  done (took 8.264299398 seconds)
done (took 46.456536137 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.609149766 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.386475794 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.765699647 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.622117726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.768043568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.763231118 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.858287809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.608871483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.611925385 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.613226117 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.6211096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.769935193 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.845977179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.371516486 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.845230605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.37051393 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.768011546 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.609229776 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.609057158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.634159296 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.858659723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.621488936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.614049248 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.607925139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.770274897 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.752049607 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.608011388 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.371089446 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.618855789 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.614441308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.752029011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.608759484 seconds)
  done (took 90.33788044 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.608436137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.624991836 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.610764204 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.625776596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.609662815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.624967902 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.611584601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.610132549 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.616805056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.615329436 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.61140369 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.609906735 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.612824024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.608647046 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.610341865 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.611562045 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.609655381 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.610352949 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.609086592 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.609105845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.612405011 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.610805401 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.623968433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.617534127 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.622371319 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.609579981 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.623836059 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.608736225 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.608769989 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.608919094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.610628642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.607085832 seconds)
  done (took 85.115288631 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.605408129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.614670956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.613715003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.61281291 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.611638459 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.618602873 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.614247071 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.61396081 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.611127683 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.622589106 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.606257055 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.607289599 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.609837421 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.610995962 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.608072516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.608988819 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.60879444 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.621884162 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.61969594 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.613465226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.612917159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.607274476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.620116439 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.621069861 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.612925273 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.641744886 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.615738157 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.62311506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.620533511 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.623578537 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.616325714 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.640580073 seconds)
  done (took 85.198546073 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.851493093 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.623813053 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.630801942 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.619808138 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.629156733 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.628274265 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.622557621 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.855329688 seconds)
  done (took 16.950554973 seconds)
done (took 279.090745864 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.625977757 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.621899877 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.646521053 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.620057623 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.63880734 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.649852919 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.824365062 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.648549191 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.817633743 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.624225582 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.64134196 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.62283832 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.421610683 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.760610535 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.616223919 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.623125906 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.503820165 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.616009686 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.633088124 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.842498097 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.64986137 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.614658535 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.625348576 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.513907715 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.600134007 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.687718923 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.686849063 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.779237508 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.744848905 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.686166303 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.624011281 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.624238612 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.625871368 seconds)
  done (took 73.953147974 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.619590915 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.631044752 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.631251541 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.6287453 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.63125046 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.632108554 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.623267313 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.632458392 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.628228489 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.631217124 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.633683662 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.633015292 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.632644084 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.633448425 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.631681049 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.609345955 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.623409872 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.63096403 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.62417992 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.612231311 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.630134137 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.632707681 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.632790867 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.631786131 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.633645841 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.632861831 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.630814107 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.633937869 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.632914303 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.633112904 seconds)
  done (took 50.374934749 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.631710526 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.619174499 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.620263203 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.631594595 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.625800866 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.630124537 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.912727797 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.640879813 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.630464172 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.629575462 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.578594903 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.635073684 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.673477613 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.622113763 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.630799784 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.635503903 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.634999912 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.626715653 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.621684427 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.642281699 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.922161617 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.642393606 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.917698842 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.648508486 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.631977272 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.629481705 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.632053843 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.620789939 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.630199177 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.580026883 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.412900032 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.914728143 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.622799793 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.620669061 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.418204911 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.644888038 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.634229457 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.593419844 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.63036113 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.628991613 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.909666146 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.630356883 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.620219689 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.617198165 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.630982966 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.638850758 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.622031232 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.587215446 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.872766724 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.636794928 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.622929595 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.632463822 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.640592434 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.632498654 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.874305574 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.629957875 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.627972181 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.622201659 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.634664216 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.914387622 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.640894728 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.631791236 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.624565837 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.63103833 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.623836987 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.631551117 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.646201111 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.634372729 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.622471149 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.633756123 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.626167863 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.63115605 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.639921821 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.583532517 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.625653643 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.624461142 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.634804077 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.628050256 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.626544571 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.9294337 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.642641853 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.625326833 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.92753265 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.638212068 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.63982403 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.643764539 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.641209287 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.702538547 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.915640365 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.533494682 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.64336135 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.625014456 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.919910477 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.642978572 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.634684426 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.62752874 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.644101525 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.64108591 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.626983635 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.626323167 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.63168064 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.648628866 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.62210389 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.635581236 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.921504038 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.642464523 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.626447973 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.630578211 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.702424653 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.639909614 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.643778253 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.634507983 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.923596311 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.639615783 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.63958225 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.614520937 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.607455712 seconds)
  done (took 233.763027599 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.623553158 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.622618724 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.62611098 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.624320749 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.62394011 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.632949265 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.626595552 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.630241297 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.62897048 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.626480312 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.629922314 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.635357973 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.633156445 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.62554003 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.627441914 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.626812651 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.626825334 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.632746124 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.628416787 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.628017734 seconds)
  done (took 50.058855996 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.640700268 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.193734642 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.163140132 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.647209457 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.642618796 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.632540343 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.688157708 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.648910496 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.640809337 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.933060953 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.804788499 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.646433678 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.641841749 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.641505489 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.160790515 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.624724362 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.93218262 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.200010237 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.648494258 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.196068391 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.627707838 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.644151032 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.631427775 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.197760595 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.948553337 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.920453333 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.697103315 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.20051048 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.646153778 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.643404621 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.199481866 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.648260426 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.636751671 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.188333249 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.647011297 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.655592642 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.643623216 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.694241216 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.697454821 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.943233601 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.209215909 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.932548007 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.66050523 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.804585996 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.650152686 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.62155222 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.210127768 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.648131957 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.622189127 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.645824779 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.650868673 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.173638442 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.642022004 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.174654466 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.646656676 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.644536333 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.199943534 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.179903529 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.166636652 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.812722359 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.642406274 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.921057374 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.650042602 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.210342881 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.651772584 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.644092065 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.640108232 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.803789265 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.2037318 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.920452191 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.945018664 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.933379205 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.641693533 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.69586915 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.640555044 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.929801951 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.693200161 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.018210687 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.934132241 seconds)
  done (took 145.960087862 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.888859154 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.723836774 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.006382075 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.212590803 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.132234106 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.767984063 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.745559452 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.872837501 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.656829021 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.737019096 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.290620171 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.73078967 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.355956377 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.694066534 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.735358565 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.757470479 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.041304282 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.624254179 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.29837818 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.262910406 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.641045771 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.730017943 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.408681148 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.000189447 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.642517825 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.402329561 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.574043849 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.15843168 seconds)
  done (took 60.590163125 seconds)
done (took 616.188835583 seconds)
SAVING RESULT...
DONE!
