cset: moving following pidspec: 15240
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.342817546 seconds)
loading group "string"... done (took 0.594160995 seconds)
loading group "linalg"... done (took 7.574892459 seconds)
loading group "parallel"... done (took 0.175925629 seconds)
loading group "find"... done (took 1.219528244 seconds)
loading group "tuple"... done (took 1.906963211 seconds)
loading group "dates"... done (took 1.295842952 seconds)
loading group "micro"... done (took 0.241129739 seconds)
loading group "io"... done (took 0.991578243 seconds)
loading group "scalar"... done (took 40.291432439 seconds)
loading group "sparse"... done (took 12.675773725 seconds)
loading group "broadcast"... done (took 0.997955739 seconds)
loading group "union"... done (took 13.79678886 seconds)
loading group "simd"... done (took 4.668383279 seconds)
loading group "random"... done (took 9.415949305 seconds)
loading group "problem"... done (took 1.953579173 seconds)
loading group "array"... done (took 22.199678885 seconds)
loading group "misc"... done (took 1.980304236 seconds)
loading group "sort"... done (took 3.367446209 seconds)
loading group "collection"... done (took 19.005876549 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.556375129 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144681569 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136228756 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.126043217 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186147955 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131396214 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142565508 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085886661 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.876001565 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160103631 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141823475 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.516813207 seconds)
done (took 4.908389663 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.193162425 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088865428 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099104822 seconds)
  done (took 0.845113979 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066198217 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128470846 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082173355 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067814311 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067566617 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082094894 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066854243 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067702949 seconds)
  done (took 1.22722415 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074531968 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070742325 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08497354 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069268526 seconds)
  done (took 0.964531149 seconds)
done (took 3.965833979 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.936160497 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.253818388 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19403941 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.485789204 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133460116 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189433541 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.660115866 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.353679642 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.218043744 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103568211 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108125101 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392020124 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106952924 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670945902 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077219855 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107611847 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.166633346 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43781833 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081488983 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082588968 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104825442 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140457983 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103254205 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077784814 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170420861 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071927 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.153992313 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095633255 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068467047 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.249538745 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189563339 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.726104016 seconds)
  done (took 10.615048857 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099155239 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120561547 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070555795 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142177504 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12175292 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071662284 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073941541 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082747579 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095251683 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163144796 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119050341 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125926113 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066569568 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072170798 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103016265 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232220051 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.09423701 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103287292 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073118096 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090766719 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110524633 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100108516 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081410769 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096164241 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150003795 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193701152 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10107447 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113507324 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070857493 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097590503 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130023588 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132973276 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068077871 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08431718 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.158856691 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09786221 seconds)
  done (took 4.587342251 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.100695505 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.176176033 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094283539 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156906081 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085686808 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130111481 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067119168 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099559478 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251434495 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.152932394 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.143925394 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.487991528 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128994207 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.087332037 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069393985 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087559277 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06871207 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.619101083 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144737925 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123406101 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084841666 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09189014 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071322206 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.720734319 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082539871 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067585985 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069012413 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.076988785 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14970374 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069030198 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.26767808 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090399151 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089361177 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120314518 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178440282 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101162495 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125489866 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084383124 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066768809 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173008825 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090990972 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069191986 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091860848 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122037952 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121308567 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083810912 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068135501 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185022579 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067820977 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100747134 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.931843787 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167363082 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.099031805 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068398512 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303484327 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103355216 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068289621 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065246239 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082598735 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.255340183 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186112927 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085292688 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068693025 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08404627 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070456269 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.728261824 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068696386 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.721764291 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072211603 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078537309 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086696272 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069401886 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090617718 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075173843 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102336894 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065566399 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068900172 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085623661 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068028804 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083598408 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069080252 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10300717 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066453162 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209701475 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083653099 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069101199 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065976708 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103934054 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112023018 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073054931 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06684505 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117883465 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070917215 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084951911 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104633937 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086349425 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103690817 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071365134 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128461228 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069389473 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.130739528 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068710318 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116094382 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077708396 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11504859 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09741424 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070555642 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156978276 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065778011 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082295404 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068115669 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082469308 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069193193 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069645901 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100021342 seconds)
  done (took 22.126570948 seconds)
done (took 39.092421067 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.311112449 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09565623 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09506072 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.094053723 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077752725 seconds)
  done (took 1.423044727 seconds)
done (took 2.143057816 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.15069056 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103386523 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081527889 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097201998 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082752817 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102607991 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117875238 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083088094 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118306811 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065307458 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115202932 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065887828 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080731169 seconds)
  done (took 2.01619059 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083702042 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086276422 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086654713 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082163057 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080261463 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08198627 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080500938 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105275348 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080913942 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088730959 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064372884 seconds)
  done (took 1.634857035 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081294596 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085522838 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086221494 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080751409 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079682844 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080807895 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080082397 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102706182 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080666585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090090893 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064699926 seconds)
  done (took 1.632572591 seconds)
done (took 5.998614927 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079084438 seconds)
  done (took 0.791979237 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.74783491 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.439215711 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084975604 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137066255 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223921615 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.160230985 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.464562605 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114234462 seconds)
  done (took 10.295886902 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.1150017 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088094916 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074154469 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086694851 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069951526 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086925426 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070799926 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074238509 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087630747 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073899504 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085718032 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07348108 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087377603 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072054966 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084263372 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069448574 seconds)
  done (took 2.083920173 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106050556 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.1054601 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092304332 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078649405 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091130128 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074548513 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093135591 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076223848 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087309104 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074843965 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092090736 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077140049 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089663226 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067974695 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091623984 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078587747 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08801906 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077543361 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091698316 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078855636 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091725229 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067156778 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088656223 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090863012 seconds)
  done (took 2.882388799 seconds)
done (took 16.772814257 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133655581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077675454 seconds)
  done (took 0.932384484 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083830209 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098984304 seconds)
  done (took 0.912145239 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084603181 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081679234 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093216927 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096038228 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083058132 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067532881 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104208674 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068393066 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082635981 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068600582 seconds)
  done (took 1.559047615 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070898532 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095285549 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072200938 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097838155 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076748597 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0813058 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076205634 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085400778 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079711863 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079040788 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072698034 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100734978 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072921646 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101526777 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090826635 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070637638 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087558636 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069931393 seconds)
  done (took 2.212285496 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067420564 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068388272 seconds)
  done (took 0.867202244 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069170406 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065435645 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081959846 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069057193 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079846894 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064495955 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079660525 seconds)
  done (took 1.241273649 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.412500442 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110138623 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.268233642 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072619192 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107964991 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.297990946 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068298228 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072713522 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088533626 seconds)
  done (took 2.270441855 seconds)
done (took 10.718526079 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080973668 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087383983 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111721675 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.444669122 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106396357 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067324998 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145358009 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.217415651 seconds)
done (took 1.990008032 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.12838916 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.636893469 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418877729 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232026807 seconds)
  done (took 2.023070351 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.387300968 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092155217 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074124366 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068609265 seconds)
  done (took 1.35797893 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068515733 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071382032 seconds)
  done (took 0.879213213 seconds)
done (took 5.121767277 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069090467 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068207234 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081017787 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067631162 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065004677 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081354272 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098733154 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084773376 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065263386 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084654866 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068197542 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067244782 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084978975 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065351099 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065320661 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082810943 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065790524 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06637837 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082575028 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065525847 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083220571 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06805211 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065493136 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080615305 seconds)
  done (took 2.552571964 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087244391 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083670125 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074254901 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088542519 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072481979 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.091980332 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073325685 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068997148 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087787877 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071757858 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086708607 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072972445 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085551991 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071701073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085705486 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073360539 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088776354 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068864832 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084032971 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072687498 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073889087 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083060671 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072814218 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088665241 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072137491 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086610486 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070778304 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084694842 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073849229 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087026233 seconds)
  done (took 3.123602308 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072146981 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064868062 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081858587 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072253516 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065959788 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083250642 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066220916 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081544533 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066118849 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066738788 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083325761 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06590952 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066486496 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082559906 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067113216 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08565071 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083150943 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066128911 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081917239 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066404936 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084779607 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06593973 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066449976 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082397696 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065447552 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065462384 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081237832 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065826223 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082124907 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065462911 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068248118 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084900284 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065894855 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072089051 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084187292 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066175596 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085291821 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065268621 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067132449 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081455621 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064442471 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065465535 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080790754 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072860617 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066071635 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083349744 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065562019 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083116664 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065237753 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069632105 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080579568 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066024973 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083305011 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066965732 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069597283 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080931794 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066205597 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065159814 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081171806 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065808862 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080050896 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064703587 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067640528 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081883446 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080645333 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088150005 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064492719 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066642228 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08225661 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068520376 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067489614 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094595916 seconds)
  done (took 6.027712631 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122783125 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094243183 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083271061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067814507 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080226349 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06601239 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068754563 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082151837 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067759615 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088086144 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06665207 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082953007 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067321599 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081198364 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081238433 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067930399 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08835337 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064053339 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065702591 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085398769 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065889272 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085416546 seconds)
  done (took 2.468217776 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190812128 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089760212 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112840554 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092569156 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086069886 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076118803 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088787435 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073065348 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07376201 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086056233 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070647242 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088035448 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069613129 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085989821 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071491656 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086465716 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071974792 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086532867 seconds)
  done (took 2.345864946 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080109485 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067684525 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106505201 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068380335 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085221332 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070842629 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089843115 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076904337 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086292596 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069271035 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09408097 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180597096 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085582466 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068699655 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085613813 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069584659 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071404868 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084325428 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078059006 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089314071 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073499943 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093103685 seconds)
  done (took 2.621535126 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083639772 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069716935 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101827972 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086580502 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06481986 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066965399 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090078169 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068748938 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09138116 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070009004 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08361062 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06878697 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073361569 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083467364 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073275695 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08436927 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071819292 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085321573 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06988413 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065431964 seconds)
  done (took 2.299998744 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089089202 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085123272 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069698915 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095352475 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070424248 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086626849 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078529431 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085301289 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069593656 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110432647 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070006026 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087595875 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077819075 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091666657 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068933644 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09483263 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09415716 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07887333 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085522593 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06996791 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11019293 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069864055 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094164845 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069006623 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085634843 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070169142 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085918225 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075975471 seconds)
  done (took 3.073514062 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067738705 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068580558 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081486457 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065388976 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06625184 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081062048 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065041078 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066400704 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083694168 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067114554 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083180302 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068017813 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068240864 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084393584 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067421281 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068747337 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08373074 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066067316 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06681996 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081013266 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068896732 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08383772 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068163596 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06600064 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081789608 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067122922 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065487585 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082116025 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067114635 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066184493 seconds)
  done (took 2.921524645 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079104002 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092614893 seconds)
  done (took 0.927202218 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066587307 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083321169 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081353116 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071841442 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090196105 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067752644 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093607417 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0735789 seconds)
  done (took 1.380204625 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08438176 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079926934 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086957184 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097051979 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079102564 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085991854 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158989417 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08533697 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075138902 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082796429 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082337268 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084141786 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075163244 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068239714 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091670995 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075417141 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083264914 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075523274 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071854867 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082960903 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07076849 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097553885 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070380021 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082159832 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069926458 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076971445 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097047132 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069736141 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087164345 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076164764 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089660942 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062895276 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084859021 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070790703 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06734356 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095317598 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08458949 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088486565 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077491069 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086041643 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079958723 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080746384 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074162533 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092060196 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08004287 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069146002 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085838486 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06403481 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083126458 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07163983 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064947226 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084717687 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063553193 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092826292 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.0722341 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09686619 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067815683 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070345849 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088001442 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072802113 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091883972 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070516091 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070975636 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084927396 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076693129 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090962586 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078280552 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081184663 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063755408 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067221805 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095503958 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091836808 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091466323 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070248146 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08622538 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066947474 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08847862 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070572852 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074159895 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091813169 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06924723 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090573414 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076033975 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084775981 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070443449 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09317048 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066663317 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071106904 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083462685 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087036459 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083586435 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066496019 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082546605 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.0784326 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072160396 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084155359 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06653723 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092775633 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062660702 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069453215 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085602948 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069132097 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096547572 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075222386 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091321107 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079312559 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093651962 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069333364 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088172522 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065739953 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069512024 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083894515 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076707254 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078657279 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071415148 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070125082 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086630287 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077489815 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083130481 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069732035 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093598229 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075294389 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067112459 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081663586 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072052053 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085323414 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072169921 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093597338 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067889173 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063555282 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08066363 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072677525 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085148372 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072546285 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09073405 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071767004 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062856906 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082724144 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073954329 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095358757 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069145072 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086106285 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076187979 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070269244 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085125621 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075063283 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087527094 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067126792 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074625736 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08506543 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064345581 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08846142 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072012967 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085362515 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072913456 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072000643 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08747595 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070088672 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084683152 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074568478 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086233263 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067683951 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069345891 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083656743 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080009355 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088438387 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065119034 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066467253 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092860502 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066533432 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085627548 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06861658 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0718441 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085755786 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066837776 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085138931 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070721305 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096990108 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073037733 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085842801 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073410589 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097815468 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068454032 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070965188 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085402309 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06983996 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.08682012 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0783583 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075476546 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089957045 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071722744 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082059578 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07601207 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09348905 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068961771 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066663141 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084555736 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071854066 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091713582 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073474543 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087370752 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066967679 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069907582 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088571617 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071601814 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085994771 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068444716 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091011238 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06803278 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093060047 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07070418 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079924379 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089763432 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064717296 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08855568 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066301801 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092307717 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065140425 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067188876 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085321566 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070972306 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067599603 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088456331 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063124791 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092525323 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078104132 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085756277 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067823919 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069286182 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091983269 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070755689 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090208027 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07155923 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092896002 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07947954 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068162883 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088177439 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080284507 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085597944 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063756708 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091687367 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067973539 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068768125 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084726152 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067869054 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089057333 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077663998 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093497144 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062246906 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071342089 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083497264 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068113901 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080838151 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073833218 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071562022 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085994964 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076142775 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0870589 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069056521 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071737816 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084946408 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070462871 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086609571 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072080349 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08726116 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07136353 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067865427 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087840104 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068781045 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083364202 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07055803 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069321817 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085757444 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07553029 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085045987 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070176639 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071222731 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086455803 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070833521 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086433236 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068646223 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089486796 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070395486 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068888902 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088307657 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064679948 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092983311 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067888401 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076744766 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085261324 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065560541 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09040087 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071561531 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091060387 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070549521 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068842435 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086804846 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069200376 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088231305 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075798799 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066203785 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096696999 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077632006 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086124077 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072040751 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086278417 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06994992 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06750191 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086309886 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069692661 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086012624 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068646156 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090240297 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073274615 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069737562 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088217543 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070854365 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085303679 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071620874 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063052057 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08468853 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067840447 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086552714 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080210918 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069417774 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086221286 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068015578 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087309916 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067767378 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06554388 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094629866 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095474814 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068926556 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077101864 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085449485 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071338347 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096833021 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066450332 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084129472 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066734755 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066624858 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094290558 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071234034 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096252236 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06904656 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068871103 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083149438 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070034373 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085702105 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063435708 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066990394 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08991076 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067985997 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084549228 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069886755 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073433527 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08735315 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079255086 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084711976 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070235901 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08719935 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067001572 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067925487 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085369233 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071873279 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087231555 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067001974 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066373186 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086593177 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068904931 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070405804 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085527516 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069747864 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093232745 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06895512 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088629499 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07233386 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064209831 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089394055 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069281494 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08632994 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068927052 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0732651 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089571857 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07001755 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095211325 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069472878 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086183619 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068512929 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06772921 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086443525 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069358287 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085508447 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067720646 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069245461 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096268583 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067288774 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08969357 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06974219 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086202422 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077076293 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068938215 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090353174 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076704753 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087258932 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071196493 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093724953 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072916008 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089646798 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070170074 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069779583 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092741571 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068825939 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091876423 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069893346 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068595255 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087482367 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066926934 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086126504 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069024314 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068212258 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092589193 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069705212 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085630595 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068077271 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067201295 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086608853 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07355844 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09362775 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071673224 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08896193 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065259305 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065702485 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087059633 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067196115 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087896365 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073637673 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074411965 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08823579 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068936536 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085668068 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07789898 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092090793 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073443969 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066818433 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090051799 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069180675 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089430768 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070137487 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069050082 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087584375 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074012148 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08726852 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06951372 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09439811 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073003225 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070882508 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088456805 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070048446 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086660919 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065887069 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070098531 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08884806 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075135374 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088899815 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069981908 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097168864 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066552268 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070442068 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090827075 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068629985 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091207227 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065731507 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070092131 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087149112 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070811291 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082274874 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06868817 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067650156 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089302505 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068700354 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083127196 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081083892 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097297091 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072657724 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068076653 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086469543 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065612383 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081770414 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069341681 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07072432 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08764939 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079852318 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086536235 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06737689 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081168828 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070646679 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072803481 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089800464 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066599788 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081489912 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068330624 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07248841 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092810258 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067947945 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085792392 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073242667 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071854102 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084376107 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073155338 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084263127 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073202845 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100561077 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069747734 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069277036 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093039756 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076596793 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087971896 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064844031 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087224458 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072161833 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069065225 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088287863 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069328273 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103151539 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072220537 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085319602 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06842246 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070783984 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086780733 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076779803 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088857589 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069042944 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091394433 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070985533 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095487013 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07206226 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093925632 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072865751 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071318622 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085280417 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070020171 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084861378 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068415499 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070459475 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088815774 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073949932 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094663456 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068724515 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099396804 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078977112 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088735731 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066589876 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069039771 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086591859 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065368496 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070277364 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085541975 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066782136 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086671315 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069054254 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069914027 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092231262 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071608729 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087978025 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070042829 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063394884 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088902617 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071938469 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088588012 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066397314 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068945817 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088684311 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073297019 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089929576 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067253306 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088835117 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071640622 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06945289 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082856804 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076197095 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086747456 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07314404 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068475647 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08726213 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070947508 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089783706 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075881196 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088132221 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071950744 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078533364 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08893394 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066063005 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084110848 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075228883 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06818531 seconds)
  done (took 47.464982043 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112145167 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083952159 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064653137 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082494623 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077220209 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083955866 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064258197 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065289132 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08329524 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067489846 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08198849 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064819901 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091922068 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087854015 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095390541 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087073596 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065765165 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066443691 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08163192 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066608969 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091896954 seconds)
  done (took 2.46565824 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.090007545 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.102749627 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081567015 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102633169 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092829043 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079908951 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098349971 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080815043 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101964524 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094993959 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08260923 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098266875 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077653934 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095046331 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076344128 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096016796 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101890427 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074828308 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100223499 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080746818 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09645693 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099289031 seconds)
  done (took 2.800803151 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070582271 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068807986 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088944313 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06395946 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068222137 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082752037 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073379767 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085526404 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072270217 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067018887 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.093798715 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066668163 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088721913 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066720947 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068154934 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083874476 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135522746 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071377651 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086858031 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069433088 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063294112 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090072065 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064178683 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082883168 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067403743 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073672757 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088439477 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067017724 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08710067 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067964966 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068643102 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084681764 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069615016 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068085879 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085414064 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067088975 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086768777 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068765294 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064534205 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084962861 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068975867 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082477515 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069136233 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070209397 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084700126 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066569494 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087567628 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069632751 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063902599 seconds)
  done (took 4.535627093 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088615732 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.14400282 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089637649 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125461439 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084157438 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094981997 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073092583 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123799147 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085091361 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066699733 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.104801567 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084906854 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088972575 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07393185 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091313135 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069813688 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088725768 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067527703 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091171915 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069189466 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091212238 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074977842 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10236604 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083764258 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09057535 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067490865 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087093281 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074212317 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101588247 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092032051 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.0748548 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092274633 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084565645 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09301242 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067707336 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089721055 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086413184 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088244162 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07108008 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085522767 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071318961 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092865331 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07626893 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104790708 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069743061 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092734397 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069096817 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083645449 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081293806 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089687051 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077843901 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103604506 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09126698 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070691226 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074468339 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103436272 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086886579 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06706847 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072702476 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100788988 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084893928 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072734891 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101085054 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071585405 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094928735 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083434359 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092650898 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072359885 seconds)
  done (took 6.794764472 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078066073 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093331838 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08359479 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102183269 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093549298 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076516894 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093493054 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07547653 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094419899 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081985039 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094941934 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116721864 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070094248 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098294517 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076121445 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095467885 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076429408 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094594062 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093010597 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076223037 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093315381 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084794649 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094535594 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102757588 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10512508 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089055712 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075504497 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092824451 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105061118 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075734041 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106775729 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076036325 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09403357 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101664264 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087844561 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094353939 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067749809 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094561157 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076362463 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093915965 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070058987 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103993182 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093101045 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070805901 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094116831 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07660292 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102124959 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106897391 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078009378 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098751937 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07550381 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102592694 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09460313 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07505034 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104172865 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127841072 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084038256 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102601276 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094229661 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085176439 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103192949 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108952435 seconds)
  done (took 6.442029923 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091427273 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098150204 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099514862 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064792335 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066113156 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09287607 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067899298 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085037673 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07899714 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096442692 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080721006 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091568603 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076599482 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099791824 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091291615 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077145736 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090784128 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073653127 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096410697 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073239734 seconds)
  done (took 2.502776776 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07783583 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105296614 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070270111 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093377383 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072674344 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075349107 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090957348 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072033932 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088652179 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071404112 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09779493 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080072733 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088328457 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074802717 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098533778 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075738505 seconds)
  done (took 2.149518318 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081576854 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097841115 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084047925 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088947497 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06727049 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085057245 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068929535 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065286815 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085612581 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083259242 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089033425 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070934786 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088534193 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067217703 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066158031 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09167648 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064854273 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086088957 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069637889 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103583194 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080633279 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087325638 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069126502 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090348292 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069955525 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094783903 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070265737 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066953069 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087196713 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069777264 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088382104 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075368852 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084494966 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068430457 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086220326 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067608252 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06927772 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088562185 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072483812 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087658676 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067258382 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087966067 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070163776 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069836987 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084222164 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069863536 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084971617 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075758374 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067322398 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088329542 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068512164 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089216456 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071316601 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097655713 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073807614 seconds)
  done (took 5.16505877 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083355474 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072283481 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084327895 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067920719 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09057042 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070839259 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072301453 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090491126 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071434468 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086463139 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071979135 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090751312 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071291893 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072947441 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091457849 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073395797 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084018609 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070554266 seconds)
  done (took 2.237051393 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074890095 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069080997 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096264051 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069755069 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089052792 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071559161 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065065459 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087854067 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068014025 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088436968 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069965924 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071724002 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08656362 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071359161 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088832551 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069622004 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071001747 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087214327 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069607284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085009046 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071059279 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067401279 seconds)
  done (took 2.511171397 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075016351 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096880766 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.168231897 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110809449 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085405755 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102740735 seconds)
  done (took 1.461581366 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093367078 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102955625 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069746891 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109559807 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078852681 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08957345 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072419532 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090088329 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081788634 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10490201 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071431663 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100891724 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100137598 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08364108 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097285246 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0776342 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090486959 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071314237 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089412364 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11075631 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072153151 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100117517 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071318231 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089842781 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072039005 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099617372 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099305425 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086067233 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089147424 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080651531 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096532986 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070683528 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100414016 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103047337 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072620861 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099092076 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07121848 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109757445 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096409946 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079304764 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092685806 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079539597 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10021473 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077341762 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099960123 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090204213 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077464051 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08973248 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072024338 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117833134 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097448088 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080453869 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096508975 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099679817 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079710172 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117103175 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104468333 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07887467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096540132 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104369921 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078663017 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097671607 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09954154 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086207623 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096937393 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080027163 seconds)
  done (took 6.760359385 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086048177 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108554457 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072215966 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10402708 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09936194 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072874193 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090708665 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073266045 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090166277 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071413791 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134004338 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070879907 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099114263 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099659836 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07265984 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089964404 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070893741 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098652341 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070524936 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117387973 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09099367 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080769665 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098134415 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097979641 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085416455 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096865882 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071399985 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091772561 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090301293 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071890268 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095476201 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072882575 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098311745 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071038341 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098084886 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072025632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090398403 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077114048 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09132152 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097189225 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07975649 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110995289 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070847931 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089665803 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105420041 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072209047 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090420587 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070904081 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090389775 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070771533 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104754219 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085427849 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104962707 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100208364 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071557642 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09104568 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071447808 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090363958 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072033929 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096354709 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099391172 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072423951 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118327875 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091408158 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073085303 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09881391 seconds)
  done (took 6.654073295 seconds)
done (took 130.424938497 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202790792 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186519389 seconds)
  done (took 1.211243827 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071239741 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.119366357 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081915345 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130907004 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088996332 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103291041 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122335299 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082072238 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068721864 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089627573 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069862455 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09058259 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135137455 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069600859 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089227091 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070690935 seconds)
  done (took 2.312923674 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107578951 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201926312 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113328025 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068301515 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104062923 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08152664 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087754977 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080236991 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094821459 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067795716 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101366784 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079381164 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068799138 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099246957 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094014345 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081355808 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068052391 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102124285 seconds)
  done (took 2.534907462 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11020162 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145142551 seconds)
  done (took 1.087763454 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203740179 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124750477 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211069845 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.483258112 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.248738122 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.29403847 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.176861848 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176412618 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.159492514 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175241057 seconds)
  done (took 3.080452632 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103212804 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175670232 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.32403979 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142902015 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.092477758 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118719046 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.144440235 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.11245416 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085460966 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105419266 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104850812 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080272311 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1217461 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079284971 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09861924 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08085712 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125921855 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076650804 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097846217 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079929894 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122015837 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069699883 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098128569 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076180811 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.102616166 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082744979 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088954967 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068368053 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098471958 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078191209 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102891653 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118164819 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082655292 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13780852 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105529139 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.137777561 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100551957 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075871941 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078131373 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094605783 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080222386 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100807491 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107606276 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080994188 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067788615 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09875633 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068524215 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087899788 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083756136 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100346255 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083652555 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1013248 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.137071674 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101093657 seconds)
  done (took 6.404881185 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.762137738 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137741984 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074149633 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.834025742 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118898366 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08645968 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.755031419 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097217935 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24106854 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.765647 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114864454 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080432154 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212759144 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219259738 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.910283721 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292740839 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.651008604 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108705257 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112026031 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1362896 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164861777 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160449043 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.155425961 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.410612403 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098626151 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073913161 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142870919 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10022549 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14489568 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107678773 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076402854 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.163347719 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251916786 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.16566447 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099654842 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074115418 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072907709 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.174576919 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.229183422 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198716261 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.164979985 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070188529 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092892828 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146926301 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135847991 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071840652 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146857133 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179432968 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.156552196 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077113695 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100673556 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148286418 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.146933369 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.150323891 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104028693 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29303226 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.297209449 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074426441 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125404248 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087627294 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243757896 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106373077 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.187701025 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142516223 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196975915 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073116142 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.763512657 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154951059 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093004857 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079690791 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123963953 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098482398 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.145427132 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151208099 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388995042 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.151838519 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077494035 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092503096 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189535803 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10637816 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072457772 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146791357 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099141673 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126226411 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.151251078 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.152501485 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.154096267 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231653032 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.15147506 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144702673 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097060353 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130293758 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077968733 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.199163904 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201997888 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.148657084 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.194435976 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166851941 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.149881243 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.154155152 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080677211 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177497162 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126049126 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085820144 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144701877 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200577641 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.12822219 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106134455 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077395448 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.145548332 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.128711153 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109987845 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.14658682 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152959818 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458258151 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.154455659 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070777236 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110807257 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147280078 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.147702438 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099164898 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225363267 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129583925 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.153532567 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125284562 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090184373 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124701308 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.148694682 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082895273 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127561149 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16464293 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079863312 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219969701 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198574899 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082904518 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226243073 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166804582 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078850779 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156060145 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125118123 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150591697 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100577122 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143449933 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09909759 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73378207 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.168781367 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127278824 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077573195 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169396521 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073803266 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107505364 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085957142 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090630817 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775020812 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110100854 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104513751 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085195943 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09916358 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127771538 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143891822 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0778262 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165825202 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191701753 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101987326 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124206114 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085519239 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.145358069 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098090573 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107843322 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087919074 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10736008 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127516252 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076357387 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107503731 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152648538 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.147446333 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.201569329 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.558733544 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093939 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087533715 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211072318 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094109684 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.248964995 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142377104 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.2072073 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.147721176 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103702972 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.299412934 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.149588004 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.169820518 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088024795 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.155829735 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090365893 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142201292 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.150255593 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094105785 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079434932 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.146220106 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.172341367 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149025096 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.949950575 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073226499 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209356763 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089946195 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.155494639 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07879725 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100922517 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270143049 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07314216 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152804463 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.150525015 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096536703 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108438814 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.824093871 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085980402 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.165644959 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078963154 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202671198 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.148187493 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143258093 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163955461 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08211756 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.145784065 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.193184906 seconds)
  done (took 41.819833603 seconds)
done (took 59.277990077 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285564244 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218070703 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.235549024 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150156291 seconds)
  done (took 1.8213442 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.150882411 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109314247 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121139009 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087793083 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.109051666 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088299848 seconds)
  done (took 1.523288193 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.431492402 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281180417 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.264075997 seconds)
  done (took 1.835238548 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.306551498 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236482314 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461408804 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.306733709 seconds)
  done (took 2.276694806 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198174246 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118900249 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.092420544 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087423264 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.189135976 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248527085 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131052695 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.193733785 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102700667 seconds)
  done (took 2.266305091 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.18460499 seconds)
done (took 10.762596658 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.167381037 seconds)
    (2/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.266217758 seconds)
    (3/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.141476802 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.167001317 seconds)
    (5/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.260590819 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.288444104 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108710484 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.290305473 seconds)
    (9/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.177228923 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.229496249 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08003557 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097829607 seconds)
    (13/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.183457577 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.141788306 seconds)
    (15/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073191122 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.206561477 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.286063598 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.316405684 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.102828193 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079640923 seconds)
    (21/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.265337579 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.140933682 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.06536583 seconds)
    (24/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.134536713 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100313244 seconds)
    (26/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.222614715 seconds)
    (27/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105625928 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.224905215 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.231358491 seconds)
    (30/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077043253 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074857575 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122036455 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.120903807 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10024155 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.145572759 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054567319 seconds)
    (37/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.114976628 seconds)
    (38/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.252026427 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068470602 seconds)
    (40/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.216843741 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.266144447 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.282750654 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076298312 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.243425706 seconds)
    (45/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.103679276 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096934113 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.241992846 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.120412163 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099562734 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094555479 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07939943 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09166285 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.253173008 seconds)
    (54/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.13202578 seconds)
    (55/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077860508 seconds)
    (56/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102553832 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.255809236 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.2542892 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076816587 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.260057907 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10285982 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089857158 seconds)
    (63/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078756332 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099931986 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115340713 seconds)
    (66/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098627128 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05409284 seconds)
    (68/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083762964 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.176582605 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098010737 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053647153 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069490006 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075239147 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090089578 seconds)
    (75/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.10372026 seconds)
    (76/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054675222 seconds)
    (77/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215322685 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.260921613 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09417042 seconds)
    (80/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.132951635 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093777707 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091078696 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.244592258 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077293246 seconds)
    (85/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079481568 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092738199 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.068899899 seconds)
    (88/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.105996435 seconds)
    (89/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145431753 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.170823934 seconds)
    (91/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.128372496 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053401662 seconds)
    (93/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.24649483 seconds)
    (94/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119349066 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05549053 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054509151 seconds)
    (97/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064158776 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.269463945 seconds)
    (99/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09724871 seconds)
    (100/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.101223226 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115176109 seconds)
    (102/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069905951 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.265553993 seconds)
    (104/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054506081 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118706736 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053411808 seconds)
    (107/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200458526 seconds)
    (108/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069270493 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097579906 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.103055832 seconds)
    (111/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071144024 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.117815979 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119238912 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100700522 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169582013 seconds)
    (116/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068665968 seconds)
    (117/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090851263 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.242328452 seconds)
    (119/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056814087 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128844576 seconds)
    (121/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100495681 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.172940836 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.079417917 seconds)
    (124/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139372667 seconds)
    (125/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070263967 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06900667 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.097968026 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054220283 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.245727682 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093804906 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.077359474 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.157161379 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.163627775 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.099381308 seconds)
    (135/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072144255 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077114204 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.121014702 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.272747906 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075673497 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074454211 seconds)
    (141/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115901183 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077378404 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069165706 seconds)
    (144/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097573697 seconds)
    (145/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06515967 seconds)
    (146/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.183656472 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10145897 seconds)
    (148/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097746156 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075178953 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098658387 seconds)
    (151/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.114512405 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068776462 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149203848 seconds)
    (154/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053109936 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161534255 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067964674 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098112389 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053274757 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.127758665 seconds)
    (160/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070886856 seconds)
    (161/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053918792 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.101002271 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068142215 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054497636 seconds)
    (165/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104909335 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079909224 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098905849 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.0547695 seconds)
    (169/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055376927 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090380997 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053263613 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068683525 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114177307 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203312856 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074756129 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142052787 seconds)
    (177/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106151651 seconds)
    (178/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.092309419 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053796425 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068049611 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112995231 seconds)
    (182/309) benchmarking ("sort", Float32, false)...
    done (took 0.153313244 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069113966 seconds)
    (184/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069440807 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075546165 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085942139 seconds)
    (187/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.0755153 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07818259 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089070351 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095964435 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075611207 seconds)
    (192/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083213838 seconds)
    (193/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.183491235 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 0.151129258 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069683794 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.10019379 seconds)
    (197/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.113487912 seconds)
    (198/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053481876 seconds)
    (199/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.10182418 seconds)
    (200/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069038601 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076882494 seconds)
    (202/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054352714 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091939492 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088749582 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05576572 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.14358589 seconds)
    (207/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054137244 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069182442 seconds)
    (209/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086238349 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063076043 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139392005 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099942634 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076269059 seconds)
    (214/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.076631344 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068869667 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053707507 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078551706 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.240202325 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.07682368 seconds)
    (220/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074612899 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168811708 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092954144 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096357238 seconds)
    (224/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073979548 seconds)
    (225/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.110864721 seconds)
    (226/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109745824 seconds)
    (227/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082652808 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.101604222 seconds)
    (229/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06391787 seconds)
    (230/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091736918 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067610789 seconds)
    (232/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067355843 seconds)
    (233/309) benchmarking ("sort", Int8, false)...
    done (took 0.16767321 seconds)
    (234/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09383343 seconds)
    (235/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055738002 seconds)
    (236/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075550463 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.168626581 seconds)
    (238/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075022221 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097729295 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090365014 seconds)
    (241/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.075986903 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069089906 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081809729 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07596498 seconds)
    (245/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055777428 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.261890689 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068722055 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068376803 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113531265 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.1316104 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055319915 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054962995 seconds)
    (253/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054088213 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090820052 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150088929 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163441519 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096466718 seconds)
    (258/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055127926 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055207768 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.194370377 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198386925 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076691542 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078056055 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09764654 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.101546787 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092152901 seconds)
    (267/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063421254 seconds)
    (268/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14366686 seconds)
    (269/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054869991 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055129643 seconds)
    (271/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.12536668 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069647908 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054701236 seconds)
    (274/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098174112 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054240397 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078147405 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.158929871 seconds)
    (278/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054707063 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090919352 seconds)
    (280/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095909042 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053810114 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099220902 seconds)
    (283/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070056456 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.095513937 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069149341 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066947354 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089658428 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.117903101 seconds)
    (289/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085401757 seconds)
    (290/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076511123 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076958266 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19478599 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204409251 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054939908 seconds)
    (295/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.077670351 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074027206 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068422026 seconds)
    (298/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092899948 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089448556 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.095952103 seconds)
    (301/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055190433 seconds)
    (302/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082461476 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089688951 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074621897 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068439086 seconds)
    (306/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09460287 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068792705 seconds)
    (308/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054157544 seconds)
    (309/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.07540472 seconds)
  done (took 35.915500772 seconds)
done (took 36.775080466 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084674727 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118404453 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078679211 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119066174 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083264195 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104963095 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076885221 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104371761 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084127684 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108978603 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081987182 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057570066 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101098157 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078892043 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101142506 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096846005 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103404254 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075898484 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.098723931 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067743256 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077337351 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090260922 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070779468 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05678931 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104128677 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07615632 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098929209 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078922373 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068484443 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090404076 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071968602 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098759209 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068476941 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083174411 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096631411 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076306988 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101525176 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080310882 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071048128 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091102531 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076867912 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091131972 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075285796 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076689141 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097644705 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073897497 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101495661 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083589597 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12162042 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070640013 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.101502082 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081149073 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.08059873 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097017158 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072402524 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099900256 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074309172 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11874139 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078680048 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071144321 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099168542 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078450233 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096149845 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077318993 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07824814 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101675484 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079601592 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097106668 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078752748 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07405387 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090619164 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076954114 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094816835 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069164181 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079859875 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.10189597 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067054942 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.095919159 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076499062 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075180901 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.091409102 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070813065 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070782772 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097491488 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071064839 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057670908 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094951774 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074194326 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089486609 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078044136 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075043953 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097831124 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070881953 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102454495 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068172015 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073534816 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091466655 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069337829 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071650243 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095561845 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068746513 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093203633 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077258926 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071025547 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097030485 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083188081 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.09040234 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.0751174 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067774885 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089986123 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086043396 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101041496 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069159946 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071381789 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091061433 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075821626 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068314593 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090299538 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068929277 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090381216 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074277279 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068983336 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093540867 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076351292 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083598661 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093908842 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072493923 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093115809 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069148987 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074951631 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091911328 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069351052 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070493894 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088868759 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07153962 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070219352 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098132416 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071650957 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09981122 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070411222 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078174382 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095313632 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074626667 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096002134 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06890889 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061137611 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093400072 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070077863 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07081209 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091043861 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070536941 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068419789 seconds)
done (took 13.601262161 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068473746 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.177326318 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132347041 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101985597 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114557262 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069593166 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104707051 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134742056 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071560378 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133319311 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091929617 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112769019 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.144484599 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067854754 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068449184 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096398483 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069837753 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.117039657 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107792515 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112787597 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147315463 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068677769 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126652034 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11784658 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094670432 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.131767028 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070103792 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094780241 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071755963 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.121134518 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089944149 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073251802 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.091666323 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128853878 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099469097 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.112749315 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068529745 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112061301 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06916561 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.091437283 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.099033339 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128209021 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110303553 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086856176 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094806409 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071934479 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070125522 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112921296 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.1193429 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08532781 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116139676 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140696285 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072195023 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109775243 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067623655 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114999887 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086818591 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093986885 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06895412 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071377058 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090497145 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07317633 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116427347 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.119676419 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074186209 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.110601955 seconds)
  done (took 7.494211667 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087823148 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119328306 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088949002 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111753869 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068421195 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070577934 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092639826 seconds)
  done (took 1.55759942 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070572632 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093036067 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11661163 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093587613 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113184617 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092134038 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101975867 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070204772 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.11082781 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071241916 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114827782 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109870396 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094911378 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077074643 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118516465 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069642444 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095452249 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093569209 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073284029 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117856681 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073101875 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114766999 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071314007 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06978362 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10795292 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070842792 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143505521 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075624928 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094320709 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073023355 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068408435 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144839789 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107144136 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081920021 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093224961 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085283602 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.107966992 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068175192 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086795213 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099317467 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085547977 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.094448311 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071176 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069235878 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.098437284 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081612929 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094766426 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071529018 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073263209 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114027436 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071479989 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108526446 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071301308 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074502221 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095140298 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07660315 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102714132 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07110725 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091286199 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0948559 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088445307 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110890224 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085070179 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110393663 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071990448 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108017588 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085281821 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073192441 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095143353 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073655259 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111619978 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068480487 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071774264 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104705279 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071577284 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.118038127 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095584565 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094295052 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08086905 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070901107 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093000556 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070582646 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.117540755 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073736757 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093195338 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073885747 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072979879 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092183995 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069606351 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07353565 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092096224 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072525559 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074541132 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.093196813 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072287219 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111840948 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070789022 seconds)
  done (took 9.576840909 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071457568 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07110533 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095792596 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071779293 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070854165 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094183835 seconds)
  done (took 1.409294271 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102328183 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097252745 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085831469 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099033053 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111693789 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109812784 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086253081 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109655817 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089352034 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.107842053 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086967935 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109745446 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092683492 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.10063459 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084700349 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099021347 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086405604 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103908947 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082966717 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101851738 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092889594 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.100239897 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077493984 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110837568 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073902455 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099818946 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080868076 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.107162646 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083129226 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111663227 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077021363 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097175073 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075722369 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109406019 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086085079 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098606603 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077547437 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074554951 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104335824 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074921516 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110896053 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078410765 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10669735 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074699826 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111514964 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076518341 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098810614 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080853809 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10919866 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074982043 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097757728 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07654589 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096897276 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075983939 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076043162 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109682859 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097614895 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087204901 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.100798753 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076217258 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074312322 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096643685 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.087939567 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097936806 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084517362 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098201502 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075207675 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101062382 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076676091 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099988841 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075660469 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096507059 seconds)
  done (took 7.577620376 seconds)
done (took 28.530839489 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.661424561 seconds)
  done (took 1.587929587 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.805947072 seconds)
  done (took 1.734784303 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.516757701 seconds)
  done (took 16.453224198 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.656062306 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.812086701 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.829453413 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160706453 seconds)
  done (took 3.390175676 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.885729677 seconds)
  done (took 1.836858505 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.245764065 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260067709 seconds)
  done (took 1.443006793 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.745235794 seconds)
  done (took 1.688042086 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.30463288 seconds)
  done (took 2.242149439 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.344188368 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190735181 seconds)
  done (took 1.475745379 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.535931253 seconds)
  done (took 1.477703961 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.510704546 seconds)
  done (took 7.457570701 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234740145 seconds)
  done (took 1.192945959 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.275299217 seconds)
  done (took 1.223199055 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.253780878 seconds)
  done (took 4.199157544 seconds)
done (took 48.334392816 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08153098 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084336953 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107321137 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081104999 seconds)
  done (took 1.295182974 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081308102 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076374063 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104763124 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075550641 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104651109 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075867777 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102450669 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081999203 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099895773 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078266172 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076878528 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099937528 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078602214 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100990328 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073538539 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080485049 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102602101 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076967656 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103676473 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077551784 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096723394 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078588789 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102898942 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075232754 seconds)
  done (took 3.059699108 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081769857 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076253988 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101274873 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076067853 seconds)
  done (took 1.290223616 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080499643 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119827378 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094141103 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103872296 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096278209 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115322073 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072854007 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072759916 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098688387 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080100971 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094470841 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104733733 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114764773 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080699324 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105947828 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069503857 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095675014 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092755763 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081506749 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104397419 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073637461 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.10449271 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072117424 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.11927432 seconds)
  done (took 3.203246935 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080016584 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130733425 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082265456 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.117582497 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095802183 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068914081 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104367376 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095070474 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.153745431 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.093489407 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073908978 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069506602 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09937892 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068721286 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07984589 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.138465056 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.141429342 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07250799 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12606972 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068702673 seconds)
  done (took 2.913733406 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078627649 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073524617 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092165461 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072572714 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07954622 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100486159 seconds)
  done (took 1.456677396 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071754461 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07055738 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093493332 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070316188 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075496586 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093185394 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069005933 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069983766 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093392227 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070074197 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09486576 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069261102 seconds)
  done (took 1.898278491 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.46012465 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07279426 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094938477 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069117163 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074050608 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093599254 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084405243 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071315307 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119223343 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069819449 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094427678 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072560935 seconds)
  done (took 2.338187038 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274329289 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081939392 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.340198622 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171954352 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144613631 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162064737 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133292363 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121628393 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203196268 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144818422 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238230136 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233379872 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116376994 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198333318 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09495353 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.138385938 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220619965 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206310691 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134124374 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235077554 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19006862 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163249072 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211998588 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134503884 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13955772 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153610234 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075946016 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108767695 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243343791 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168582334 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209862965 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144020367 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100440551 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242832801 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230712695 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203121868 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167641471 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088562112 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.163117538 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171469832 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267721368 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117392525 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23129753 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115812328 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109655103 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178289667 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151472706 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.15355242 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139414067 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117522272 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205018297 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250320501 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175251325 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090845169 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139476333 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145400709 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148019306 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132075508 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255593065 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225705458 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164106951 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075401397 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126913686 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221354685 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167370014 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.149059263 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161989552 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123996385 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177909211 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221699277 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150547517 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18191023 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.191256404 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093971559 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153492821 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20346788 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162161206 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242707361 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163360184 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077137224 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159945638 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133124794 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112693111 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.150153292 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103445751 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245068306 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106059404 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.145265092 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142503234 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142593775 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142148902 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232756849 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189114998 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136462784 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094522301 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109607057 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155023976 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20836902 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117082201 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116773141 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177130494 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.084089798 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174849437 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103878233 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159967477 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082708327 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184681972 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169774375 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07973535 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159844166 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133049502 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.133568649 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171591523 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229352909 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094551769 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1123349 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236811669 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162311665 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136649351 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184983862 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224791801 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131759944 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107654594 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212772085 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254822813 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119736762 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208899701 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136688553 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11347143 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093789832 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186310932 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122131237 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154063616 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111448556 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159528528 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238716375 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078703463 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125662114 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173651317 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111953357 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109934035 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147326956 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107094635 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.125809722 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131333647 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13900286 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177083522 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16021865 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138747716 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161462133 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13041395 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23135214 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11922608 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133750441 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110936805 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099145491 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17314267 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228007468 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084739357 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236537089 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162087209 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136095378 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156006612 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087844697 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202192753 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082817429 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099919886 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182232729 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144086278 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142989918 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194871525 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13338389 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161917273 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158221529 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195267712 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168696727 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169733913 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137522876 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.117785794 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146498513 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162045138 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076870071 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125540649 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112025326 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135401857 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101133557 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113187288 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179484153 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16202219 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126818896 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146199215 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128867879 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189799584 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105325296 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167291362 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.155331727 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127066596 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196476232 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225997176 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172462594 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132439582 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209615059 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075139651 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07705657 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.120007431 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16367058 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112473802 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087992249 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175727554 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188319251 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16351717 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200146625 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118237516 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157157805 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223963349 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074729578 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.149473538 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214595833 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162482221 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.135959605 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115993063 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.130916236 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184987315 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137359472 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259877699 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14812316 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158810204 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217721626 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.138806009 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085533587 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136654571 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174606353 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138220493 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218866201 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132808351 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093710754 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144574265 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.111335538 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135906758 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163481665 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153497784 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2003296 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149963584 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170518878 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080347948 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150677701 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184670272 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157462158 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068872285 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154900659 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232649136 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125922324 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154772941 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19719045 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108710097 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156507761 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250646766 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184540984 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116370092 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141590266 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15640836 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165743452 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152728033 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178803429 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143373879 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196367263 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118261198 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.115181979 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118689507 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106043327 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140144587 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125944015 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146120024 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150833747 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125412627 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168889781 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145005413 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143860112 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15318072 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128786602 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095777102 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128921752 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245602688 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156255981 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247505605 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131275982 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190750283 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237809803 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080061219 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109326965 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109585316 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179751724 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090372983 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195336538 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.102685611 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136002939 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160582841 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206858583 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101948504 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097097352 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118943486 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197201157 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14354501 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105181991 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137612947 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234826369 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135804955 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084913702 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160974964 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134890881 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135633053 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248774802 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064913079 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126816235 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079587649 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110309242 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169034937 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226581695 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088143016 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158220422 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153634306 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157886964 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165981813 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132375709 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129499765 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143732969 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18825222 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164460596 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.120696854 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146320563 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167871562 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224947383 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14043811 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.128342919 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214507429 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219749206 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.234914884 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118249555 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151460778 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148606048 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121202137 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205427116 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113804772 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211293627 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112734104 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17447003 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136853871 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123907109 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16551221 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127500283 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119949771 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207722288 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152962075 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11157963 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084751422 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145761094 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180460985 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110469646 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104363015 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174956299 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102984344 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175283872 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238449293 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087150888 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138786012 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127389461 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112376708 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113340764 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134363867 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11747877 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.126670944 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239363797 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.122090505 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218830653 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179526389 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148707904 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202005996 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132746971 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671283436 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082547851 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223616764 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154363833 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252185638 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130606772 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154296486 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143759803 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159359201 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183085204 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138878549 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.210651016 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170698076 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156708516 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109941677 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137125192 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146333602 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.120561832 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115959035 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149178137 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149529992 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132270902 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155945896 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190570327 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087097146 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127563598 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227128813 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155097327 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183445786 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180183118 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116125925 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154309328 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206640018 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086189256 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158456598 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226200683 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142112764 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131596 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.087165205 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138783884 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242138196 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078022695 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22966984 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158596425 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144824278 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148385309 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.180196026 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171543558 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14101059 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161123522 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127481122 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1482438 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151712651 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11459128 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083322424 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139520951 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147075759 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130352405 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135110196 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.124468268 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218536871 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075068936 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127738894 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107865187 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209847323 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253228663 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.120236816 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088832697 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154087386 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147271243 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151569 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162613149 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.112068125 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112640551 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088515288 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.140402483 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.118935034 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15132185 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133375424 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146116972 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237790205 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.11642007 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231699445 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127382036 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142561721 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072797307 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109975846 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128506628 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103896007 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13820203 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129761559 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241947498 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103482352 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.12165392 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125342749 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076622086 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114780259 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167411572 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145428605 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158243847 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130268875 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067306385 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142802864 seconds)
  done (took 74.538621694 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137771973 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10622744 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.12198883 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.175683706 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15183694 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244732379 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184855508 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227984185 seconds)
  done (took 2.381555544 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071376927 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121051329 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105511208 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119484822 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092555774 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072080268 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.310067905 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112590626 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092146656 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094277503 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.124378968 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094130335 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.485593622 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069257159 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097388135 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086623948 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070190368 seconds)
  done (took 3.239454257 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.447501713 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.63754798 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450009915 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.101897829 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.906041712 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112014134 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.344952006 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.165182543 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094248188 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.425436335 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.735143746 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.153267009 seconds)
  done (took 17.605976374 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078159751 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073206828 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114919762 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086863238 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102747643 seconds)
  done (took 1.488470621 seconds)
done (took 117.648507598 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083583658 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.382836992 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05734551 seconds)
  done (took 1.507129328 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087625276 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089026704 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115572519 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088447761 seconds)
  done (took 1.420875182 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078646874 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08072608 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.1143732 seconds)
  done (took 1.311180609 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.299348338 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172152022 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093189136 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086488909 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081357126 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108276223 seconds)
  done (took 1.317055715 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076142868 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07866916 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102597924 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081294369 seconds)
  done (took 1.372297395 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079458546 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055005678 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057809545 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084371609 seconds)
  done (took 1.315102502 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094162524 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.110135809 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084402416 seconds)
  done (took 1.326162988 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114428627 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116331647 seconds)
  done (took 1.270958873 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084889443 seconds)
  done (took 1.120412804 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096477204 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147052741 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.168883949 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142786786 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.17850433 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142893187 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118725616 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093760694 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.10760659 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.121015941 seconds)
  done (took 2.35889334 seconds)
done (took 15.996681992 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081157684 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393524108 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36422972 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122121635 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675218185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386538336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987056465 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124421712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114222544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097852565 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087878305 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681868845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975966377 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349141121 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963499671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326854374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677755166 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071920545 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097114272 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072345774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973745084 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097874099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070845898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097258112 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653786306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376191338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09677045 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326390535 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098042449 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073187206 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359192156 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098851897 seconds)
  done (took 16.00199128 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074294518 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.150659366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07771592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08815097 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100575955 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073011963 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101662428 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072900362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152734797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071167883 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115966129 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070977003 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102350658 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072842797 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091341598 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098359136 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072623843 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097813031 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072585728 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07243969 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117052571 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07116628 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098523658 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07255715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072178115 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110851646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07119683 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098538032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071680132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073613214 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101195785 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072911678 seconds)
  done (took 3.908936672 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119392173 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.158455399 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078249028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13333442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144958367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073336186 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.176299731 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098033481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156321519 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072602067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11520127 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07105959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132792446 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071518153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117946195 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072421215 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099197649 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072075331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071404381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098515435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091649455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098065784 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071989004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07212084 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09858541 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08515837 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098244366 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07552899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097784039 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073928519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075915146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099265299 seconds)
  done (took 4.219934523 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075176517 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07793565 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113664472 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087501824 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099517319 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075719565 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076430539 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099710007 seconds)
  done (took 1.750609332 seconds)
done (took 26.915829116 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082661308 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073212272 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103505391 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085113007 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103628915 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083201288 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071573764 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105217259 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078606956 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10333462 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079808747 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07112171 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101857514 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07037928 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079744633 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098089074 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083104071 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102144895 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083211314 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110373506 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07293182 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078841666 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104756831 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082721317 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110861997 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083226889 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109646809 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076606515 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073556911 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100237415 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079905806 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116585909 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071606368 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109836816 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07230681 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071418553 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097572648 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07158013 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083964391 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105681229 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07442041 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105296941 seconds)
  done (took 4.76319567 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092746332 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097503171 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11654144 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065743406 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098880638 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065400357 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.121449953 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063701384 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065915004 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120881809 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058483851 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061154455 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090031578 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057010279 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060654225 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06039955 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.091410925 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059529002 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060424069 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088984781 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063612671 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057383277 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090817123 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063427604 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058893745 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065575715 seconds)
  done (took 3.046600295 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078977516 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086599168 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11940378 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134100953 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135964877 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079123165 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108403505 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089991853 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11492442 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070758315 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101943772 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100303228 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091126013 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105026996 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070924519 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113616804 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086149237 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072855811 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105163076 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092530003 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115143818 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081045293 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120046096 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084177233 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070665589 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100866099 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07581538 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113046441 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076809995 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081043042 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101947187 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0753373 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099668789 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082713809 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102114802 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072974982 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092239937 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108701365 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080276424 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.099024582 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074073601 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071559751 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118711123 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.116726376 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097140815 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.087403157 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10595794 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080876457 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098153578 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089522478 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081189772 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098034363 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074788041 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070966108 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097372889 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083969965 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100121697 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073775209 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080494886 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101789101 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083276381 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.102241303 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087767988 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071090069 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.1056352 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070476353 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098732576 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070081263 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094662352 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099247864 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111759253 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098910699 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072126897 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108156493 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079308013 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076908659 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098431071 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086624489 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107564879 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075761099 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107249515 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07464558 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073666423 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116656341 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074177268 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073067666 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099055296 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076789621 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101203822 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071792764 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085530334 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097990059 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073649829 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116280358 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070767304 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072982406 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104308491 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075872279 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09804706 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084373819 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103365565 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07222684 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082084531 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097819411 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074333256 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108245972 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076542257 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069953195 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.102488774 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077822281 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097927017 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072075573 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073881284 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09994296 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080898232 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077938575 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10180532 seconds)
  done (took 11.671896161 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203256938 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.193219384 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073908137 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184913346 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082500672 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.111626614 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.188454838 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.132284614 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071964933 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072673089 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.100231748 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111681241 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132907508 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.144449361 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082994016 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070607712 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11648287 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.141158911 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.19009757 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.156970649 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118431491 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080681841 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101759922 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072540213 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.102159009 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08111818 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.117627603 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083900172 seconds)
  done (took 4.386978403 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08608043 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131328895 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076563279 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.1205374 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095327918 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098925382 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.077074762 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072505862 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111991835 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084481214 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098629027 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077710531 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105860238 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080212674 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071762975 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108790758 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080265842 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.100935494 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0749282 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075317969 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104972236 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084552492 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102698179 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070217318 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078402594 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097638857 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069693719 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116501078 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07229104 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120923525 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069893738 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105627469 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082264483 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072582122 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098278636 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074022521 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101380391 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073720488 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072860566 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097887396 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069565921 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06049521 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098386364 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083943856 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105402409 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.06276148 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078342143 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103946737 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075965715 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.097477039 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073811641 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073866866 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102509513 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077909517 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076955876 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103871857 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07515616 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099270014 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078787566 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073953593 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.09574127 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069664714 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077289824 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099604015 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079099202 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103329182 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07011989 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074218546 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.102558521 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077574279 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.100155723 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075009969 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068690106 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.1015014 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077176086 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075284121 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.101568493 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070435847 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.098291712 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07108095 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058138061 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099349505 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057128187 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075030691 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097490985 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071135504 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073617583 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.10805665 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086475112 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.099928661 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078252814 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.100272603 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071388248 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07475326 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094021024 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074116292 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.114248996 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.088834863 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.099512257 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069291871 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085256649 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.105258798 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071010389 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059998489 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105778267 seconds)
  done (took 10.148445913 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095339762 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123677854 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073656212 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085347231 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125422154 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097790843 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10639838 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077248827 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073063011 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11585856 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071689068 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107895468 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075140344 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080697678 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124654473 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078759775 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101502821 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08110135 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.107342258 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.108103906 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084774549 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.113477005 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081746586 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09954729 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076540893 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110393696 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099167094 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081609141 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108145503 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085407572 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108839817 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099641517 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114549568 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.075388385 seconds)
  done (took 4.323134459 seconds)
done (took 39.382448455 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.131722776 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.332364031 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.121298313 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.976375509 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.132585254 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.156214262 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.131302429 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.119576654 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.403658476 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.119291772 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.370572578 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.667166845 seconds)
done (took 58.726780938 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.184458321 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.25853514 seconds)
    (2/2) benchmarking "String"...
    done (took 1.394574674 seconds)
  done (took 3.717361484 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.493361357 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.127213784 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.411030284 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.120070203 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.121405693 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.587826907 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.654173617 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.930987745 seconds)
  done (took 27.016595614 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.129959162 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.470776321 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.388883178 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.392159833 seconds)
  done (took 17.448092109 seconds)
done (took 57.924732482 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.11081524 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.193002231 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.132409213 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.10581048 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.244566178 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.149829761 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.432115364 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.122130806 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.123083743 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.105419935 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.140900804 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.120496748 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.13795747 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.410238661 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.131224348 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.127238887 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.153331932 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.597913082 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.490028136 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.139423777 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.12476157 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.19082982 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.129576153 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.122973491 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.14551996 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.132496973 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.120252183 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.124725589 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.319682423 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.12837448 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.210183837 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.61621321 seconds)
  done (took 187.599273105 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.120902543 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.175841997 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.302338804 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.164377078 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.583449676 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.324892873 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.259307113 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.723518903 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.138274723 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.140567419 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.357922749 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.123336109 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.429147591 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.085295934 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.13176069 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.131177524 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.44958446 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.452805265 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.139671975 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.388745118 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.13248093 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.264242827 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.201893838 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.3334129 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.170222325 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.158906183 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.141763285 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.146713399 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.315471382 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.389404904 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.143027356 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.16536326 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.679924791 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.983143064 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.127644853 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.13677666 seconds)
  done (took 147.177263236 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.390389453 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.12215432 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.122247667 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.123089787 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.151577129 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.122620843 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.646694601 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.647687369 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.620081368 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.457159285 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.126186908 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181028629 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.371523989 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.129144349 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217604713 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.137646923 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.127407786 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.140766495 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.153902056 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.128347621 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.126821369 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.648353836 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.141430126 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.161244678 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.131136539 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.124463385 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.153056689 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.516139656 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.123648564 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.152765683 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.438047174 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.167091097 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.123877337 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.421370177 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.102567119 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234352905 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.126110596 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.153467264 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.123965553 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.389994858 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.125721573 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.125210338 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.126881514 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.712388255 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.128422019 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.648096702 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.126909365 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.03316773 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.128685943 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.125829688 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.762164498 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.617789884 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.128557549 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.124555898 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.12709093 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.125054015 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.125200625 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.124579606 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.155089613 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.762235898 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.222273469 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.125193674 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.12984569 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.155022685 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.125655575 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.134082095 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.128901333 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.388571846 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.185568434 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.345633035 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.649460472 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.128793605 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218033366 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243556405 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.125993944 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.126689086 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.126400392 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.126698596 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.125447517 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.231923384 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.127184198 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.511431583 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.127983758 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.131946462 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.127672338 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.184817272 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.218379165 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.127384608 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.415960616 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.129963286 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.128198561 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.855630381 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221314407 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.126688675 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.126272238 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.12749293 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.516159055 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.651035129 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.309142074 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.129432238 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.530688171 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.130624914 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.528992858 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.631737933 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.717774241 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.130618297 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232690627 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.131851013 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.129739985 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.128465152 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.156671048 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.128546695 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.18133943 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.129183844 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.523496065 seconds)
  done (took 336.445658325 seconds)
done (took 673.677981394 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.804750254 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.756498601 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.886091235 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.77025944 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.756744482 seconds)
  done (took 10.050073209 seconds)
done (took 11.126177204 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.304107379 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.305150414 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.185994371 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.30383805 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.157080778 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.320470513 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.28502685 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.151556134 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.224663464 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.200094566 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.224792265 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.17597961 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.156106143 seconds)
  done (took 17.068825924 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.438166424 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.44657691 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.192693921 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.473232155 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.169807333 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.474773319 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.314696339 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.355418184 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.328839191 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.147865913 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.143952711 seconds)
  done (took 15.559222209 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.439007648 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.435312834 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.197815453 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.446347061 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.1727352 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.44849601 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.326247087 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.337610225 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.328670688 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.146910002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.144839285 seconds)
  done (took 15.498137997 seconds)
done (took 49.200243267 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.139615435 seconds)
  done (took 2.214200607 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.173716578 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.332304536 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.157185374 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.145305034 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.141463777 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.144279365 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.144426376 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.141093515 seconds)
  done (took 10.455244398 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.140000102 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.139088834 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.141125731 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.13719111 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.136824317 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.138934352 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.138464491 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.139635914 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.141179222 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.140381004 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.13664061 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.140884449 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.140842062 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.138965634 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.137772955 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.137468113 seconds)
  done (took 19.301477977 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.139361508 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.137029243 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.137590608 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.138749085 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.138384703 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.139340152 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.139120877 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.137938534 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.138204777 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.137865654 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.139516618 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.137889061 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.138934325 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.138505235 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.137427957 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.138807534 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.138330826 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.137893684 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.142933367 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.137984348 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.139546026 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.138986231 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.139697812 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.139430825 seconds)
  done (took 28.408310541 seconds)
done (took 61.45389792 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.131713121 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.728065552 seconds)
  done (took 8.93553206 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.14205513 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.141249811 seconds)
  done (took 3.361404586 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.141589175 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.141775959 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.141445492 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.141072164 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.140980098 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.142251746 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.141179217 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.141988974 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.142785214 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.143151647 seconds)
  done (took 12.49566162 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.141957877 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.141913037 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.139794887 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.142395352 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.141920809 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.13996461 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.141631321 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.14183651 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.142645392 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.139758064 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.142487642 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.141246171 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.143398236 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.140461637 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.143331989 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.139920716 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.13960587 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.140641458 seconds)
  done (took 21.621201954 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.142453525 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.143136862 seconds)
  done (took 3.363426835 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.140152677 seconds)
    (2/7) benchmarking "second"...
    done (took 1.141317396 seconds)
    (3/7) benchmarking "month"...
    done (took 1.141361057 seconds)
    (4/7) benchmarking "year"...
    done (took 1.140842204 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.141377917 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.140360857 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.140690947 seconds)
  done (took 9.063995821 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.144264573 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.324783169 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.403079472 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.737910268 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.144014741 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.146889071 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.035017737 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.147215783 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.149601941 seconds)
  done (took 13.31050072 seconds)
done (took 73.228443804 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.122102798 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.13783796 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.030435099 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.144310366 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.152963697 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.43531742 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.137138627 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.256236662 seconds)
done (took 36.496469615 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.153943045 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.85714722 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.860760332 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.137104271 seconds)
  done (took 10.934950984 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.12118167 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.039296652 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.127347122 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.148916575 seconds)
  done (took 17.517099796 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.73397792 seconds)
    (2/2) benchmarking "read"...
    done (took 1.470398591 seconds)
  done (took 4.283825039 seconds)
done (took 39.969676202 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.146727115 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.144966878 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.142736818 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.14566185 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.143141893 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.143160478 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.143509136 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.146309393 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.143477336 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.145154654 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.145257867 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.146978192 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.145825423 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.144542206 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144132671 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144985808 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.142912015 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.142499095 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.145811588 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.143180437 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.146673497 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.145174834 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.142745951 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.14413391 seconds)
  done (took 28.551291201 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.145837578 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.143943692 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.146181461 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.146887661 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.144781571 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.146413987 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.145381856 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.14413903 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.146131742 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.147300009 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.145290935 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.144178797 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.14767355 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.14524634 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.14727621 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.145641444 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.146669584 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144567551 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146633969 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.144976106 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.147567658 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.145487078 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.144157681 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.148433309 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.144534979 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.14470983 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.148926854 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.145163024 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.148390476 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.144824485 seconds)
  done (took 35.459660523 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.151464516 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.154817707 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.148567039 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.148186258 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.148244047 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.14786926 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.148510454 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.148255073 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.148269072 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.14862068 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.147815471 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.149005921 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.148323845 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.147963366 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.148168217 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.147779729 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.150056295 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.14837075 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.149172959 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.14868792 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.147447207 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.147979717 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.149545675 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.148383748 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.147562885 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.148423168 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.148997899 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.148071382 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.147427582 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.147765285 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.149090579 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.148539337 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.148049838 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.148974501 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.147621472 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.148416596 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.153194045 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.156388373 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.149013246 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.149020923 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.150176793 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.149680531 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.150087634 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.149148268 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.148827858 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.150006293 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.149112142 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.148837565 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.148852092 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.149619449 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.148685475 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.14989397 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.149950146 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.149220258 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.149939483 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.14940117 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.149560037 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.149868193 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.150232058 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.149197441 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.149518428 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.149754811 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.148971225 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.149522317 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.15067881 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.150305677 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.15045001 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.149772315 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.150616418 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.148813576 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.150068146 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.149838998 seconds)
  done (took 83.832502225 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.150774417 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.149925873 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.148536792 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.147074321 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.146423812 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.150964694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.147087445 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151433712 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.14801742 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.151157794 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149226859 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.148569152 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148535416 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.151214003 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.150697155 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.148612123 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.151816089 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.149166686 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.152079459 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.151447317 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.151226503 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.147588502 seconds)
  done (took 26.377426339 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.151539582 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.151735212 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.148838022 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.151563539 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.14934979 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.151527736 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.152844065 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.152514502 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152491643 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.149130205 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149409536 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150898587 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.149249519 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149693253 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.150390084 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.14857952 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.152720497 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.149444274 seconds)
  done (took 21.798157029 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.148861991 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.150420455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.15210833 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.149761187 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.150805426 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.15257206 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.149667387 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.153198266 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.153640542 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.150247729 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.15179869 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152371512 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.153550327 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.150490293 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152653122 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.151318474 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.153365373 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150305303 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153718362 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.151214138 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.150359394 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.152825557 seconds)
  done (took 26.422021113 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.152994563 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.154488712 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.150273009 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.151270088 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.150504104 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.15356397 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.153254546 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.151261323 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.154436075 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.153264881 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.152299116 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.154379443 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.150845372 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.152227537 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.152050299 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.15099028 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.154368121 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.151720485 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154163157 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.151677703 seconds)
  done (took 24.13837064 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.154852827 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.155722178 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.15471385 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.156215767 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.155740316 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.154631675 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.155040108 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.155248632 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.155920646 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.1557012 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.155809216 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.155483135 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.155643868 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.156259999 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.155668259 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.155918445 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.156029258 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.156184288 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.156027577 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.156867193 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.157095339 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.155770597 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.156885582 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.154969637 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.155933469 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.156771003 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.158470791 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.156363303 seconds)
  done (took 33.455913652 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.15588209 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.156090129 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.152955399 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.153748054 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.152235458 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.153371293 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.153975517 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.15347111 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.155646088 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.152984381 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.15683471 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.155654453 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.156483201 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.156481696 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.156728949 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.155951245 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15639876 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.154760959 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156146083 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153607995 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.157107966 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.156951175 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.157711277 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.154039667 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155030276 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.156361194 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.155156666 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.155381387 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.157358552 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.154956478 seconds)
  done (took 35.75084171 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.175901573 seconds)
    (2/2) benchmarking "in"...
    done (took 1.175329049 seconds)
  done (took 3.444138095 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.156194559 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.157804864 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.157427877 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.154877404 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.155053741 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.157088128 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.157996908 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.1549772 seconds)
  done (took 10.343976969 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.155912014 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.156533569 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.158621079 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.157250999 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.158516746 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.157829925 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.162868214 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.174996594 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.156733898 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.158343249 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.163101638 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.163649901 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.160801913 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.157225234 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.156638839 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.158714866 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.158668721 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.1579456 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.157783529 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.158694887 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.15846285 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.159397522 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.159657203 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.155296565 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.159611973 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.168905007 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.162212672 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.159880366 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.158214774 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.162291519 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.15764921 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.15637313 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.159739199 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.159653194 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.159064838 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.159552407 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.167618742 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.174237187 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.164270676 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.159906677 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.160151299 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.156664215 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.159751606 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.159740668 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.160316509 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.159349946 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.160412624 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.157364178 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.157844765 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.160846512 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.165642775 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.159014286 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.159572637 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163742054 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.161786507 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.166795826 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.177376688 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.162808076 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.167670462 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.171190181 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.172974891 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.167789104 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.161534005 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.160756253 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.168678525 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.182779267 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.167562628 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.174876564 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.159835078 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.160898512 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.166459791 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.173679322 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.16944142 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.161458243 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.161777262 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.162088762 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160794723 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.161996522 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.167976579 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.179178964 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.160275104 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162913061 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.169879567 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182017065 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.160795194 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.162226512 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.161922202 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.161815462 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.162317098 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.171544189 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.178617577 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.162399775 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.161916157 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.161311303 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.162229456 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.162588381 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.160482112 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162334674 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.16060349 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.163605929 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.162631067 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.165564614 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.169635204 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.16210871 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.163006768 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.170278441 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.163214694 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.161533217 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.168447686 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.163578779 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164170201 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.162717637 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.167860166 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.159801763 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.164769114 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.170276074 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.163523266 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.164277829 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.163645381 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.165051944 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.171286378 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.187827914 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.163241873 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.164191989 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.166192332 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.174183089 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.164136054 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.166235596 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.16473847 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.161246524 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.160754752 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.164387896 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.164860159 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.164436897 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.163891674 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.164733297 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.162860563 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.164630245 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.164679092 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.16390419 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.165338247 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.163847268 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.16498698 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.165918941 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.165094768 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.165412645 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.170752241 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.16275886 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.164924608 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.163854195 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.164164115 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.165397437 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.164734299 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.164207879 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.16389011 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.165772525 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.165018987 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.167003134 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.166902502 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.166314456 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.165869007 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.165753997 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.169246635 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.166599436 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.168389379 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.164447621 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.163936138 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.167216968 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.166392647 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.165176956 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.166443692 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.164660322 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.167232331 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.174061821 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.167317142 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.165932587 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.168592216 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.166202435 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.166307481 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.168277082 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.168868736 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.172160241 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.167428023 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.173053814 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.167300102 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.166882636 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.167248126 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.16619063 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.165682636 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167631157 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.169491641 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.174374897 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.179139828 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.175361799 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.167060722 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.171061168 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.167918411 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.17045781 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.171030273 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.16817202 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.168162031 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.167227893 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.16729463 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.16830487 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.167554058 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.166358431 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.165945295 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.167905141 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.168707071 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.167998794 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.168358537 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.167185526 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.16808035 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.166184914 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.168016351 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.16867991 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.166824672 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.166299873 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.166097822 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.166498362 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.167834014 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.168658804 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.174271244 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.165906693 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.167662823 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.169022199 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.167591695 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.167413698 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.169586475 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.168077934 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.168299116 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.173957988 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.185569604 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.168294893 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.174821597 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.183759973 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.16778287 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.169403578 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.169347102 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.167889379 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.171623219 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.176492567 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.168805684 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.170845701 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.171342672 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.169308198 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.170890775 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.175582261 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.168406619 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.16879766 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.17127755 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.170534018 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.167426045 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.17108987 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.170071086 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.170711094 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.170886534 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.171055996 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.171379411 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.170310756 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.170865022 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.171858512 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.17075751 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172516033 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.178541604 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.174993221 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.170111761 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.171778697 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.170019829 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.175403863 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.170548808 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.170981811 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.17087339 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.182718428 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.179477489 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.177029338 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.172252138 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.172024795 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.175711729 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.171858983 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.173790986 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.170248162 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.171695385 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.17051679 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.170097074 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.170007406 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.172068648 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.171674712 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172637596 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.172675623 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.175766792 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.173001892 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.170816352 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.172130047 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.172420008 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.173380903 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.170060894 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.173738471 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.173219762 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.173629103 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.171602344 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.170666421 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.178110399 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.187853923 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.173109713 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.172376598 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.171844861 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.171581781 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.173769646 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.173177011 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.174667454 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.180723866 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.175373338 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.181210131 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.173724494 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.180992188 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.172063607 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.174501215 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.181278538 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.170414551 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.170744059 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.172427495 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.173568 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.180040803 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.189659793 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.173749085 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.177738188 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.175251456 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.174270822 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.174340659 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.175125956 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.175738118 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.173946263 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.181188149 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.190410024 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.177085087 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.175594339 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.172988645 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.174925668 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.175700716 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.172405285 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.176703537 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.174857027 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.175079575 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.173861835 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.174168574 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.175386943 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.174437836 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.175057322 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.171939189 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.175640451 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.180657909 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.190829652 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.179201134 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.1756327 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.181908143 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.175433626 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.180324246 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.191230619 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.174422354 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.176662191 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.175270377 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.175808638 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.174215338 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.174739734 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.175011264 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.175624017 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.178586479 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.175232677 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.176935599 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.174639555 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.175375285 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.175555152 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.183591869 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.198010816 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.176587211 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.180942395 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.17543711 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.177321913 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.180165174 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.178114069 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.174873512 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.177907034 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.185588678 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184082251 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.175670778 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.17614185 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.176461099 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.177033185 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.17713652 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.177187131 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.17591066 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.178251108 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.176743496 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.177448536 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.179172272 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.177960923 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.176801068 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.177969458 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.176372666 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.187316414 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.177475678 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.178530909 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.17773171 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.178000855 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.176658983 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.176443793 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.17777557 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178060513 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178504322 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.176996454 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182871214 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.183681773 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.178379331 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.177150942 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.178656379 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.177617121 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.177443797 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.17852051 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.17902551 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.178050536 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.178523679 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.179387555 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.178040531 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.176355954 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.178822756 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.178339963 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178739947 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.181347408 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.184879972 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.177576264 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.17602903 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.178810423 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.180112424 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.17761505 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.178301066 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.186334121 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.181474014 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.188294653 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.187246023 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.183289662 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.177940261 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.18115665 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.187336445 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.178767305 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.179011087 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.178844326 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.1808705 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.178255972 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.181295036 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.180357777 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.18484494 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.178831474 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.178826972 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186915299 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.194952333 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180199742 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.180077005 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.182768223 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.1772823 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.178173587 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.180833476 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.178871632 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.185356793 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.19734581 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.182000599 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.181736161 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.177501988 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.180885934 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.184465071 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.181325036 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.179595485 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.177553642 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.179988637 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.18097955 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.18195969 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.177798183 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.179076472 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.179333885 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.181854065 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.187518907 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.178576627 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.181462894 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.17993395 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.180621117 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.181931066 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.181973573 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.179709204 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.178527712 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.179448119 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.18151741 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.180624095 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.181976555 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.180573608 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.181659414 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.184345707 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.182034116 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.185070464 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.190884015 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.189796941 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.180808256 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.180836866 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.181118048 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.183126181 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.182750348 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.182358644 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.181513254 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.182756425 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.182151612 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.182581505 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.182897331 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.184322243 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.196498894 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.197686451 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.181760281 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.181526253 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.184796118 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.183281515 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.180241307 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.183110107 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.18349821 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.185005513 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.190862055 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.184345435 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189041467 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.199121878 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.182686248 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.187491118 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.185212898 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.189413996 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.184590859 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183446289 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.184195655 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.186709238 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.198678999 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.183002214 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192820864 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210438687 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.200310557 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.18445827 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.184629567 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182916528 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.184195503 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.186868065 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.184122581 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.18515526 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.185226704 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.183108322 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.185363129 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189315507 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.184826331 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.184539473 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.184255302 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.18354812 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.185800451 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.182004287 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.185203706 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.185413883 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.184340964 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.185142118 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.186439692 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.183659876 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.197729105 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.19410279 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.185443777 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.185450093 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.183752345 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.188426721 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.18688184 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193593774 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.193530019 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.185780205 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.185369689 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.187225798 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186163885 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.183656002 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.185403355 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.184392246 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.185646369 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.18350857 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.197802256 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.194785499 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.190966649 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.186041198 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.186384789 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.187742959 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.185842455 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.186614373 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.186516516 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.188768591 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.185729134 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.189763298 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.186485576 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.186685892 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.188303246 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.195412157 seconds)
  done (took 700.884286354 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.185513901 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185197786 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.184513417 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.18561731 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185063939 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185398554 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185115107 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.185025785 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.18507572 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.18596452 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.185391561 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.186299477 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.185449253 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.185271908 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184199749 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.184998525 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185408106 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.185917856 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.186520791 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.18597926 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.185930339 seconds)
  done (took 26.01554922 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.187781045 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.185385341 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.185026043 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.188761268 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.185720739 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.188621316 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.186507057 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.188584411 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.187732203 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.186309578 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.187960894 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188651187 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.185794027 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.187066988 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.186561293 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.18916641 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.188869135 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.186850506 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.189010794 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.187836241 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.189058405 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.186841056 seconds)
  done (took 27.247138598 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.188963968 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.189477684 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.186014871 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.186629558 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.189347576 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.186727236 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.188555564 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.189433601 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.189371257 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.187896451 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.187499804 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.189475483 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.195122825 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.195099292 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.190416337 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.189483395 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.333182205 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.190513121 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.189010346 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.190087527 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.188242963 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.193869035 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.186480571 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.187146203 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.189180334 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.190761803 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.191006948 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.190540415 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.189909154 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.190113124 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.194694213 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.191470444 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.189322047 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.19070364 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.189892054 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.190728918 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.193367582 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.190894725 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.189296545 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.191600057 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.19923787 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.211047774 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.191179068 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.19701445 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.189442534 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.191049837 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.193175999 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.198776137 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.188746395 seconds)
  done (took 59.626630403 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.190683218 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.191403199 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.19054715 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.190512497 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.19281819 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.192636306 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.191187971 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.192699784 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.189870158 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.189110828 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.191815093 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.189700263 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.189284267 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.191716304 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.192732887 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.189929812 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.190009808 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.189563108 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.189781155 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.190162777 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.188682551 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.191907716 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.192302875 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.189233698 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.192690209 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.19034082 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.190567622 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.192394282 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.190087854 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.189576444 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.192838901 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.193000482 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.193393278 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.191915784 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.190987024 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.194310377 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.19329427 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.190919637 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.194628124 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.190852478 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.192716234 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.192743346 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.19368528 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.193704983 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.191730789 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.191329917 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.191621408 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.192009849 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.192712052 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.194664121 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.193957095 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.191815951 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.194227828 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.191982938 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.194263469 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.195210134 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.192150601 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.191998319 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.194434859 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.191616073 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.192529362 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.193644092 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.191940061 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.194377571 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.195305686 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.192275102 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.192790277 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.194840176 seconds)
  done (took 82.184980493 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.194407065 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.194501513 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.195325258 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193555822 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.19483858 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.195100192 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.194678214 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.195990432 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.194586218 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.194258965 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.197019145 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.195554952 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.194556295 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.196129422 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.19378242 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.194849309 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.194482928 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.195799506 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.194871066 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.195929012 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.194916855 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.193867374 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.196185537 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.195233525 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.196147599 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.194766085 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.195402504 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.195158355 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.195714024 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.196761587 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.196304809 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.195539091 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.19602978 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.195967364 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.196434838 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.196213094 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.195243253 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196810111 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.196371074 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.196315049 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.196849031 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.196654226 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.195929006 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.195910502 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.196706189 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.195835167 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.196959872 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.197448755 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.197748872 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.196615457 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.1975553 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197605192 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196633885 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.195077718 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.196992829 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.197005812 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196458484 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.197751069 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.198016152 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.197962836 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.198005874 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.19672128 seconds)
  done (took 75.2784311 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.19728159 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.197749622 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.195432165 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.194883478 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.19798665 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.194342257 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.197813298 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.198584536 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.198585509 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.197736557 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197072739 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19553223 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195933763 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19787579 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.196318486 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195224931 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196494063 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.196530578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198895079 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.195955399 seconds)
  done (took 25.067571174 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.196701941 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.198727148 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.19622997 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.197343116 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.198198247 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.197409554 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.197828318 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19937699 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197040106 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199023479 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.199795665 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.19828896 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196637798 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.196834655 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.198790631 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.196238423 seconds)
  done (took 20.296892805 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.197493004 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.199946475 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.197984161 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.20086334 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.196454357 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.196625678 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.199845413 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.197477622 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.197464641 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.200127537 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.20033834 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.1985289 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.200298064 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.198688001 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.197904717 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.198074424 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.198240892 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.198031983 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.200727842 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.200875524 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.199496286 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.198717242 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.199421886 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.200631627 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.197879773 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.199226824 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.197824471 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.199612349 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.198854654 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.19979255 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.198058095 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.198319736 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.198904938 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.199044942 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.201617768 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.199135631 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.201537916 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.201547888 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.200364371 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.201180194 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.203115886 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.199158018 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.201791593 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.200689091 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.199225815 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.201791236 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.200068269 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.199313523 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.199289802 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.200673142 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.202027846 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.20085574 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.201692068 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.20348814 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.202258491 seconds)
  done (took 67.117645418 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20053119 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.202136876 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.199317877 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.203778712 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.203107449 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.199501372 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.20287879 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.199418629 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201045153 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.202066769 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200230816 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.202360674 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2006148 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.203284657 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.201664016 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203402556 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.199862996 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.201094557 seconds)
  done (took 22.762440987 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.20025397 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.199896415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.202371513 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.200399486 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.199749336 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.202969725 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201409164 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.202323474 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203592588 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.20106808 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201258881 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.204261079 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20302738 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.203749657 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.200299424 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201749079 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.204438054 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203873173 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.201334191 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202148831 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.203748224 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204215882 seconds)
  done (took 27.584867187 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.201401548 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.201736837 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.217837441 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.241925354 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.232606576 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.203033067 seconds)
  done (took 8.435242083 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202201923 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204329837 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.202649243 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204867971 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204023021 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201541745 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201836025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202633333 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205022529 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203147686 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201500478 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204967906 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20338849 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201903204 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203908354 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205602317 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203376561 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202440447 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20321996 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204696951 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202050308 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205123604 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202726604 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202874436 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2031566 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203048029 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206096413 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204347316 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204275336 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206755309 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20539195 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202202102 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205646271 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204075641 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205714768 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205941053 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203381181 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205547915 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205727898 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203875969 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.205978254 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205908702 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205876442 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204144387 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206785555 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204930993 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203733213 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20386782 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205044142 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207781973 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207135757 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204915371 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207240636 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20726651 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207631288 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207315046 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204981673 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205240583 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207321915 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206325092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206262785 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208443841 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204946703 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204753949 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206990724 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206114418 seconds)
  done (took 80.651926715 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205148793 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204948609 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205352358 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206940842 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205541943 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205742738 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207159493 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206581628 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205991837 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206005827 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208130659 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206569177 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205995654 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206122067 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20505932 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206194079 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206170628 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20577111 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205689591 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20814146 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206223039 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206670723 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20525172 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206996979 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207284316 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208896436 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20663423 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20596133 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207201698 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207041891 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20685452 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207192602 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206636686 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.20690594 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206816375 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20657489 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206593939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207890507 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20776828 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208794705 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207438863 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209628694 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20711927 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207742302 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207208587 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207054434 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206987707 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20605889 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208543655 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208288207 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208344233 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208159448 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206989412 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208765988 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207785542 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207896334 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208165216 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20839787 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208177931 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211140124 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207276145 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208177414 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210618464 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208683217 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209933909 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208294605 seconds)
  done (took 80.819836802 seconds)
done (took 1634.628401532 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.275995495 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.186704392 seconds)
  done (took 13.60574871 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.369560438 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.324335231 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.20803661 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.249814016 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.208679538 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.212540102 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.229172731 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.209042724 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.20773304 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.208757021 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.20927423 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.4002251 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.225297679 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.208603461 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.208660919 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.301755507 seconds)
  done (took 41.126710695 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.234608171 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.215489522 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.324485349 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.230052091 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.234553248 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.390692383 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.264671115 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.212709863 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.381647363 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.254019155 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.799780499 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.238336225 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.213043888 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.336735301 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.231928132 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.391637747 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.453488619 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.747257052 seconds)
  done (took 28.300599381 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.657013053 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.206201012 seconds)
  done (took 9.008341458 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.223843226 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.25193608 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.222040989 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.25282141 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.22072416 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.23911127 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.210214232 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.222902086 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.256595223 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.231252089 seconds)
  done (took 63.478153486 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.231985761 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.213117514 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.215372581 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.213943929 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.205339273 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.220353959 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.212815218 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.209478346 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.79447168 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.339242787 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.23143174 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.221092727 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.213808033 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.215107893 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.212551017 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.250225465 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.349363997 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.212842137 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.211830982 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.220645322 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.214160632 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.347464718 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.254301425 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.213502388 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.337084166 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.810817551 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.220035768 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.221857497 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.351736456 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.213884449 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.214191559 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.214777762 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.217563418 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.787852762 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.656253979 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.224968308 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.237304017 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.224007472 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.214066754 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.334528497 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.215601856 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.222426566 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.207955179 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.645283149 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.370956877 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.32298448 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.503774935 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.218052807 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.216947927 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.274600917 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.21692665 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.217137313 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.243855321 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.963562961 seconds)
  done (took 104.693697856 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.265007239 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.697765361 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.378045354 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.227712813 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.983853057 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.871886266 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.212013424 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.495348926 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.236386198 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.209116172 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.482950824 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.709957587 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.211472805 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.228908366 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.851121592 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.264431165 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.208553026 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.990331573 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.21168604 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.212593051 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620198213 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.226752838 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.210100971 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.371495649 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.248521651 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.666555821 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.634187696 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.680933634 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.212417987 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.208148474 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.673292376 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.213501325 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.214031875 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.211484042 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.479907769 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.569474686 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.552178085 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.213059764 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.213003826 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.211566605 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.244918939 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.66637801 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.547046835 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.209240979 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.20920687 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.668584905 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.211038402 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.217365938 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.217389689 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.409097789 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.908493174 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.211916797 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.677961273 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.214497196 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.589992447 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.273471481 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.296610292 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.695759747 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.212293828 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.278167975 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.234488867 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.211147883 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.216126603 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.212901534 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.212765937 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.549884961 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.343215227 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.214277749 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.561111824 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.667969353 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.213203694 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.742529617 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.153527685 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.216689173 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.292869393 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.222499434 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.77306939 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.690640999 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.210274304 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.208258998 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.531516741 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.211069156 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.479540746 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.221873488 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.209007724 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623300761 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.223741779 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.231571639 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.208474761 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.2240605 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.831957633 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.208972661 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.469143801 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.274116555 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.207994594 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.208778784 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.249733586 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.208845958 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.2073716 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.210611993 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.722331939 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.215305492 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.499061743 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.229570189 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.208273984 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.227334647 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.209860857 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.209622986 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.423339823 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.724116864 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.212728796 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.207852067 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.208846587 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.21266236 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.340185509 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.21461057 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.50220294 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.208231515 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.20787936 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.214825698 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.883119261 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.221404922 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.206564249 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.221467467 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.054858336 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.414323716 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.224133203 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.207079914 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.207848895 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.219449043 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.529667762 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.209984778 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.242837534 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.20982096 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.893038564 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.216870556 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.220269233 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.558493405 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.215241045 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.07781353 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.232450419 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.206139899 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.503544677 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.470600551 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.257431446 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.215964558 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.20631914 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.864428781 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.22497823 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.353980659 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.222808309 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.247752292 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.402524524 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.613415882 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.205281714 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.760146287 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.207335792 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.411914127 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.20495443 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.513306405 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.668620327 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.208247336 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.211383711 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875662916 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86753052 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.807632713 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.206666441 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.467024587 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.171660596 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.658127235 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.204388485 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.21383734 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.638548288 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.206628743 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.2117077 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.205895954 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.204936938 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.370212534 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.378112953 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.720734336 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.205283092 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.635493094 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.217145126 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.210152839 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.206470762 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.208337014 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.554832613 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.274646659 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.206555396 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.236674659 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.205977881 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.207074041 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.639981504 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.147891764 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.20638646 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.356672696 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.800616577 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.205656205 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.205865601 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.871465759 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.466472978 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.677020509 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.251877088 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.477202405 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.20704613 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.240369541 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.879008184 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.226327846 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.637651041 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.204164942 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.200657082 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.750010552 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.202064981 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.552685247 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.202369734 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.202183186 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.685076436 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.20146006 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.206118004 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.382794154 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.205920968 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.441605236 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.199199807 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.239624732 seconds)
  done (took 1082.084958977 seconds)
done (took 1343.442217335 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.200961771 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.201005829 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.187167754 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.205323981 seconds)
  done (took 25.935340725 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.214129495 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.208116431 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.208740602 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.208283996 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.211990955 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.208376247 seconds)
  done (took 8.402265006 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.246090399 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.205338885 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.205459265 seconds)
  done (took 18.800290196 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.39830101 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.337208682 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.528056753 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.139156189 seconds)
  done (took 9.546833675 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.21155368 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.211384591 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.210624902 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.214238767 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.216439314 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.218295556 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.213585132 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.213913925 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.216595556 seconds)
  done (took 12.069381937 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.715113603 seconds)
done (took 80.610010616 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.192338239 seconds)
    (2/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.201691014 seconds)
    (3/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.430152781 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.771237256 seconds)
    (5/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.485429359 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.867809883 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.442929341 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.40831791 seconds)
    (9/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.779066618 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.51498071 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.24529688 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.231138865 seconds)
    (13/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.330579972 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.277445986 seconds)
    (15/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.267754602 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.23613145 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.192689133 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.531231206 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.204359492 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.239855307 seconds)
    (21/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.707209054 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.34083629 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.225208538 seconds)
    (24/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.31580246 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.249438272 seconds)
    (26/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.170259154 seconds)
    (27/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.212876145 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.239431483 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.221329692 seconds)
    (30/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.232792825 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.335438867 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.254265007 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.59515624 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.047010287 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.190585977 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.190874244 seconds)
    (37/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.303400323 seconds)
    (38/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.330508118 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.44792286 seconds)
    (40/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.191699732 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.544488223 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.201919836 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.316524369 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.286728254 seconds)
    (45/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.232467281 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.486910931 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.73230987 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.036925003 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.581362738 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.270876998 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.538216727 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.2755852 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.403006671 seconds)
    (54/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.530594699 seconds)
    (55/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.209176553 seconds)
    (56/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.218022185 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.40884696 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.657201057 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.290557077 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.17661151 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.71659654 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.595671645 seconds)
    (63/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.342140008 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.293055424 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.192686449 seconds)
    (66/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.250247561 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.795728416 seconds)
    (68/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.294330857 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.196058699 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.948682305 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.723156559 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.037156937 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.423465901 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.521978205 seconds)
    (75/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.223238871 seconds)
    (76/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.199845697 seconds)
    (77/309) benchmarking ("sort", BigInt, false)...
    done (took 6.223858696 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.204787564 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.946978267 seconds)
    (80/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.532901659 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.441525553 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.633089781 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.703811829 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.261829827 seconds)
    (85/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.296348 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.213167821 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.333122423 seconds)
    (88/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.357322129 seconds)
    (89/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.354800721 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.34072849 seconds)
    (91/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.227773965 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.416654196 seconds)
    (93/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.70005764 seconds)
    (94/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.302790923 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.51177123 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.332424457 seconds)
    (97/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.344662034 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.492240823 seconds)
    (99/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.32991155 seconds)
    (100/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.750306038 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.227307306 seconds)
    (102/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.335981744 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.574867384 seconds)
    (104/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.194581102 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.312159946 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.545225167 seconds)
    (107/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.209919245 seconds)
    (108/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.703855362 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.291943345 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.970746898 seconds)
    (111/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.33435281 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.312466813 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.448925885 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.981833068 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.208301967 seconds)
    (116/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.209197823 seconds)
    (117/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.212037954 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.341175806 seconds)
    (119/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.609604906 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.288150685 seconds)
    (121/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.207911757 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.237422691 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.281101588 seconds)
    (124/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.19446242 seconds)
    (125/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.21942874 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.575066437 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.891481417 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.504895466 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.897827078 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.209811439 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.416983943 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.249787376 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 1.71458798 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.23410683 seconds)
    (135/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.274372458 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.490940135 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.031960369 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.195889216 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.715991114 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.888441191 seconds)
    (141/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.214093019 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.469091399 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.989376069 seconds)
    (144/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.237740381 seconds)
    (145/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.195882181 seconds)
    (146/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.672362103 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.260556323 seconds)
    (148/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.238503539 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.22746028 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.313067551 seconds)
    (151/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.881313196 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.767713923 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.2360996 seconds)
    (154/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.473937275 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.211977739 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.884434598 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.23858397 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.450711383 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.221942759 seconds)
    (160/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.277303297 seconds)
    (161/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.197009198 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.800839428 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.874521208 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.704822562 seconds)
    (165/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.716946952 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.21409484 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.236428581 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.015397234 seconds)
    (169/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.236857127 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.735462792 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.669516383 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.754869274 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.331781129 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.210269389 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.238424184 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.223598747 seconds)
    (177/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.212653242 seconds)
    (178/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.222759328 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.654108483 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.311865687 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.529425196 seconds)
    (182/309) benchmarking ("sort", Float32, false)...
    done (took 5.198332413 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.802464329 seconds)
    (184/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.309718282 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.965466298 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.373528212 seconds)
    (187/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.225533746 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.210560244 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.447663543 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.239878574 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.240245499 seconds)
    (192/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.902872242 seconds)
    (193/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.672291025 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 5.446799162 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.211673993 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.258918162 seconds)
    (197/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.888894448 seconds)
    (198/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.912596265 seconds)
    (199/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.299964114 seconds)
    (200/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.213037659 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.652774034 seconds)
    (202/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.488496154 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.196104315 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.284628931 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.017278122 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.334594028 seconds)
    (207/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.391550907 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.301213183 seconds)
    (209/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.383568136 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.551412792 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.241589718 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.839426916 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.424964214 seconds)
    (214/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.756499525 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.21965254 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.356964644 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.198758806 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.997807416 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.711877289 seconds)
    (220/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.35583732 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.213953684 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.454921885 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.237310412 seconds)
    (224/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.297528689 seconds)
    (225/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.563698491 seconds)
    (226/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.455966226 seconds)
    (227/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.209245077 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.225304038 seconds)
    (229/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.341557078 seconds)
    (230/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.322306466 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.255178595 seconds)
    (232/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.339551392 seconds)
    (233/309) benchmarking ("sort", Int8, false)...
    done (took 4.220339345 seconds)
    (234/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.320574038 seconds)
    (235/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.560589595 seconds)
    (236/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.243575286 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.215273237 seconds)
    (238/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.24232562 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.006923092 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.922426359 seconds)
    (241/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.757761337 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.216783577 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.226498005 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.438260936 seconds)
    (245/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.204351379 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.648165862 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.065355285 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.405932016 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.24450556 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.288342054 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.752978276 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.797456434 seconds)
    (253/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.419119775 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.057077922 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.216317199 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.329872433 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.242788706 seconds)
    (258/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.191380774 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.640073086 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.215814117 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.232031762 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.226752811 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.603572713 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.345984102 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.395209551 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.215859863 seconds)
    (267/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.554215522 seconds)
    (268/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.216916536 seconds)
    (269/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.394879681 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.998992501 seconds)
    (271/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.961418952 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.607333323 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.380768201 seconds)
    (274/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.244710303 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.814716689 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.325631423 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.325879811 seconds)
    (278/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.721035611 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.910316169 seconds)
    (280/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.246280497 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.967391015 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.302080498 seconds)
    (283/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.27572361 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.641675871 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.915066721 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.300875752 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.329033823 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.857619586 seconds)
    (289/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.503626275 seconds)
    (290/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.258169061 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.028090399 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.265441421 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.227947472 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.202636743 seconds)
    (295/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.558083396 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.259961429 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.612075605 seconds)
    (298/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.335841266 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.482977487 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.410361815 seconds)
    (301/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.381150712 seconds)
    (302/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.907487047 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.635879312 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.24072344 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.45910372 seconds)
    (306/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.315496851 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.224127704 seconds)
    (308/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.6050668 seconds)
    (309/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.431722598 seconds)
  done (took 868.718044301 seconds)
done (took 869.86335586 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.251633021 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.244349776 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.228745919 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.250732048 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.341851194 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.258984733 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.240246195 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.231732444 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.277615279 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.278612502 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.228495819 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.257870653 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.231866792 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.230434272 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.229073147 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.242739714 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.161926923 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.229375725 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.247017279 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.239563979 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.245947854 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.228421532 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.280389827 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.257013507 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.232598722 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.233264692 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.232980678 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.250544152 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.342312884 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.233521394 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.234295295 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.242157104 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.16119617 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.228734852 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.225948368 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.249953244 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.241276903 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.241584283 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.234827814 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.262451695 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.514021129 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.230600935 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.232871155 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.231917296 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.233390441 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.235614794 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.232491585 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.237557483 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.244284976 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.245999894 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.530379411 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.247681305 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.235224344 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.233610868 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.243484942 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.231880008 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.237037805 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.247488442 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.251816011 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.248133991 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.149442534 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.237240597 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.234339662 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.247379564 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.239760888 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.543309199 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.227398034 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.237258539 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.52829735 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.238088275 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.543047211 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.240940396 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.234216142 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.245209882 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.263790049 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.166667468 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.22706904 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.232983876 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.240101159 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.232032004 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.242752346 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.246877822 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.238197774 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.234593402 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.247252269 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.261684891 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.244059806 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.235523668 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.243095128 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.25280995 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.241590511 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.244371931 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.236956429 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.22979793 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.242620519 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.238527652 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.236998555 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.236562113 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.239280684 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.245479588 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.520898444 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.250484076 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.231804925 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.230193539 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.233317289 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.247269873 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.521352734 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.235189497 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.255471981 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.281330353 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.236657597 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.156593474 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.237471919 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.250822797 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.243698901 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.238161708 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.230025443 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.156288545 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.511788534 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.248872645 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.237597419 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.233134416 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.25138378 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.237513934 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.232398001 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.171593588 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.236418907 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.248504884 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.35737785 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.247259508 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.266544963 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.233588086 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.239451446 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.263382703 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.251901717 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.267458698 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.23934559 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.250114153 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.251064371 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.232978455 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.246628113 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.247112661 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.236974612 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.242062279 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.231143001 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.2655113 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.248222856 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.249613892 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.25777288 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.356431548 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.234144001 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.159608153 seconds)
done (took 208.065140304 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.295055234 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.22960961 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.319172153 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.233886659 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.331580219 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.330063714 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.232011399 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.232216681 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.231262664 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.61320357 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.232576942 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.233807987 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.228430565 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.231938554 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.316070279 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.236079449 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.232264059 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.574355879 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.234977575 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.304644781 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.233650074 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.233006373 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.236766054 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.613725233 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.234504434 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.227086231 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.3046493 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.236339858 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.578339181 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.23335957 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.228619204 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.578598635 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.325108566 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.252330281 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.245872182 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.242678288 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.333106078 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.249882889 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.316813041 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.315406395 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.321291177 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.275135054 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.233837632 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.228701984 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.237043112 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.237222877 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.23504554 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.26356757 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.236459084 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.234325757 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.575729695 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.246215859 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.234460087 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.235683975 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.235090692 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.265702807 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.236095162 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.237356205 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.327766675 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.238577028 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.299116717 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.616129181 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.615225079 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.237127973 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.235580645 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.236142134 seconds)
  done (took 141.836069864 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.301062614 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.30837938 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.340640707 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.236792475 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.286971077 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.345534255 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.237668372 seconds)
  done (took 10.225908431 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.243015211 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.239610747 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.286481367 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.287004112 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.238123832 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.386163995 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.238228978 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.247211493 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.236703205 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.289858761 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.239412463 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.238562959 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.245393244 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.23785218 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.285424265 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.249589477 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.352915909 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.238187868 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.238228049 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.388912161 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.23673002 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.245902396 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.289051124 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.248645575 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.241415681 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.244520963 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.802890646 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.239283048 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.236908266 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.2395402 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.237014101 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.276408245 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.240544662 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.240228954 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.237167112 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355509887 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.240713004 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.23735958 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.241148599 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.233870898 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.240201485 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.239753445 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.240304463 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.237816036 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.239643706 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.261491231 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.240661055 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.240108238 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.240536222 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.241019145 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.289935171 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.240437527 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.238135886 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.237647421 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.293935488 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.248029104 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.240914677 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.238076233 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.24019321 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.239598098 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.390827686 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.287380576 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.242319788 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.287652602 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.242046446 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.242619747 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.240844366 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.240683633 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.294497937 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.240825332 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.28793092 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.239784382 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.393188617 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.263238592 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.242967012 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.242158616 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.244019502 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.241094666 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.239734734 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.246461266 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.239632314 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.240387535 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.245907545 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.239945778 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.239756173 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.34172294 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.349251513 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.240079745 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.25330245 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.247407107 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.240008539 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.293697621 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.242721652 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.239318753 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.293530766 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.356606643 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.296234299 seconds)
  done (took 144.021428173 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.246549398 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.249133468 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.24400548 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.258463391 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.242880353 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.241000668 seconds)
  done (took 8.656558763 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.243978884 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.243136125 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.243454992 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.243954083 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.242943797 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.246391953 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.243983206 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.243331788 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.245978758 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.242757963 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.244260859 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.246568657 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.245654618 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.245183602 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.243015784 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.243919836 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.244177548 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.241548526 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.244299377 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.243437473 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.350031302 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.24382902 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.243912422 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.24540737 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.249460378 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.245226591 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.250277224 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.245595043 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.244933716 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.251296009 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.247198725 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.246070378 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.244457876 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.248496567 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.24834245 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.244039499 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.24914684 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.247991819 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.242890199 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.246796592 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.248781132 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.24460698 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.243520808 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.24851006 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.24425359 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.248604393 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.251523024 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.252811843 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.245409841 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.249526762 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.248423859 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.246871105 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.246540845 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.248334491 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.247188254 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.249085908 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.252125676 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.246988855 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.245070298 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.246493199 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.247142001 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.247954399 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.24778504 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.249828776 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.244214383 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.249955659 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.24630387 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.248898151 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.246613232 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.245855394 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.248969642 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.244331574 seconds)
  done (took 92.017030153 seconds)
done (took 397.922859315 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.449843007 seconds)
  done (took 7.627853313 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.330651208 seconds)
  done (took 7.510844434 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.096891757 seconds)
  done (took 20.280380492 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.284937961 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.344336219 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.25309903 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.243104395 seconds)
  done (took 26.305015206 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.401100278 seconds)
  done (took 7.579864986 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.249491868 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.248329707 seconds)
  done (took 13.677141987 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.491994131 seconds)
  done (took 7.670346215 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.668491311 seconds)
  done (took 7.847708463 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.261189437 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.258539248 seconds)
  done (took 13.949647173 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.225014669 seconds)
  done (took 7.403700776 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.838393888 seconds)
  done (took 8.017733212 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.246909733 seconds)
  done (took 7.42789897 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.302754395 seconds)
  done (took 7.48100139 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.551393236 seconds)
  done (took 8.730137688 seconds)
done (took 152.688002422 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.238127968 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.237619817 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.239141699 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.239877706 seconds)
  done (took 26.133515323 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.279338644 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.279821631 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.282828304 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.29122757 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.283829818 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.279910747 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.274568617 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.27376109 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.290872641 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.284813474 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.283135604 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.283853402 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.281613414 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.274422828 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.284967158 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.282563018 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.291107572 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.283023263 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.275032356 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.284653407 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.248974561 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.292428412 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.286534578 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.248529758 seconds)
  done (took 31.903088848 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.44205735 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.317485673 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.400212583 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.298793951 seconds)
  done (took 6.638324261 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.301672269 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.302054063 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.312429401 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.352715306 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.384013417 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.310369435 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.275752155 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.270730346 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.257124692 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.30230633 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.378101239 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.318628567 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.386381431 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.248340101 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.431146818 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.251895677 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.249129545 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.300827358 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.352235028 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.366581621 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.248673744 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.300615319 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.304951643 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.32119921 seconds)
  done (took 32.709317076 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.247130858 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.256188397 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.255384769 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.249340951 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.24909229 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.249709342 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.254927893 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.250638706 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.270429604 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.250972108 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.249554064 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.249909534 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.247476713 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.250189319 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.24882477 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.261889449 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.263509006 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.250215269 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.252830328 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.256032918 seconds)
  done (took 26.246461141 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.242209783 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.181593099 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.594855593 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.498263814 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.243088625 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.244749264 seconds)
  done (took 27.186480477 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.308127246 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.432312486 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.249445899 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.560588673 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.634310779 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.250346911 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.250423684 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.465076888 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.727689045 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.727397548 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.299698197 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.307620061 seconds)
  done (took 18.396757063 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.24402826 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.243472547 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.254339132 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.258900745 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.296453929 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.253491642 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.256722795 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.243003781 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.299478517 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.300888041 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.253593417 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.298294519 seconds)
  done (took 36.386617495 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332810572 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287859698 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.168251281 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951791362 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385806556 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.456976013 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.980956323 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.654112772 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.254613501 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.520412118 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.92619434 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349816042 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.500363924 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251195013 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.250635907 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.131544828 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472114905 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709485028 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.248173968 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938289624 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271416846 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.245801111 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.022369433 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.272954908 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.458223183 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.223799962 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.508256041 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.022604122 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505112471 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.259141265 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.257907867 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.247819832 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.521979636 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880388624 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346924227 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.258655058 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.914629317 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.882242387 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.243813575 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.942422041 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.748251106 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.249958364 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.257187065 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.248824535 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.182724014 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.248187249 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663607321 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.258055433 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.959469765 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.248618139 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.258545958 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342653747 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.252530367 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.239363087 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269601297 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.254055072 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.245382575 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.254310713 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817899845 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.380952693 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262221446 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.186683683 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.595167989 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.94452084 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818214496 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.350453444 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.25192897 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.251990372 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.184199888 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.944569887 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.265668303 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396947 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.275038681 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898650666 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89369109 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.946961395 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.194974872 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76948565 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.259933613 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.185742611 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.475107688 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028088011 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186171797 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.195364165 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.183657349 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90547607 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.258205157 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.586395071 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.259982828 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655336063 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.264619082 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269062571 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273474498 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.474951744 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.134860949 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.250329354 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.700538708 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390697909 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272832107 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660464782 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.188919216 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.254603563 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.506379357 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.461740771 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254886926 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.135088411 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43088517 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268120851 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.269494161 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.256149253 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.264986916 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.774933125 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266766178 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.387165835 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270550933 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.030044357 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945599061 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251896431 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.35631473 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.938672462 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.490847743 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.97328607 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.134409697 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319925661 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256096551 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.252743453 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.008765899 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104961347 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.133081357 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.253752499 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261892205 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.263953279 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.251334157 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195877324 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.255274829 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982924803 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.03486985 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.474808718 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.25937983 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53015533 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187636223 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399186294 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262610013 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.476156874 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.358962791 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.25261021 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512356102 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263936445 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.262327124 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.266262234 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272744878 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349577757 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275745709 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.265718908 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.511704996 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.257790403 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.25829542 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.050095674 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.031547763 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26191905 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.258861388 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.061810033 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778296028 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2333871 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.257708308 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142774054 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.269221124 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.321878192 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.259928621 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.265139876 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.91753597 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.024885325 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.262074237 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.262648912 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476806634 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.266269489 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.933989827 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335722595 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.430968593 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.784207022 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.269778626 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.188685511 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.966126006 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.947551401 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.254343726 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.449875081 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.255242127 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264997609 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267179057 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.732792957 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.786256274 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261019893 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.935613439 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.263872176 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.265744849 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.26172835 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25551516 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.890952793 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.39790385 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260068539 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.281986981 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399917748 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.269586467 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.189817322 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.772144222 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.261659155 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.257050754 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.035222259 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290952239 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.942771667 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.716022266 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51761439 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.911417636 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271834445 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.093135064 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.2877674 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.255053428 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.740213287 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272385514 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.265876015 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2808208 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.267873216 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.999029371 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.695941733 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822994765 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918002479 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777933448 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087581036 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.26296412 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.140540905 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670414748 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196152397 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.912922491 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.427272316 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668837385 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204935629 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43753365 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.373483067 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956264264 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.266910811 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485138779 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082345535 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.755248627 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.280601647 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.471241879 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2932522 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.260808863 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.189447472 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.544502489 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.468992266 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.773824372 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340129568 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666483408 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.754493947 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.047080092 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.255464684 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562115426 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41484439 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.890716084 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.645211666 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.26632155 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.982601769 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.725426055 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.264586258 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.784442732 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832298955 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.261611511 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.440546839 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198440866 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.269690625 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.269232607 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.259705665 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.388678498 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.262421593 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.513559467 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27156379 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194629867 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269667319 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751902696 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.114501753 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.265915016 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260858205 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960669146 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266644031 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522027955 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.261503384 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.895669584 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26482277 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.194672854 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194302402 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.953932366 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269582906 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237194181 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719184814 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.59125569 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.234311628 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280797405 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107683576 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.51701116 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.274435348 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.792492636 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487751098 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.023854398 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286265422 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.362088918 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.820879364 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.261670737 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.160531977 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.497727452 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071258289 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.484652008 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.197846633 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.169774725 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.257930036 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.478334095 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.162122905 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.022682474 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499483876 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.974129854 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.278830854 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914685823 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287732921 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.99916497 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285866611 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.609439397 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.272218832 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331276114 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27369061 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.273128828 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.274235457 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417304986 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.025466545 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276756594 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.27712601 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357003653 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.45222641 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.882381043 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.037156609 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800772877 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946731033 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.799133395 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.275572969 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.263479002 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263632895 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196344588 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41205073 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.78931634 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537557552 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393340751 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.676909584 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288347559 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.810180822 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282469652 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476729571 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538117781 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.133332813 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275776226 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.924287998 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.15370843 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275347002 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.475268035 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725806945 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793287649 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382608762 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.266227036 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.675182622 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540151857 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.356490111 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264900175 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.854464447 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.266811434 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.585652108 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.271876814 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044450054 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41363087 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275603446 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903292565 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.277546968 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.424181116 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.038784364 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.081453261 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.521677044 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.68851373 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.277442308 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.80194693 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.910271629 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52870406 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335575811 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27620589 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.369744185 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411601024 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.267621188 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.173725027 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.265476588 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113535989 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.976277755 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.276046272 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802554607 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.532134935 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.263679963 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.269626683 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28850955 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.276030624 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.49019998 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939311873 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.489909707 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275955619 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.275645121 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.257297638 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.802498403 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281284209 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201531156 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.270910142 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494402145 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.506375824 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292644718 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.719884239 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.978469017 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793115576 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.238856005 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287118525 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267053688 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.929651673 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804887615 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.895431711 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738615321 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.926040408 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278402472 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544785959 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.272906028 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268090311 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547793134 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.272222541 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.267544418 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282500598 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.801325228 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977716498 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.286578402 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.989190229 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.207236291 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.493122529 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.872245297 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207711425 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269427569 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.436160088 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.272072642 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398268525 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279469083 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.273992314 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273520472 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.020815221 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54885176 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.275197208 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.259127615 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.837060286 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.284011879 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27591396 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.483199646 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274379862 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.943350709 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.619542296 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.525120714 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.279928602 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.25559695 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.273664002 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269443836 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.986969292 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.238362938 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.748795934 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805270476 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.279140692 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.281695469 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273172998 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.486190555 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481893005 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.051581334 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.295606513 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278178527 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286365041 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.181032898 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.037447281 seconds)
  done (took 1532.230689099 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.276944061 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.299705622 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.287868068 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.281932845 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.283742819 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.35674347 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.321396938 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.28583617 seconds)
  done (took 51.602616689 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.268024254 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.423234785 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.298921482 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.281444199 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.279002056 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.276396305 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.689450061 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.279521551 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.278591888 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.27932776 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.273511404 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.265117172 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.866266177 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.270629108 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.262482105 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.25094406 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.263377463 seconds)
  done (took 64.01796342 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.254967323 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.407689507 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.333279604 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.260499093 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.844039885 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.260849174 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.385883172 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.30264658 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.261100069 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.531743933 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.909811938 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.25427858 seconds)
  done (took 82.201347759 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.259854945 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.259250072 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.261022612 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.260026586 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.260911795 seconds)
  done (took 7.492981315 seconds)
done (took 1944.326560855 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.530879402 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.85874188 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.836610817 seconds)
  done (took 4.887306097 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.399233056 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.447975712 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.566821854 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.573052109 seconds)
  done (took 7.178789844 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.54896799 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.626581961 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.44908468 seconds)
  done (took 5.815187623 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.51936478 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.267033003 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.371606747 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.252257779 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.254490467 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.256555799 seconds)
  done (took 19.955287349 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.256752415 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.260036406 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.257221814 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.259240123 seconds)
  done (took 6.225097071 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.237820605 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.950177595 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.2375401 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.260233742 seconds)
  done (took 17.876415945 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.003313018 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.016428613 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.001186919 seconds)
  done (took 7.213193911 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.265002285 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.09599995 seconds)
  done (took 9.552071132 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.548146708 seconds)
  done (took 2.740133163 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.387672246 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.582595713 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.232464791 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.171560608 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.231987215 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.664054161 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.708872331 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.328122257 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.15786327 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.182128229 seconds)
  done (took 25.841247944 seconds)
done (took 120.166821784 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.767583312 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.499738288 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.454609412 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.736148672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.482804381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.455490162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.4684753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.699858783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.243860213 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.236731667 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.737583338 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.482540982 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.4099304 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.49945585 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410433361 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.496344739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.478571661 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.815798295 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.421251869 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.618050719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.469609172 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.374461482 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.568692157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.395031252 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.47674574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.40722713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.95147852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.49938837 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.593219855 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.973413879 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.406669563 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.796575807 seconds)
  done (took 186.521795226 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.256158968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.262250079 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.252830562 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.265888631 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.254630027 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.255155497 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.266906669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.271971724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.267191205 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.276402422 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.253593168 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.254381395 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.255813273 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.276178053 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.254259003 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.260308287 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.254607414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.266301671 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.261365492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.254537766 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.254577605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.268254477 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.25441505 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.257152477 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.259547308 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.255739732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.254671948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.266233431 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.254530082 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.254362598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.254381688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.264379515 seconds)
  done (took 201.513603532 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.254655272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.256235827 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.2549153 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.271413407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.256038459 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.257018833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.26901808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.255542923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.258508174 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.256301276 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.260646388 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.255592341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.270170198 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.254761131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.254968888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.255704056 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.255449439 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.256291047 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.255831951 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.273064663 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.256601362 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.256340846 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.260937593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.262339194 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.257121928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.257175765 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.272526178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.276567177 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.255889473 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.268138933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.25639258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.26838612 seconds)
  done (took 201.526684523 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.453337192 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.26610239 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.266998935 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.202829886 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.2655869 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.265589115 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.263617666 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.463085884 seconds)
  done (took 13.644438151 seconds)
done (took 604.39955356 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.4461233 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.173455985 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.460044387 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.288446938 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.968429338 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.288410424 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.289181074 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.44083348 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.147959664 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.441585317 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.448824167 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.282940281 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.584484911 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.285645835 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.518369099 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.377393346 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.086700349 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.195194377 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.578161534 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.743880852 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.533455209 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.643758215 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.438538471 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.154080224 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.581639216 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.645999169 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.882454719 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.086128795 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.286408103 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.581887783 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.778490362 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.135221283 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.335985218 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.319059162 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.373721553 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.356403306 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.107472935 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.315952413 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.461151257 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.413800469 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.752746801 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.979141369 seconds)
  done (took 86.408237292 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.255303904 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.256235055 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.255610678 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.256057049 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.257987906 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.256654747 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.255189197 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.255946513 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.256832429 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.255998952 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.256091059 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.257479635 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.25712263 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.258385912 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.256513219 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.256076208 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.256282328 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.258187774 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.255744041 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.256336507 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.256335132 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.256045865 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.256720244 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.25548115 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.256966447 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.256960141 seconds)
  done (took 33.87069626 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.270516168 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.511579376 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.661307346 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.27735717 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.269992396 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.27530197 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.339463081 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.273335132 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.272877534 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.273592784 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.415379582 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.275544499 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.303369931 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.680981713 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.274762385 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.272226131 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.271876334 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.271680622 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.519228182 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.280902825 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.358454083 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.273071524 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.339736452 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.280665621 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.29033638 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.272052831 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.275997031 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.792768404 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.27216952 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.415619878 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.966379826 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.338014796 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.735677854 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.669724284 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.960083362 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.275455728 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.272900794 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.424482674 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.274894595 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.2716516 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.34012088 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.272931575 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.667570141 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.87685498 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.288620452 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.277220214 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.804873796 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.418170242 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.487370173 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.281504889 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.691039078 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.276808207 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.276448595 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.274436588 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.487670426 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.282062293 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.273098555 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.791641542 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.293035138 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.340578578 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.275660528 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.274289832 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.525484974 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.274577205 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.513568545 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.274841203 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.282216491 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.274702285 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.670249631 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.278509118 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.902179879 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.287839601 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.274322062 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.416223292 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.515747763 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.835057574 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.278100657 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.528894017 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.75059329 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.339370392 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.277513348 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.7748219 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.343346235 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.27846084 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.277765458 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.277249424 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.276334643 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.323804383 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.338640688 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.821660014 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.887849823 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.797510562 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.354179215 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.284480183 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.272850852 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.788410967 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.285905651 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.27240447 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.660813994 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.89275799 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.286221757 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.279635801 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.886528093 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.288579243 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.341065935 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.277497722 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.674843328 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.274896708 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.32430047 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.273277807 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.279638964 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.275682083 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.340430855 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.275639485 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.273519789 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.864607506 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.436989649 seconds)
  done (took 167.571654797 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.264299796 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.278380488 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.27555939 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.265318163 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.2657195 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.270927761 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.264727773 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.258660833 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.264293274 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.257944674 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.2517902 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.246537366 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.244039519 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.247974432 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.256510743 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.252732945 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.855289089 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.246790944 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.246756097 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.244762414 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.016794731 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.249234142 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.246735492 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.245013814 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.247325766 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.246555444 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.262475974 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.249157282 seconds)
  done (took 149.726854678 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.253726152 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.75620637 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.253526022 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.368739247 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.271641316 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.250606541 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.366536768 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.302693146 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.254436107 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.251199802 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.251304523 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.520513717 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.255147766 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.711027363 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.420513124 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.368053472 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.711498946 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.255576061 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.252000893 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.251294434 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.371040738 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.260149925 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.522160706 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.764793283 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.257349791 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.766311943 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.244053086 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.254485134 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.252297387 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.767671324 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.255716055 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.527407073 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.32176456 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.306512497 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.768878198 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.72174348 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.721251935 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.38319245 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.253507558 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.251207685 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.253699131 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.243543258 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.770711842 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.258373737 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.255402864 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.76054013 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.270662564 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.256115606 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.266173361 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.25376202 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.306137383 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.307021408 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.530772931 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.775827177 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.325634446 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.275788743 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.371421185 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.621548505 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.258900979 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.720200224 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.243977803 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.770759358 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.260851957 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.242150433 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.258885152 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.261301896 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.388241831 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.372085366 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.718203063 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.256607284 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.717074575 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.388068857 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.254417578 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.254534252 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.257863772 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.771687739 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.720744754 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.387679903 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.374750925 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.427688643 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.245076356 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.254670625 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.244992949 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.324615419 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.255846874 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.77483214 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.721041459 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.257187726 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.259015417 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.25791358 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.258621955 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.412055212 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.776009512 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.326311976 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.714650295 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.543433739 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.531748958 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.25907852 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.307902819 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.25690786 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.531718749 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.25904811 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.306524206 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.679853436 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.532896374 seconds)
  done (took 149.187922633 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.480592341 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.359011969 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.340612309 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.360682781 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.82116032 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.788485499 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.432463162 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.369670885 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.355379454 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.484699409 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.326305155 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.348821251 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.408029331 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.331321881 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.933481331 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.319314136 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.341948001 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.377453303 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.342739094 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.230950198 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.836591606 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.534695447 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.411415893 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.098443072 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.338300587 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.963292504 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.770245377 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.787542992 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.413906798 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.469052574 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.762940704 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.314927353 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.164356755 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.864502101 seconds)
  done (took 60.673245802 seconds)
done (took 648.636545626 seconds)
SAVING RESULT...
DONE!
