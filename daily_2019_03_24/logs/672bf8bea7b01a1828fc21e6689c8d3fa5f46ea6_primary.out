cset: moving following pidspec: 3906
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.345235406 seconds)
loading group "string"... done (took 0.596244588 seconds)
loading group "linalg"... done (took 7.377062723 seconds)
loading group "parallel"... done (took 0.170647909 seconds)
loading group "find"... done (took 1.185699032 seconds)
loading group "tuple"... done (took 2.074683606 seconds)
loading group "dates"... done (took 1.30097122 seconds)
loading group "micro"... done (took 0.243013441 seconds)
loading group "io"... done (took 0.986768683 seconds)
loading group "scalar"... done (took 40.648752997 seconds)
loading group "sparse"... done (took 12.917550782 seconds)
loading group "broadcast"... done (took 1.000822974 seconds)
loading group "union"... done (took 13.788529301 seconds)
loading group "simd"... done (took 4.67614809 seconds)
loading group "random"... done (took 9.482243898 seconds)
loading group "problem"... done (took 1.98662291 seconds)
loading group "array"... done (took 22.318242345 seconds)
loading group "misc"... done (took 2.000374333 seconds)
loading group "sort"... done (took 3.404408748 seconds)
loading group "collection"... done (took 19.133430376 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.556809803 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144128776 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119865984 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142429715 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188737125 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135283658 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145372969 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085588612 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.893493029 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162111865 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141548213 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.516342166 seconds)
done (took 4.972523579 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.196038312 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08960899 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098209127 seconds)
  done (took 0.86497979 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067927935 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131898756 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083368034 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069884867 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069379672 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083972538 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069054751 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06831894 seconds)
  done (took 1.273288381 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076761415 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071142293 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087330006 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070517879 seconds)
  done (took 1.002027039 seconds)
done (took 4.104775069 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.940301499 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.252324699 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192577725 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.484911823 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136244566 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.195158546 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67314851 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341272898 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.215222043 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102842849 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106252127 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38857217 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108057324 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.662504844 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079081293 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109621367 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.162192961 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434413281 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081735086 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083688072 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104441482 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141392186 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101645167 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078953809 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16963586 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072891315 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.157096755 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.099777477 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068393571 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.250761701 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192024961 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680798526 seconds)
  done (took 10.607884233 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101482313 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.123805874 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071810847 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144193568 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122521687 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073532792 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074217385 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086706909 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095663017 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.166385193 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.1213712 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.127428081 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069318175 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07303863 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.105664469 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232763856 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.095038445 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104428928 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074918436 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077919856 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.128382493 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.101188422 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084431444 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097847697 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154434506 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193324962 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098928391 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112613985 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069800329 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099982441 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131542762 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132907264 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070076204 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086488036 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.161467777 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098735075 seconds)
  done (took 4.672665231 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.110514209 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.181492641 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095848709 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1606108 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089108588 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132283168 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069101454 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104121792 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253410523 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.110711802 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.118495799 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.490804612 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114605459 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104237021 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068910973 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086554549 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070283021 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111455639 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.604295402 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139528552 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.130267313 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087395172 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091298338 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072093827 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068226941 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084209636 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070137531 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.121719396 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.309150683 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148140218 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086944817 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.250367791 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110949736 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068720616 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122808553 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19072127 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068670037 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09727609 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12705089 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08331708 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06735898 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173140115 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074142598 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085304312 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089793482 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121856451 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121468425 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083694441 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069063534 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184347241 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067656756 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10094887 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.928013083 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167082119 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079030905 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068675353 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29713483 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102635576 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069274145 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064542683 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.252506763 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.159916344 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067611087 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084909952 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071380565 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085365312 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380626161 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069012196 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.006848577 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070214377 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077691507 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086942902 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069066699 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090280786 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073881885 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103482402 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067857639 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068745671 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085068808 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066398338 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086053777 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087737253 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.206431019 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.087748907 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068518999 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081730425 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066294864 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086626982 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11510254 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085208484 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067855168 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115300211 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070968847 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06907267 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122205618 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068023755 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104379688 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085162157 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1149336 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084425122 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.111155235 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069282443 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116682537 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073195468 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115899305 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097275368 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073701239 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.158694432 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065979262 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082956127 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068041238 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081908109 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069692339 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069039935 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100518705 seconds)
  done (took 21.64432485 seconds)
done (took 38.730198871 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.313010173 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096022335 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093921093 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076480103 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094385176 seconds)
  done (took 1.436445303 seconds)
done (took 2.168918044 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150185649 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102861033 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081344228 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098033882 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080917924 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104236215 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117439568 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082881136 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118771459 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064920801 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113797337 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065088854 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080131328 seconds)
  done (took 2.023897158 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082617944 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087074068 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086783408 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082365024 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080360214 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083176205 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082080898 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108236242 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082206004 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09080249 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066341175 seconds)
  done (took 1.662267666 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084539979 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086317275 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088305778 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082699726 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080240095 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082227919 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082139312 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104785351 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083096598 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091119718 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066662111 seconds)
  done (took 1.672083563 seconds)
done (took 6.084781172 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079634526 seconds)
  done (took 0.805660673 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.743468405 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.877988469 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085468115 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13774262 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224306454 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.158406127 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.454422275 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112908426 seconds)
  done (took 10.730919613 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.116118939 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.089269298 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071686155 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087380209 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073275292 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087564465 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073268769 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069644688 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084892042 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072126051 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087539037 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073340149 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087595694 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069688081 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085082935 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073906208 seconds)
  done (took 2.101695956 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105584112 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104237306 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092367162 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077119844 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090398338 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074412574 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093762274 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076530753 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088016524 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074006829 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092325625 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075936363 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088359808 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067256429 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091419504 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077534746 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087995197 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077083788 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092345058 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076110392 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092091931 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066468973 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088406956 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075659031 seconds)
  done (took 2.870936356 seconds)
done (took 17.244798993 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134416315 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078052926 seconds)
  done (took 0.946675963 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083628128 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100955763 seconds)
  done (took 0.928232894 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084441208 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081591932 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090373993 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093950895 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08294285 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067446432 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102977084 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067885211 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082356956 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067876472 seconds)
  done (took 1.562555527 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070436239 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094571702 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071563224 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098413956 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075131281 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080845957 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074395881 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085544997 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080413894 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079974095 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072224414 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099916858 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073280318 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100925063 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090685389 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070281717 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087272084 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068564948 seconds)
  done (took 2.217352217 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067321387 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069299548 seconds)
  done (took 0.880653754 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068519392 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065620987 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083704089 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067707263 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080021625 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064204792 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080183208 seconds)
  done (took 1.253277469 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.412277716 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109689498 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267138624 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074303384 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107028237 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295211538 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06754822 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071204571 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089659944 seconds)
  done (took 2.277102688 seconds)
done (took 10.806268735 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081020321 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087026413 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112846113 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.43404385 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106992091 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067627516 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144888494 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.214285878 seconds)
done (took 1.993059078 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130868262 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.625100076 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.413348526 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.21653716 seconds)
  done (took 2.004995546 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.385715115 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091333646 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076109375 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070244012 seconds)
  done (took 1.376704154 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067729425 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070844204 seconds)
  done (took 0.889879224 seconds)
done (took 5.150719327 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067603481 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06785885 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.113997945 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067393729 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.083910101 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067414838 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066282758 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084949247 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068733721 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086224738 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068937739 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068905648 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084593221 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066864833 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066786846 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084599159 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066659003 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066600011 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083447371 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069586177 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08228496 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069452686 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066852382 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082857594 seconds)
  done (took 2.589857957 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086597713 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08382338 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073169132 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088844326 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07216019 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089790911 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07637032 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068604308 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08987871 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071031592 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087630793 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07242408 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085146534 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071522033 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086106747 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072402246 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088786622 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068369758 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071162462 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088278208 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074940081 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084937257 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073561868 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091188247 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073521726 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088466438 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070680625 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084316107 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073356242 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08857192 seconds)
  done (took 3.149723354 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072334567 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066900167 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084333435 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07389645 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066900462 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084832486 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067299784 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083089853 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066597039 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066411182 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084610881 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066031685 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06702409 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084418567 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066897587 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085962332 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082381877 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065951786 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082524011 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066256759 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084698131 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065901591 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065446792 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081859528 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066244667 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064918253 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082135391 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06523634 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082034839 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06596119 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068366342 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084767741 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065029983 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072306796 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084888336 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064638509 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069719187 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081499203 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066009568 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080580245 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065078504 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064609747 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081631981 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071878309 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066137653 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083108096 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065281073 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082036684 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066217386 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068831962 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080751946 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065094237 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083155026 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067060007 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069892199 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080630378 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067164666 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065839317 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084752185 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066199475 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082452522 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066220753 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069278476 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084277785 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08277881 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089688909 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067097704 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068578887 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084591339 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06909092 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068773248 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097826228 seconds)
  done (took 6.076134176 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119847465 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0942948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084182249 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067716522 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08015179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06588419 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068712283 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081217375 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067585658 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087473685 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065559164 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082796302 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066835987 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0805521 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082667606 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067622263 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087041889 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063557605 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065424497 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084460567 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066110646 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085409871 seconds)
  done (took 2.474984847 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190420539 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08831782 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111591485 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090929109 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085512805 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075409478 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087212081 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071380321 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071408684 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085535083 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070129041 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088084759 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069848481 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085790539 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070360752 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086150243 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071959865 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086097821 seconds)
  done (took 2.343513326 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079209025 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067721072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107265398 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067549556 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084612102 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070073051 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089766413 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076418729 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08647788 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067821584 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092299696 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070076134 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.196250728 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067658196 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070020464 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083978453 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069760858 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083721762 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076082534 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08899575 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073607436 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093415865 seconds)
  done (took 2.621897062 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082459346 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069391789 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102390365 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086709896 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063774677 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065910855 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089704368 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068107579 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090277118 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069002813 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083818557 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068015795 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072446905 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084689803 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072706486 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084939688 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070147976 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083689223 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07024334 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064758605 seconds)
  done (took 2.303311053 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089823771 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085701994 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069015676 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094759337 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069090274 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085464326 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07796603 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085842475 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069110756 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10974794 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069544892 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085595268 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077538608 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090846921 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06936711 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093508424 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077542807 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094314019 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085310632 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069864881 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110124598 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070637263 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094314891 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069966451 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086087309 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070007628 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085881225 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07511147 seconds)
  done (took 3.077402056 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068085223 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068013416 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081653771 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065239885 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065455529 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082200435 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065744415 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065329469 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084234642 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065247614 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083562923 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067717928 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067405135 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084246286 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067536284 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067654962 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084177953 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065060717 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065249532 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081654703 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067773057 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0840989 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068038868 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065691623 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082243662 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068154977 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065875282 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082081645 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067891843 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065539163 seconds)
  done (took 2.929459892 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078289025 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092246928 seconds)
  done (took 0.937821436 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065745709 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082398178 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082480546 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071991179 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089444582 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068431835 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093537312 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072866791 seconds)
  done (took 1.390929103 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084804931 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081204397 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088177485 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.096569998 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079293725 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086542269 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159822195 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085880169 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075217426 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083818987 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082919676 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067080118 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091913818 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06840659 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091035506 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074183559 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081713677 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073557023 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070529475 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083170431 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069920678 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095502485 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070299187 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081684055 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069911621 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076858673 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096753321 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068896363 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088408903 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075587256 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090186665 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062019832 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068214803 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085375317 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066045615 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.0944825 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084009535 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088832516 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077693121 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085574344 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078474082 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080049314 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073259776 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074338051 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095601147 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067989178 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08506484 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063434809 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081768791 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070594696 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063118192 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084367317 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063258927 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092221073 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071609408 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078024839 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083664175 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069835796 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088307845 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071733064 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090813536 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070232554 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070672467 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.0849273 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075598095 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08889545 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077739206 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079533108 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063278674 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066408441 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096627757 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091749664 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091158662 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068851925 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086152265 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066148486 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073044963 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088118606 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075817565 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09246516 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069602094 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091965833 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076510377 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084972118 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071387277 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.0770564 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083532382 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070169636 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083275168 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085379671 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084817113 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065939604 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066362522 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096329846 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071522187 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.08561086 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066625176 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093533151 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064260428 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070728876 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088906702 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071071269 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097459296 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073622642 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090168033 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077343698 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094394836 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070096774 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07286243 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.08472758 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071365544 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086139479 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077596365 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063221747 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090196202 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070329853 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088113715 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079235954 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085174243 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070207125 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07798636 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092644608 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068679968 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083955086 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073663434 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086397199 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073490459 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078297255 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086406407 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065089853 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082374809 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.0734892 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069534976 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091178897 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075272614 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090561006 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064533647 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084769232 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074553577 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097270653 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070268741 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07108779 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093441092 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071415361 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086449586 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076672731 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072441385 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08670397 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076148207 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088129754 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06598973 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089951279 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072762452 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068234169 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090641043 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074150944 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090062752 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070954432 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068248739 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093030591 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069801313 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085803299 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068589409 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083558219 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07908143 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069973633 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081213733 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065459941 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092514382 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066061612 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067722374 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084681933 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071004505 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086217419 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066636404 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083950486 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070478725 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079987661 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08953086 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068769694 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090686738 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079689496 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084761254 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071175602 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085388897 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0712928 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070997476 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09722809 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075713725 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093013475 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073209543 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083645752 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075297622 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077238062 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085782399 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066648413 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085413564 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072609297 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091067111 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072169445 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070334675 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085359697 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071034383 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091233815 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072475232 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069129546 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086068506 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073393203 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085329567 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075088195 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086059255 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078712394 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088917608 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064044724 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071486525 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084384629 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074460912 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080651906 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066335563 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066916845 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086227278 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067031473 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087985406 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062547277 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076123473 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094279606 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068546908 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084547625 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068060248 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092636639 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070392324 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072561644 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088928209 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075006547 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095711268 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068204528 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0885576 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079686302 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067633627 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079488297 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073683046 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083663569 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067513317 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067163552 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083885592 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072084075 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093278862 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075366873 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079832763 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07162073 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066407458 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084494075 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063900464 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089738639 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071122828 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06837956 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092228032 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069182223 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086109688 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072074758 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084503697 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070029224 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069162422 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088744942 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069697837 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087902503 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068390974 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087922517 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067884538 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065875075 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087239295 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068946805 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067805708 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091270587 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068714084 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085932142 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071258309 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086394551 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06961087 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068248597 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085447587 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071332307 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085908881 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068756557 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070789433 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081138281 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076174008 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085538642 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07717846 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067924616 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082604105 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0737678 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088417126 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074080095 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085797244 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070441495 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069464997 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086102798 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071050828 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092426157 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066391812 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096976363 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077094997 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086314182 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071795589 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068273104 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087659128 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067472517 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085903216 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069116607 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069197051 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085699874 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073145617 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088272999 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068996989 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070725327 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086451268 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068777499 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086076742 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063484262 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067524101 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08560315 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068880699 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096256312 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069225259 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.0850987 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068263108 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069307921 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084709423 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064951415 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09367986 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077106704 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086284461 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07626904 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067995629 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088103382 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078619953 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082805291 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066491715 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083360801 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066744227 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076379395 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086931849 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078550962 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085866439 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068106507 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066023899 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08696911 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067819395 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079975573 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066952275 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072638632 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085032591 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067433776 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086012578 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072240606 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069663955 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095724746 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068364373 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086640807 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069310917 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083026663 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068059739 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06723063 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088943378 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06982133 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066175488 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083321978 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0686684 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087593235 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070449604 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067800179 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087766208 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075559325 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085705754 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072240094 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089068101 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064096084 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072021418 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085750239 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068088405 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084522696 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073024639 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071720406 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087406961 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078130192 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085442236 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070281642 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086384513 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067006015 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067798526 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085239497 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068440293 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084905164 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070575446 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07684032 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08486457 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071455733 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085513402 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069105506 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092959362 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069951436 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07176948 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093232495 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068466516 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087513637 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077992358 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089622234 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072037734 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086685171 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070050678 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074087719 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085652928 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075024248 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085760093 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069975442 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0701948 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084209529 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0680721 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085775891 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067689017 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074902025 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086870506 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068536033 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084754272 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06699367 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069342027 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089698725 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076202465 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089237367 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071974397 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081128752 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066578292 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069107336 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083749427 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07047274 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089365151 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074652301 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070782972 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086235918 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06820586 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096012435 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07543632 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089604153 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066614312 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072069945 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087232067 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07173727 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087817048 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06938879 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070777827 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09236033 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071202152 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086565385 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076719533 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090967935 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071798123 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071748397 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089859043 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070519949 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065030491 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070256293 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070411619 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093081645 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071968683 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087095516 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080704078 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067021279 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089455084 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074415651 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087717962 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074791814 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082817237 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071693912 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070581434 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090274512 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065658836 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0871644 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068268246 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07283183 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087580602 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065905872 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100252809 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080624549 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091723914 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06948528 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068793492 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084318913 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066063002 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086816792 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072244514 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072120845 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099788506 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069640429 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087575754 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065777059 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070601339 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091639221 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073686824 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086011272 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066480774 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068766694 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092102487 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075604562 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0868745 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070607945 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072754404 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090687756 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06829163 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091736576 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067203394 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091911435 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084540642 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071105973 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089860593 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07683937 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097387441 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071119891 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083763882 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07130247 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073701959 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089343094 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071118416 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089691572 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086583773 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091667715 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068096862 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085428532 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072255942 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06851911 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096613267 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070730796 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087107673 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073328035 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070437142 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094965896 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070780809 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094527601 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071789069 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090048696 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067921096 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08630548 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067223582 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067940485 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088763514 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069703228 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091104785 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076578594 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085345572 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080759083 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095374924 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070915331 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065766459 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086337125 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069392732 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064175267 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08770192 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067420318 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084900927 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067943637 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067174552 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088249841 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075035077 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087410047 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070494903 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.0854235 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063792905 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070850853 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089315081 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070545824 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06489666 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08723365 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070072758 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090196052 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072511217 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084377331 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070759239 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069926638 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087385527 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064353319 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093077027 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068044538 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070705002 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086169173 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069281468 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.08710355 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072804422 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073253175 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088211493 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070787515 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09494488 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070962099 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083750022 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066380441 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073523356 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084369043 seconds)
  done (took 47.493505159 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10963046 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083426367 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064499523 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081792642 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076685794 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083032095 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064463216 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06545076 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08525969 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069099481 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084696721 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065911022 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093888053 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089691713 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096291617 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087519674 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064588148 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066097945 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084347191 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067613421 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093490345 seconds)
  done (took 2.483373065 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088595437 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103288339 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079330394 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101686082 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092461321 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079271791 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096996876 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080226625 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100395905 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093620374 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08291599 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097479461 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075725516 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094124492 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075889658 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096142069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100446541 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074469012 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098414928 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079359836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095452565 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079965832 seconds)
  done (took 2.772211985 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068343994 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06779865 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088699088 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063673295 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068552837 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083607784 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074081371 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086208461 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073510206 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068181889 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087626145 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069224602 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.089504254 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.076871489 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069340162 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086793842 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134451839 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072381346 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086946749 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070338449 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064969586 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090916654 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065272184 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08436118 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069104456 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073632899 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089744966 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068084951 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08857491 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068736587 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069173753 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086174004 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070564786 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069285794 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087712035 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.0688291 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087840117 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070138718 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065184315 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087271485 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070588069 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.084092248 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070881848 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070876837 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086774379 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068309137 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070392362 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088974229 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065023667 seconds)
  done (took 4.599133326 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086505801 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.142353023 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090775644 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126009331 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084705948 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096357409 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072441358 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124319312 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086576197 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067963524 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.106380607 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083174762 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088734441 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073208202 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09158281 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068280605 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089073803 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068803539 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092489336 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068110298 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092446359 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076190181 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101635596 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082082389 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089948061 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06732313 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086496195 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073161302 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09989624 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090931293 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07332193 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091451861 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083893912 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.088996325 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068101152 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088073587 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085554684 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086411535 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071058607 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084263421 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070831487 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091127572 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07546072 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104853012 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069197533 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093386434 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070061134 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085054763 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083901257 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089486163 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077372257 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10301722 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071482019 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087317998 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072886261 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102257822 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067558051 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085626847 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071472736 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099967266 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065503855 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090718484 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101077281 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070437267 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093697562 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083129525 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091555775 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07261615 seconds)
  done (took 6.778660077 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077877598 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093847906 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083486165 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102473613 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093049571 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074873489 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092761741 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074868138 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092394691 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078984192 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093347977 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11552826 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070254422 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096961966 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074679483 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092974308 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074797275 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094075764 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092761292 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075710186 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093343005 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082550106 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093487815 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101150245 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105347514 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089103648 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075216597 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09292726 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101590905 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075486048 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104692161 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074238876 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09426731 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101322306 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087483403 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093288871 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066791745 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093465584 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075247997 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093165388 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069669857 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101879448 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093230984 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070416684 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0932788 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074761555 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102023156 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.105043656 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07767979 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098104521 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074707356 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102284356 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093508481 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075245199 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101204419 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.126942055 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083733818 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101407288 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0927515 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0840284 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101670443 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108637267 seconds)
  done (took 6.396752421 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089207408 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096754965 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099131861 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064307916 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067075243 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092833815 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066210512 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085371811 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077194455 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096618705 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080664048 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090741278 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074811277 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09855184 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090101597 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07592628 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091325871 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072656783 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095608206 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071893742 seconds)
  done (took 2.500084292 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077927208 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105287775 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070195418 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094013042 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071751094 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074738537 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090480288 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07171396 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089191453 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071526744 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099145327 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081079967 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088888191 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077164739 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098856893 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077254941 seconds)
  done (took 2.165713497 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081031414 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099132681 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085317199 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089363274 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068285972 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085416709 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069985546 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065310204 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086456438 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084658266 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08926407 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071556904 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.089028895 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066857739 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065986622 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091791123 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066086783 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086211554 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069545468 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104599919 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.082191483 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087425367 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071885469 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090277744 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070970154 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09438538 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069063383 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066995508 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086771504 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069794926 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089528215 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077688514 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086074986 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068817409 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086359806 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067883164 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069610406 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088900607 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072719361 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088463575 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067521449 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087391153 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068915177 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070714885 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084668642 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070217903 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085056267 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07505151 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067631099 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088596796 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068168455 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090306291 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069688139 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097706601 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071598153 seconds)
  done (took 5.19614679 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081811288 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072432085 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084753653 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067556071 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091024678 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072865531 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072075233 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092245877 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071480478 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087238775 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072320315 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09093863 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072358787 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072949808 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091739976 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073382459 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086113225 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072209777 seconds)
  done (took 2.257389105 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073780884 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069644366 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09587373 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070105223 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089005981 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072886673 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066027362 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088529401 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06909319 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089134665 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070506116 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071823726 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088696753 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072661418 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089955314 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070405919 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07231625 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089205267 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069710783 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08582753 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072781948 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067743536 seconds)
  done (took 2.539935125 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074245102 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096617875 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.168262464 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110708351 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084239084 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101698735 seconds)
  done (took 1.471870305 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093059325 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100939146 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069182584 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10818749 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077657471 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089177342 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07099531 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090041209 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081483551 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104259947 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070060311 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099726612 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098608403 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081165749 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095060105 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076199869 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089338944 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06976234 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088195136 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10760565 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071495071 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097612052 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070312004 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089754072 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071037386 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096769272 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097735224 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084730804 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088693473 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079481932 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094800765 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070328483 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099053994 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103382152 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072509655 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097967822 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070721944 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107816049 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094888299 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079685645 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090527027 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077108614 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098298841 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075901084 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098808454 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089789794 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076185285 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088801707 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071700606 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115162737 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095296045 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078882936 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095209661 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079812389 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099161698 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115530627 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103341069 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079296616 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095582457 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103463379 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080120369 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096092166 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079475689 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103729205 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096017132 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079630083 seconds)
  done (took 6.696251063 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0863299 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107877577 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071599265 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104288711 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098402718 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071436344 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089781955 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071557129 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089993314 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07079604 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131767389 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070497043 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099091922 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098178713 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071731529 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089662158 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071213062 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098484878 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070367712 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115583172 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089761217 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079245488 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098631013 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097217509 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085003326 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09640762 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070259237 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089925085 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070215546 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089902148 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094886475 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07142328 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097991463 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070490878 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098117291 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071389277 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090047375 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076688467 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090596517 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076217226 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099316624 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108029471 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07041406 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090550353 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102856042 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071815081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089804277 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071431457 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089390382 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070879803 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103715688 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085199006 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103911454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098296456 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071395939 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090862296 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070936906 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089838664 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071150748 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095612118 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098517222 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071262348 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115319068 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07081676 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089931137 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0982058 seconds)
  done (took 6.612852237 seconds)
done (took 130.609135526 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209819645 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188670358 seconds)
  done (took 1.230251052 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071451061 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.11773204 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081397302 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131215919 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089535712 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102689404 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12016761 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082603651 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068628763 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089345546 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069477523 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09002656 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133389913 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068816669 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089243229 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0711471 seconds)
  done (took 2.315927446 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105883208 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.20117771 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112935249 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06755031 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101629203 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080668405 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087893959 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080413561 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094090592 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069004012 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099282182 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078771751 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067509795 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097865187 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093906815 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080750711 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066746017 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100647655 seconds)
  done (took 2.530368017 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10933626 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.1461478 seconds)
  done (took 1.09592566 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.202992026 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124176509 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207535655 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.435160236 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.213279012 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.293802729 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175313064 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177171818 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154608783 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.171606653 seconds)
  done (took 2.993182787 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101082437 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174562836 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321723904 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141663507 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090062569 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118908824 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141852237 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.111760385 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084704542 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10426342 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103532521 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080299944 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119982848 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078017763 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097030325 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079522639 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123249658 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076002698 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098620379 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077657506 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119700611 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068036781 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097569472 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076832234 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.100258108 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080827174 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087788251 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068716785 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096652818 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077873164 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10167944 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116404072 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080965149 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13444436 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104320008 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135640786 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079372606 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095547505 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077488278 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09444373 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079127321 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099702767 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105581704 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080117207 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067610751 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09950166 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068784522 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087151978 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081970249 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099177099 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082458287 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100734064 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.13365506 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09922003 seconds)
  done (took 6.343526158 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.765111937 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141293368 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075718296 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.833131728 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120046322 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088180301 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.758646628 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099227974 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239101002 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766348492 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117460142 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.081849491 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.213373702 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219115805 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.93517076 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293763706 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.648921542 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110847111 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114312885 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.140555336 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169895513 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165430478 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.156264095 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.414060214 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100916573 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076254485 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.145240336 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104791442 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14980004 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.088727007 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.101206011 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.163627413 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.2370536 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185172585 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.079061805 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097004803 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075381509 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.156774793 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25298403 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194564127 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160198847 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070867389 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072206247 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.16795262 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137441892 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073063975 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.148988827 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.161466686 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.178229667 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.078654451 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.080868098 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.17192579 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144689315 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.147482533 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103751966 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.280353287 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290609576 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09298183 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123595892 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.08753891 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246917813 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084554302 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207906365 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142476407 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192797189 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072749768 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755081472 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.152642728 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072404722 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098990032 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123979714 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077685755 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142869708 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148091818 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.373657717 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147849689 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096920423 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072647954 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22374454 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086496435 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093012934 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145787784 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077761602 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126412367 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14970177 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.171381287 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152346494 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.218855964 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.147922676 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164883315 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077129881 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128224912 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097790796 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.195314534 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.178523734 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166095084 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.193773613 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145520002 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.146990144 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151383985 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101708742 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.155208038 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124564266 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104980858 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14387682 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.177083366 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.12713584 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106454728 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076005024 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.164876109 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129998718 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089159249 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.144036077 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.174815698 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.436672239 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.152334243 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068564364 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110833076 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1431653 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144707209 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100520902 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215605605 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126072091 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172728479 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126746256 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07133928 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124393459 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.146413243 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102896296 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127060645 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144678695 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079261452 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.218846042 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197298269 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102209589 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201622674 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165963999 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078180059 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178109202 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127612975 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.154483308 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082981112 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.146839416 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102052238 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778221457 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.152176356 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128586227 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078504605 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.172620937 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071625037 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10920568 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10636038 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071349233 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757013871 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089389022 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10423489 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084857652 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099131577 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125468936 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142353405 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075186574 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165087454 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.188654077 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10102639 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122796087 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084582558 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.164947286 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078872142 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10722917 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085841085 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107831535 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127701542 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075446982 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109171112 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151540987 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.149288225 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.205845078 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.55145116 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096332503 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087420342 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210808722 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093852279 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.249261176 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140201112 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205743064 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145440484 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104157329 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287405856 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.148311469 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174259819 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.091514779 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.160053528 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094726611 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144917722 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.151452618 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095979264 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080701116 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.149754727 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.177095023 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.153503095 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.950107412 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073238584 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208364609 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070917718 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.180526777 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07985275 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104791544 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.257320149 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097712921 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.157331899 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.151792921 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100104723 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08815552 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.702791967 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089611341 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.16896692 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.081286971 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207314786 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.151432522 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.145390472 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146243629 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104475579 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.150121052 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.194178471 seconds)
  done (took 41.750347968 seconds)
done (took 59.096045763 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285456355 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196746466 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258097156 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150682037 seconds)
  done (took 1.833445711 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.149741681 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108457593 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122092233 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087275663 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107913529 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08963589 seconds)
  done (took 1.531575667 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.434139336 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280317904 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242552093 seconds)
  done (took 1.823041821 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.307013921 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237193032 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.46294822 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.306663198 seconds)
  done (took 2.28902135 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.197684482 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118445711 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.090890474 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086385718 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164961023 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.267512323 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.132415516 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.196424017 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08096935 seconds)
  done (took 2.246471999 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.205359834 seconds)
done (took 10.79677898 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.328357307 seconds)
    (2/309) benchmarking ("sort", BigInt, false)...
    done (took 0.276553557 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.16972871 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.25204375 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.153048316 seconds)
    (6/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085597567 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116344668 seconds)
    (8/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.242112972 seconds)
    (9/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080792513 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.127946156 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.180052924 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.184904083 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.110395204 seconds)
    (14/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.318143435 seconds)
    (15/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.273517116 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105161779 seconds)
    (17/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.228907887 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102123373 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.102634568 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.279426511 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.229406279 seconds)
    (22/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.239609517 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.140900306 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.149588593 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.217675927 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.167677279 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097766674 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.24253094 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.135012424 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.096742497 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.259218831 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.105682917 seconds)
    (33/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.292384702 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.135019 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177404168 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.099320074 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.106630624 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068281682 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.102341529 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115661941 seconds)
    (41/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.16474031 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205866109 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.199193157 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07605807 seconds)
    (45/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.105404755 seconds)
    (46/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.092846441 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068632128 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.144998813 seconds)
    (49/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.146613665 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171244642 seconds)
    (51/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070964975 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.076394997 seconds)
    (53/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.141692194 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.262850359 seconds)
    (55/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080082604 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068919176 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099170064 seconds)
    (58/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095784196 seconds)
    (59/309) benchmarking ("sort", Float64, false)...
    done (took 0.152814811 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075673006 seconds)
    (61/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09106636 seconds)
    (62/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074011896 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192720056 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.244637931 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103255455 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.145050811 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070424581 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.187239549 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.271632474 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090471678 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.223060842 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.117491019 seconds)
    (73/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.121854658 seconds)
    (74/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.100512246 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.255122649 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.102519099 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068232142 seconds)
    (78/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.256264666 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.098358491 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073329887 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053648071 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09832753 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068073348 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.244913305 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.262907428 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055783698 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05531264 seconds)
    (88/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.12523954 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068294978 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.221194752 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132397295 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205926659 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.06964006 seconds)
    (94/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079359885 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.115564373 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.124734137 seconds)
    (97/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.10947388 seconds)
    (98/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076580304 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078625361 seconds)
    (100/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.221285438 seconds)
    (101/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.105308997 seconds)
    (102/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.143524744 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.077017702 seconds)
    (104/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.065932857 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.120634708 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057779294 seconds)
    (107/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.180260932 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054519092 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079109336 seconds)
    (110/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.223587011 seconds)
    (111/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.184231633 seconds)
    (112/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053685396 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.260138716 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.171807552 seconds)
    (115/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079136614 seconds)
    (116/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.092138188 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07630029 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105886054 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09325777 seconds)
    (120/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.254784657 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.125031498 seconds)
    (122/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054410672 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.255490293 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.172437175 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068944476 seconds)
    (126/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054340292 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.167906176 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.169657895 seconds)
    (129/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177482503 seconds)
    (130/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07808164 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065068868 seconds)
    (132/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056604528 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.100071766 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.382075585 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077323551 seconds)
    (136/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07023201 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.116111844 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.096336571 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161622079 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07687305 seconds)
    (141/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.101338976 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074313297 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097776208 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055051368 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073324252 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101818593 seconds)
    (147/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.143238397 seconds)
    (148/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.100195318 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053482191 seconds)
    (150/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.116585635 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076041328 seconds)
    (152/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054750171 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.140373251 seconds)
    (154/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076299629 seconds)
    (155/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055597529 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06792133 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097258841 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054164566 seconds)
    (159/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078107031 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111306696 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076371207 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104215079 seconds)
    (163/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078560748 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069931591 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098743979 seconds)
    (166/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054982532 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097528767 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.223507673 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.077142746 seconds)
    (170/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094796079 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054047383 seconds)
    (172/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098485333 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118235552 seconds)
    (174/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.132140505 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097353016 seconds)
    (176/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.076054407 seconds)
    (177/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.217106365 seconds)
    (178/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.076050967 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053652781 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159126289 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068118591 seconds)
    (182/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.125119239 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074532105 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090755646 seconds)
    (185/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079050105 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094591158 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.090798088 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074440763 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075234958 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077291892 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150131596 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090237006 seconds)
    (193/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069114554 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077330476 seconds)
    (195/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.125173952 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069877532 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.124920939 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107239351 seconds)
    (199/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076033211 seconds)
    (200/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054729593 seconds)
    (201/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062754154 seconds)
    (202/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.085411386 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075492134 seconds)
    (204/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076686505 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.093803236 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07898286 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069391408 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100941384 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054496935 seconds)
    (210/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094795136 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079619785 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066492702 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121041625 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.0534151 seconds)
    (215/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.090614385 seconds)
    (216/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072583465 seconds)
    (217/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053840298 seconds)
    (218/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105027767 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053707387 seconds)
    (220/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053529491 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089850529 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133394802 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.076301047 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077159315 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076154665 seconds)
    (226/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091595431 seconds)
    (227/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075986341 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.100667077 seconds)
    (229/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.0636505 seconds)
    (230/309) benchmarking ("sort", Float32, false)...
    done (took 0.152840424 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068790466 seconds)
    (232/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054835135 seconds)
    (233/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195984645 seconds)
    (234/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071823548 seconds)
    (235/309) benchmarking ("sort", Int8, false)...
    done (took 0.167977916 seconds)
    (236/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09782823 seconds)
    (237/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081768037 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073902878 seconds)
    (239/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092558548 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054121436 seconds)
    (241/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074834543 seconds)
    (242/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077597803 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067028257 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111499606 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069490814 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068474567 seconds)
    (247/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129100011 seconds)
    (248/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063578372 seconds)
    (249/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069838803 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.167110757 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.112303804 seconds)
    (252/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054382772 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054776887 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090642235 seconds)
    (255/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068298409 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116730108 seconds)
    (257/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06588297 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054666496 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093337333 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068262899 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054268611 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094863462 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093590062 seconds)
    (264/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076829295 seconds)
    (265/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.076430072 seconds)
    (266/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076798792 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.105089775 seconds)
    (268/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065797182 seconds)
    (269/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069732241 seconds)
    (270/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.087700288 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0758947 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076810477 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.1115518 seconds)
    (274/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072013125 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099116828 seconds)
    (276/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055453541 seconds)
    (277/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071656108 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095642512 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068158638 seconds)
    (280/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063681135 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.111113778 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092627641 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.077907548 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06884516 seconds)
    (285/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074114574 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.100154711 seconds)
    (287/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074660274 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066556813 seconds)
    (289/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143442379 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066764799 seconds)
    (291/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10729474 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076030536 seconds)
    (293/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076878048 seconds)
    (294/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063698505 seconds)
    (295/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069006989 seconds)
    (296/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054136302 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092284052 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073636944 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090283573 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073868272 seconds)
    (301/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.246573632 seconds)
    (302/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053481972 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06809661 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097866304 seconds)
    (305/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053705802 seconds)
    (306/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063665934 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093800995 seconds)
    (308/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055626438 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055707892 seconds)
  done (took 35.912585138 seconds)
done (took 36.784514121 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083242696 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118090417 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078195906 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118318281 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08431296 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103777032 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075917615 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104517077 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083535921 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107940073 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081946485 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057377627 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102408823 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078430496 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100961184 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095190795 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104607094 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076163666 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.098615769 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067849964 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076992648 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.09061284 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070553228 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056776022 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103399541 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075761628 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098469826 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078476797 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067822303 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.091030295 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071620013 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.09785109 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068711925 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.0816643 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097241826 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077165713 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101135478 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079362398 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070547906 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.09140084 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076662399 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090283189 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075691279 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076444572 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097294209 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073781121 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098470446 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082885781 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118710731 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070473522 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076376027 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103085624 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080371344 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.098966441 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072389282 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099396278 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074129885 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095905244 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.100268851 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070927951 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098782468 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077141088 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074086561 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.099037226 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076617799 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101557085 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079304719 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096294879 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079036588 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074025118 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090913374 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077036485 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093915668 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068458375 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078752004 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101999608 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067902437 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074692056 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.097656958 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07456838 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.090508822 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07112801 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070071188 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096866361 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070897213 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057521746 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094930626 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075079457 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067987244 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.099074059 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074786485 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097319006 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070484855 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08004199 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.090564373 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074265815 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091033264 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068909593 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0704034 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094800891 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068174485 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070198472 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.100691676 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069838797 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096218266 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082509646 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068760468 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.097298273 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067448549 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067286898 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107581484 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078007196 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.090909214 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071402267 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089824163 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075530058 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067580436 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090445557 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06881688 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068732639 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096494909 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068577053 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070433651 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09779983 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081762016 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093737172 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072108414 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070040429 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.091371232 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074411547 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068837811 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091670987 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070311278 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088138971 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070590004 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068266008 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098805647 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070739776 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076432701 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.093310328 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077671269 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095523003 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075040895 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074153841 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.09030813 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061327099 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070866766 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093353099 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071025826 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090938939 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070559558 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068778276 seconds)
done (took 13.562509301 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069122084 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175919819 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131242798 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100815891 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114437488 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068380971 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103411439 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133127639 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070965183 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132732369 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091601372 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111711124 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143091632 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067725569 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068480123 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096223685 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069806648 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115831875 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10592644 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112971823 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146923156 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067831114 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125674111 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093999425 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115977745 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130589949 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069566751 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07263677 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094450644 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120770902 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089697534 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072332402 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.092272146 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104698515 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120592453 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.112378563 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068196301 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111860598 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068358422 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068731433 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120290257 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128478864 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084800483 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.108594738 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072290368 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.094077513 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070553291 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113632869 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095424108 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.1065273 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.115579066 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139658898 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072668139 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109128727 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068154135 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114967878 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086627589 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09390756 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069436081 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071566757 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.091414222 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072138508 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11701605 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096663381 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095732957 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086184605 seconds)
  done (took 7.443498873 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087609048 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119388351 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087245333 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110830956 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06873488 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069014052 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092487808 seconds)
  done (took 1.566832208 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070101947 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092305507 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116200278 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093097212 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112350061 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090963189 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102595 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06968437 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.11018569 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070847454 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114171819 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108581676 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094585245 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076417308 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118491186 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069729678 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09412722 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0929004 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072515229 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117295061 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072480348 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114178808 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071677234 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069425434 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108454214 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069623104 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142570442 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074297795 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095016095 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07279076 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067600091 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144873773 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107958219 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080864436 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092940127 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085274651 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108680796 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067549277 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086629892 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098565778 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084658193 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093453445 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070758285 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067682037 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097775146 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081788559 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095527398 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071322501 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073037762 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113864541 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070188132 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107825377 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070046627 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073866818 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095181477 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076149392 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102352941 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070913326 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091740528 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096358722 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087857226 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110961725 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084136897 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110199268 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072089628 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108147779 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084788125 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072468602 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095449162 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07320023 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111705016 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067628916 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071666989 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105339184 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071192618 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117569087 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093625059 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095274816 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080813279 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069353175 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094337373 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069822655 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118368271 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073718078 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069722601 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098034747 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073369135 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090690601 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069152591 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073237268 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091352608 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071706066 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073134185 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.093113378 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073108322 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.11150945 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070594429 seconds)
  done (took 9.551219448 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071297471 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071101641 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095775228 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070330795 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07092747 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093825045 seconds)
  done (took 1.415404778 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101769696 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09661027 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084378959 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099536461 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111447776 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108933907 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086061313 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110210704 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088744611 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106882398 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085519622 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109570062 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091310901 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100205775 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085725489 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099652847 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086342005 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10427908 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08271333 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10057415 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09149649 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.100200786 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077169643 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111226077 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073763152 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099265356 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081572127 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106747443 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08370874 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110109032 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077128826 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073641718 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098082513 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109460301 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086136187 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098473617 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075815444 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07480062 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104798956 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07377622 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109304101 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076945935 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10608254 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074936213 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110031547 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07581498 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098884236 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079976579 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108529174 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074276358 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097611615 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076169437 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09664939 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074077605 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075152047 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109785842 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074454542 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108818881 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07635304 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099302178 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073251758 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097228144 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085589555 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097714631 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084084382 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098452483 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075601905 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100119953 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076841401 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099800182 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074738686 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073699633 seconds)
  done (took 7.531079485 seconds)
done (took 28.432401253 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.657684031 seconds)
  done (took 1.593799973 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.801566532 seconds)
  done (took 1.738467521 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.856730592 seconds)
  done (took 16.799699678 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.659320878 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.815002421 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.823483068 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159118314 seconds)
  done (took 3.393794414 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.890897445 seconds)
  done (took 1.850047557 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.244833575 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256435825 seconds)
  done (took 1.445898425 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.730937023 seconds)
  done (took 1.678636098 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.313176288 seconds)
  done (took 2.256187062 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.343344056 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18830048 seconds)
  done (took 1.484732488 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.531285746 seconds)
  done (took 1.483619183 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.574348708 seconds)
  done (took 7.533473509 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235907451 seconds)
  done (took 1.199410978 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.273374819 seconds)
  done (took 1.227152439 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.317374603 seconds)
  done (took 4.273919763 seconds)
done (took 48.904804004 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081467515 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084133681 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108234426 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081172145 seconds)
  done (took 1.30641849 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081329348 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075677846 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104467583 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075002967 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105525096 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075902933 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101396683 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081180074 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099682128 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07707366 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076060843 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099261886 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078691015 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101595218 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.0738265 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078396392 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103829522 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075606256 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102488599 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076664116 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097876014 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07882787 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078471604 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098654611 seconds)
  done (took 3.061323505 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080469844 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076223479 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101694437 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074975925 seconds)
  done (took 1.297692584 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080599564 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119963522 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093133458 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104988564 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09657278 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114927587 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072664168 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072476592 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098879318 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079874983 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094867939 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10280738 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116721896 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079002796 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106197343 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069256989 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071192991 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114895866 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080145376 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105056049 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073880795 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104132532 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071163366 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118155443 seconds)
  done (took 3.207350828 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080299457 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12971669 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081798704 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116311218 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095555798 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067980961 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104064283 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094229351 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154611726 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068336826 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.097624231 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068701736 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09895781 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068302194 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079627625 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.137187473 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140763105 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072036004 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125328627 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069487958 seconds)
  done (took 2.913844585 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077773713 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072133213 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09325321 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07164589 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079259824 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099975416 seconds)
  done (took 1.464284614 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070548768 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069224446 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093681708 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069820767 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074250599 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094011555 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068892096 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069516452 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094286643 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069515016 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093380347 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069098017 seconds)
  done (took 1.905514875 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.469956156 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071662674 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.096102299 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06885528 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074113764 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093955563 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083569924 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070751227 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119334961 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069087173 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094843926 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07168401 seconds)
  done (took 2.35462515 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270405344 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080942468 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.337542059 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172666428 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143843552 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16155829 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108217918 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146521139 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204157629 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142917999 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235479187 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204862563 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13921857 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172013867 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117486559 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137096829 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191358954 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22814304 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133606772 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233363667 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190404553 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160687366 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212004932 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106180107 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138579362 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149489451 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099182409 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083498522 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239072346 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19083861 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181957442 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141671831 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123948404 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241377138 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228219648 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176928302 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165968121 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114002666 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.160536752 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172372213 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270424583 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117402759 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203158233 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138146803 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109996176 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180284097 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151794759 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151283253 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141334587 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117714471 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180631454 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248602015 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172525819 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116184546 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14139393 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144684873 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147913681 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131618712 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256697825 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20136518 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189524464 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074820394 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126874964 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194075962 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165184408 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147317017 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184196326 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098185294 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201572072 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195525821 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149723103 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20753568 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166992952 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118371811 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15333897 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178146308 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161079712 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239599007 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158244904 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101951172 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157668045 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132918512 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085297043 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174281194 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078907175 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243641711 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128732199 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.144830483 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14238992 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117082307 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141305083 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228453848 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211107761 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109352275 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09422023 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133831035 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155312306 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181513658 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117868055 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140281515 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152975837 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082987862 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197883811 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079567409 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157797266 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.107267167 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158247759 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16876775 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07847344 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182800152 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107613154 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132499395 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169288404 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228432369 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11892255 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086507007 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234309847 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159391496 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136147947 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181740132 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22378111 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131100318 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130134135 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186889178 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25273657 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118473603 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205725659 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13469455 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113558171 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092596879 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185262202 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145723715 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152711453 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08748105 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158670746 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236084202 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101957793 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100841361 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170960422 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110881899 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109573554 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145027648 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105105745 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123813417 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131229792 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137137309 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174654849 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159082725 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138371989 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15758085 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130065826 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228168115 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118500957 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109715029 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134257768 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097909269 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171637401 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22541859 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084224097 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234528232 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16131355 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134711002 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152908301 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087133274 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201956755 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083898661 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073067615 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204964477 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143074975 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142013529 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.192073152 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13428036 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160591993 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.156864702 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192495598 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168171062 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16715401 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137796136 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090611044 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144302532 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185343578 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077107524 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12440318 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086104825 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134886637 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124708594 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111183554 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180762796 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1618411 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128940973 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145100774 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128059428 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1884936 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080047605 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191093871 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153928558 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098986884 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220101268 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222571745 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172078742 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13180167 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184660116 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.100131155 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078292959 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119470409 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163004494 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112542421 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088980796 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149792416 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212400419 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164645784 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17231853 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142584964 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155149517 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221994349 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075119394 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146928872 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187202263 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158938554 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16074451 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095558198 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127912501 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208408256 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110427387 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285170579 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152022458 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159760596 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190984427 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.134678604 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11386503 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110019103 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201089578 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136126873 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18960687 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131254683 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118379023 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14374971 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.085372577 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134950261 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162380443 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151281366 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197592443 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150458947 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167767598 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106939249 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150189873 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156999588 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155885982 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06766501 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153151836 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229863951 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126344295 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152344279 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220654967 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084402771 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156537826 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248670179 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20961719 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089217081 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141217001 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155601639 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164787596 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151840945 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202802945 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142888212 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170637602 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14303229 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090314529 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118225789 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130925741 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113207322 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.126726353 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144876525 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149793563 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125512312 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165300033 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145141527 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143979778 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151157163 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128047178 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095899035 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128775293 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244472293 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155763466 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244059442 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.13166471 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187816113 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237929813 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10364739 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084345826 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108976924 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179218258 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088979916 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196086757 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100635151 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136159716 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161160649 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207119613 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100443648 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097498858 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115995571 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193794838 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142941226 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104176794 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137113274 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231025663 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134802141 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082728969 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159381087 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136151333 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134600308 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247955863 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065184836 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127927436 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079551918 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110661897 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165820311 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221941195 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086382638 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158642663 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153315032 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156329647 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164947656 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131853117 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127389616 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118639486 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211869737 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162470911 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121926172 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145891251 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167486732 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224027473 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138681993 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099593879 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237177677 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220283698 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232007288 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092419076 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148929721 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149199955 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145575201 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20597972 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087023511 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234729325 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113064018 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173648877 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135030283 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124304172 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164521084 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126261444 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093618082 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214854192 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153569286 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085256902 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10931307 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163762694 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155274365 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135158181 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077917926 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202068367 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075454572 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200767581 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209760264 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112397307 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13824621 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101457041 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111738602 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139727147 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136466065 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117090506 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124656926 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242943952 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121920217 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188941963 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20487812 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148158751 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173282467 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131708441 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668763098 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108088446 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194936792 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152654749 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24834189 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130261843 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153438234 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143754559 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156545985 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206201509 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138256371 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183565571 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194297019 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15575903 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0836465 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135612966 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145230809 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.121287074 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140189999 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147852927 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149468664 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131478043 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154606666 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164508395 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111031212 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101253788 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224762175 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153577754 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180047551 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204936496 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090003177 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152913591 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206277767 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084222412 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18296507 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196841646 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140918512 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13241563 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110875642 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.112637575 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238722894 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102379285 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202228751 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183856394 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117139638 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147245079 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.180736983 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169691377 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138933618 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1602864 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127400303 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14657689 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149670077 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115047412 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081852407 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138530539 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145900206 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130559763 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134594006 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.12515251 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218062394 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075622637 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127810696 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133580771 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182597312 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248498522 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119676667 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089237059 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151758458 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146419427 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149515674 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159698642 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111520413 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11192716 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087178726 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.139418679 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116957596 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148056787 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135241437 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144308683 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238028329 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087659645 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255769839 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127453123 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14125794 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073344049 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109422469 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101788981 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127701663 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136877686 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129352544 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212216635 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128586099 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121103465 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123259923 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077454125 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08645253 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192829329 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144730843 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156279907 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129117541 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066945527 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140939485 seconds)
  done (took 73.960323515 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136908203 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.107297397 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122935057 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.178086428 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151512731 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243895478 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.185814246 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228919896 seconds)
  done (took 2.395401678 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072790024 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121789659 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105649573 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.120005967 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093230785 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071817346 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.307716832 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112889717 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068968668 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118483783 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122871017 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095426838 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.483508955 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068833921 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096149978 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089026278 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069868826 seconds)
  done (took 3.250359897 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.447454517 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.64314308 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452456178 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.100533927 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.929232432 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113015554 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.400499003 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.164909527 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094194519 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.428789894 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.73403537 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.151622751 seconds)
  done (took 17.698791624 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07806495 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071480856 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113818791 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086636594 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101937615 seconds)
  done (took 1.492495282 seconds)
done (took 117.260595531 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08285224 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381946502 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056520827 seconds)
  done (took 1.512557559 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087638333 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088020479 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115837844 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086567735 seconds)
  done (took 1.42731178 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077739411 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079427607 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11573958 seconds)
  done (took 1.319659395 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.297542101 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172011256 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092557281 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086557406 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080211018 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108515067 seconds)
  done (took 1.324579425 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075490313 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07795024 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10302051 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079810203 seconds)
  done (took 1.378180984 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079668657 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054708857 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057429049 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084798006 seconds)
  done (took 1.32441531 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093439216 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109915332 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084549845 seconds)
  done (took 1.332019845 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112233182 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116448598 seconds)
  done (took 1.27802747 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084164193 seconds)
  done (took 1.128501848 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096153015 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146379987 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.163800682 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142191654 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.173663168 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142747218 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.117560193 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091858458 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.108341677 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120815562 seconds)
  done (took 2.352748483 seconds)
done (took 16.060555298 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081682851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.395094709 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364440149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122338585 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672059435 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386400183 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.99647109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123417052 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11181416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097640048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087963974 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677528455 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.029000834 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321465089 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.042609482 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321710644 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678580321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071072721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096699461 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071704793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986436897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097360964 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071285983 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098080892 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651135352 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374549354 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098155665 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322449341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096998608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073759401 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357352783 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097787951 seconds)
  done (took 16.115645333 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073244923 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148318988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079113863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087588117 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100340538 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072471735 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10155154 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072522775 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152614574 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071255244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115742797 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071199216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101688763 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071934264 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090350482 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097871022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071914363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098233393 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07118127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071447942 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116296175 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07033618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097745122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072322654 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070721024 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110031226 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070882845 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097084154 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072172154 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073296202 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100369453 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072158404 seconds)
  done (took 3.895181873 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118748965 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157793398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077507895 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133038177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144740599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073696084 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174862299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097162872 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156386206 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071156686 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115169129 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071031103 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131972284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070731381 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118388179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071981862 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098664787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072451404 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070920666 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098422744 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089744689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09758149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072090583 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071192145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097998235 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084312135 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098591233 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074268935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071589612 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100284229 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074220092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098393394 seconds)
  done (took 4.21176364 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075100404 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077653006 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113179479 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086947874 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09907359 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074999476 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075143879 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099564326 seconds)
  done (took 1.754223336 seconds)
done (took 27.021642087 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081768585 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072981216 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102938884 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083959333 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10220611 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083140561 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070336877 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104503032 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07779506 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102461576 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07879248 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069976761 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.10102891 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070032874 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076909012 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097908521 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08251253 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101563954 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082576634 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109686302 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07299068 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078178851 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103769028 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08285703 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110492678 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083205869 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109857777 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076769248 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072401999 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100353698 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079745264 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116060959 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073314518 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.11153332 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07167782 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07067888 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097291671 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071333787 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082760354 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105167763 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073782607 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105372933 seconds)
  done (took 4.749524252 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093278228 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095897738 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117490217 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065652404 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100425517 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065347208 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120132794 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06376142 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064367658 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120084859 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060347321 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061167436 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090882608 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057246019 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060343313 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059549039 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090522161 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05954469 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060139156 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088117425 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063239873 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056944144 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089981822 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062983044 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058204448 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064574921 seconds)
  done (took 3.046839488 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077574736 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084279428 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118406828 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131214287 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136287212 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078211386 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108508019 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088792946 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115073195 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070195661 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100643046 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099191114 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089152736 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104697505 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069690033 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113490172 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085379472 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071675842 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104690007 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090773213 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114666567 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.07981569 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118806011 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08239827 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069129159 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099671106 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074234528 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111571215 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076082416 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080088904 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.102243632 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073619911 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099553578 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081936279 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103154105 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072624069 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090314031 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108104687 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078554459 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098277685 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074520083 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071256921 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.119092957 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115153109 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097727052 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077500595 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105837536 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08122515 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070945195 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116419247 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079953721 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098367497 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074446985 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069435209 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098620347 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086018318 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099330015 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074023187 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081211731 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101850532 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084166657 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074766907 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114724358 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070271434 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106095732 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070048099 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098777252 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070640036 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093108359 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099883211 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112048283 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100262194 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072672861 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107641835 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078750159 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07630623 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099083738 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086818698 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107955526 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075609995 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080318361 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102182711 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073773644 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116620203 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07401654 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072561106 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099188129 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077905214 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07469232 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.099704038 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084423204 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09909038 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07501565 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116825649 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070556418 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072139784 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104431849 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076263129 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097668241 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084273544 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.0753965 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098967182 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079881424 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098412684 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074093103 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080744137 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.103499452 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069780116 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103243138 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077965321 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071453771 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100505889 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074171818 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099525657 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.090174325 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076294636 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103073918 seconds)
  done (took 11.642754808 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.198406706 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191634934 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073673479 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184244587 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079005159 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.111864336 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.185759628 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100100425 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099709436 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071577192 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071982528 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.138279237 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.131977596 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113547832 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110776591 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070595325 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117864849 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112475379 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.187544581 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.181711183 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.119542723 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078764107 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101220306 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072300395 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072518781 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.109109161 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087858542 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105963626 seconds)
  done (took 4.352918837 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085102517 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128122659 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077002424 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08917597 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.123099936 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071063697 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103478888 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072299499 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111156879 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083704069 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098594374 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077326731 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077971329 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106649606 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07106876 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108815554 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080297369 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07207525 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101970689 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075042461 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106197705 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083463252 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.10331019 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070385493 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077302325 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098737504 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068163102 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.117957611 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070274774 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118677951 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069087895 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104866928 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080707286 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071077419 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.099693051 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073396825 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072690127 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101083755 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072238034 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097771055 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069843641 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059954158 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098332033 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083376073 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105130942 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063277268 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076739769 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.105447804 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076533875 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068929935 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102171266 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073758967 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102400645 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078820199 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075901484 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105471394 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074550209 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.069242267 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105757716 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073344444 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06728011 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.097727275 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075377999 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.098201037 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079208382 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075073784 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070763824 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072954101 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.103480755 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077348915 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072674699 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102195047 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068927045 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072985004 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.104324605 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074719578 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.102705346 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070267843 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070141011 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099876599 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05815278 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070180879 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085247413 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074112364 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069161846 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.097362083 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073698189 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107549406 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084310256 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.100222187 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077611056 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071502119 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.097913874 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074079348 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065662778 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102541279 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085828847 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116573747 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070680985 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.0978536 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085210358 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103656373 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070166042 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059550962 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106700349 seconds)
  done (took 10.107775024 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095730286 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123351631 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073829392 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085156688 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126822849 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096214474 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107474276 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077562555 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072554951 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117076509 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07130927 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107917358 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07572815 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.0794805 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124544621 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078618112 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101893318 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080328712 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.079078934 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136350886 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084071142 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11364303 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081213653 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100711105 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07600743 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082521186 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127024127 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081407496 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108671971 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085458465 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109749774 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098212908 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085656968 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103800915 seconds)
  done (took 4.326653599 seconds)
done (took 39.27664904 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.135598072 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.347713547 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.13356478 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.023638001 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.162715171 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.147931936 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.144226889 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.133025705 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.367495396 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.133929389 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.363661094 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.730990962 seconds)
done (took 58.903450835 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.227632231 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.26903247 seconds)
    (2/2) benchmarking "String"...
    done (took 1.402709779 seconds)
  done (took 3.750102319 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.491076579 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.096792349 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.417004839 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.132821467 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.132252156 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.57929782 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.705761373 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.963685958 seconds)
  done (took 27.10672023 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.14296819 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.497681813 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.477541054 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.487274657 seconds)
  done (took 17.684516064 seconds)
done (took 58.337240187 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.139625231 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.206925106 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.146088156 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.118952033 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.258934232 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.160913081 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.425422875 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.144869414 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.134045074 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.139550681 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.155215468 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.14300863 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.138586519 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.456246614 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.13659877 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.135604219 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.181981125 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.620329375 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.512540246 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.150970058 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.16255637 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.16531895 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.13550368 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.134549239 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.148680076 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.138819339 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.141695403 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.158165869 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.35160811 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.135817036 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.140268293 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.583458261 seconds)
  done (took 187.981771244 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.13486297 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.139791841 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.247712113 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.183146163 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.59028148 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.338854083 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.259754096 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.6656133 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.15284399 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.161440998 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.394301704 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.140585775 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.454153622 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.126381192 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.145595963 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.233440735 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.439419983 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.452381663 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.152149857 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.40745733 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.139398779 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.398778204 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.294273334 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.389824943 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.137126088 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.220169971 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.161727476 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.152105715 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.326840559 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.366276251 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.144757179 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.14035033 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.688168394 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.994224646 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.162456255 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.146808409 seconds)
  done (took 147.761631784 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.410041196 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.137129568 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.134881843 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.135964199 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.164324601 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.134110489 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.651224431 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.636892159 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.629061127 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.524246233 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.135038384 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194012765 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.357799841 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.136820555 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224634233 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.145957764 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.134248997 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.137095678 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.15004797 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.132642486 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.161181525 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.13785967 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.651627073 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.14975175 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.137262735 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.134055554 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.163314728 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.5287668 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.193816574 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.132493977 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.162625826 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.4474983 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.176321175 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.131503123 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.42592972 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.906651834 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.132575225 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243857269 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.136777358 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.164387945 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.138468945 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.404759191 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.13263287 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.138080969 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.139531115 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.71124664 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.136869402 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.650642618 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.135913611 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.007156841 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.135510449 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.137454636 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.567622188 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.57614617 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.136219403 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.137715972 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.140833578 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.137095083 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.135294656 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.16500312 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.542958154 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.236080506 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.137620563 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.138835207 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.16548742 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.137200838 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.170031148 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.131840278 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.692630178 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.191366052 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.237748787 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.638279405 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.136249926 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226487551 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248224673 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.132391904 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.135702356 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.133612526 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.13379939 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.240047613 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.133791054 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.509867 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.138770949 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.13679142 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193731737 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.22844149 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.132389254 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.136850463 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.41779797 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.137516449 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.13497207 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.795728901 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224179861 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.134458254 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.134544829 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.134376822 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.509901234 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.625029177 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.282737449 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.135345173 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.544741795 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.136002623 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.522581225 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.615090519 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.701196694 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.137243397 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241649467 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.138171937 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.138883912 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.136370262 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.166536997 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.138570827 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.196190176 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.134584452 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.532689061 seconds)
  done (took 336.725024938 seconds)
done (took 674.958568123 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.759041977 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.741740162 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.848082316 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.740802187 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.718992273 seconds)
  done (took 9.884653337 seconds)
done (took 10.96153144 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.311018681 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.30949702 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.19288412 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.310701393 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.164140783 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.327995593 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.290542378 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.157440127 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.232497342 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.20161355 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.227625285 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.179417176 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.163027625 seconds)
  done (took 17.145262472 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.446283943 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.438067873 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.196618528 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.445066918 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.173775824 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.445018893 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.332971147 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.3341033 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.345559552 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.148666982 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.152622564 seconds)
  done (took 15.537397983 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.440504742 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.468874359 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.203055886 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.438131701 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.17718697 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.43641233 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.3320649 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.337109154 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325243217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.148744314 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.151823614 seconds)
  done (took 15.535725153 seconds)
done (took 49.295959881 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.146697365 seconds)
  done (took 2.222716684 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.179362019 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.337955002 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.160564643 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.15155817 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.148004655 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.151605431 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.153411124 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.148066532 seconds)
  done (took 10.508723772 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.147194035 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.144184628 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.14468697 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.145521386 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.149087162 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.144385134 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.14598234 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.144816106 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.145818589 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.148715837 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.147068012 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.14872019 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.147054798 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.146052156 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.145537321 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.149855102 seconds)
  done (took 19.422903308 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.146986896 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.143015463 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.144308567 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.14538876 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.146007306 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.147051196 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.147424505 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.140904231 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.142672485 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.146864676 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.144562182 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.144641674 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.146574875 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.145284838 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.146005731 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.144695039 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.141939813 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.143391099 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.145813595 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.141065584 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.142377334 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.142550051 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.139807032 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.145288 seconds)
  done (took 28.545969946 seconds)
done (took 61.776468369 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.071575414 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.706201662 seconds)
  done (took 8.856206983 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.148710612 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.148661412 seconds)
  done (took 3.377951286 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.148553808 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.146080522 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.14907786 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.147138937 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.147282426 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.147331119 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.148010245 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.147583185 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.147272829 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.147381401 seconds)
  done (took 12.554572878 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.148623858 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.149879145 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.145917296 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.147073225 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.14857326 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.14676233 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.149083737 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.148294281 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.146921218 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.14430064 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.148387769 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.145560602 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.147557634 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.144920283 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.148641039 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.145337248 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.146406555 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.145783777 seconds)
  done (took 21.727799566 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.149108448 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.149067569 seconds)
  done (took 3.376933852 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.147015049 seconds)
    (2/7) benchmarking "second"...
    done (took 1.1434661 seconds)
    (3/7) benchmarking "month"...
    done (took 1.148075116 seconds)
    (4/7) benchmarking "year"...
    done (took 1.146511774 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.146914279 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.147084887 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.146071354 seconds)
  done (took 9.105650332 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.150695205 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.328197263 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.410623921 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.7412772 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.151561324 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.153669701 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.054029637 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.152435452 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.154932939 seconds)
  done (took 13.377479176 seconds)
done (took 73.454961051 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.128897794 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.143084958 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.016865028 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.151660369 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.159649555 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.48697715 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.171022553 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.26331363 seconds)
done (took 36.601963069 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.145186059 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.845669872 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.847938935 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.146355304 seconds)
  done (took 10.921964614 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.127294856 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.003542666 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.130549551 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.092871323 seconds)
  done (took 17.43647273 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.724077899 seconds)
    (2/2) benchmarking "read"...
    done (took 1.468510105 seconds)
  done (took 4.273583823 seconds)
done (took 39.857552752 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.150709354 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.150847378 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.150075943 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.151063756 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.150384663 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.152704025 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.148563763 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.144317103 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.148139205 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.148980429 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.146871371 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.148937721 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150201105 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14448954 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145705606 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152424193 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.148694688 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.145159345 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.145593938 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.14462435 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.147073263 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.146852949 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.147483426 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.14703731 seconds)
  done (took 28.638413725 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.150967291 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.145444223 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.147487283 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.147979656 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.146523737 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.146750813 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.147971726 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.147530714 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.147715886 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.146642546 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.147208573 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.143624864 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.150255362 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.149459153 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150170802 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.147486159 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.149900213 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.146854416 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.147342762 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.147341724 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.151312272 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148139763 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.149177735 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.14965257 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.148058163 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.148520111 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.151426098 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.149101338 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.150124702 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.148371288 seconds)
  done (took 35.53296564 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.155159396 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.158187076 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.152712304 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.151869121 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.15024582 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.151646755 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.152448876 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.151166264 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.15104302 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.150693099 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.150881042 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.151634624 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.151844875 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.150889007 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.151191919 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.152550659 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.151617878 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.151626812 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.151754057 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.151168688 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.153181006 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.150916145 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.151415675 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.150961469 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.151907466 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.15083443 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.150560303 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.151215604 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.152389189 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.15416489 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.15256666 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.153726874 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.152723492 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.152590147 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.152373123 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.151461583 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.157976591 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.160588985 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.151159024 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.151994256 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.153212932 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.153825901 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.154717736 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.149208918 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.151476531 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.154264721 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.153087956 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.152440322 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.152249818 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.152447436 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.15197619 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.153326396 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.152606837 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.153553695 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.15519464 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.152764232 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.153558863 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.152410689 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.150667843 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.15206687 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.152352014 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.152848591 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.153253705 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.152850276 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.154493219 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.153635076 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.153610986 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.151900077 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.15248104 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.155143085 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.154193985 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.152790095 seconds)
  done (took 84.073067403 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.154285636 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.145885408 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.147301708 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.148943563 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.150900335 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.154446352 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.147745357 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154983329 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.146846071 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.150538857 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.148610818 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.147351166 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148481262 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.151464097 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.150697931 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.145344348 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.152281122 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.147274907 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.148276603 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.151490971 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.151220266 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.146398084 seconds)
  done (took 26.375579111 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.152061997 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.150149906 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.149493661 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.149267321 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.148620194 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.150466262 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.151765033 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.151233694 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151711918 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14833833 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.147944385 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150914943 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.147885751 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148754504 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.1480425 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.147190382 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.151939553 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.150114748 seconds)
  done (took 21.785818145 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.149207492 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.149858274 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.151386756 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.149882646 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.150962301 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.151901792 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.150861937 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.153116644 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.150565233 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.1507853 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.15039901 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.153097453 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.15090256 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.15092666 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150506224 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.151779514 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.151846042 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148763311 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.149109156 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.14929051 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.149953058 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.15181564 seconds)
  done (took 26.403865614 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.151092158 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.149173034 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.150686432 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.14967076 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.150065814 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.153270804 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.151389428 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.151218776 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.152467619 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.154390431 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151099364 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.153031497 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.149938557 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.148349123 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.149046401 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.148455188 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.152854953 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.151943882 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.155031288 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.150058928 seconds)
  done (took 24.111136136 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.156284178 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.152743439 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.154828132 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.15377762 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.153292825 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.153753588 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.152138755 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.153264899 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.151369326 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.153638017 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.154119966 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.157693298 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.157861919 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.157987952 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.158247088 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.157605693 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.15788939 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.161176447 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.155862029 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.155935048 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.156111641 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.155333715 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.157816521 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.157274935 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.156827372 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.155797071 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.159628535 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.154551686 seconds)
  done (took 33.450828784 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154346169 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.154218755 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.155658918 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.154267259 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.154412572 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.153713708 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.153532981 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.152132812 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.15431264 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.152760433 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.155187416 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.155572414 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.154916461 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.15458795 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.156681829 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.156006633 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154016331 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.15319461 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151453312 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153787578 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.157169684 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155181374 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.153803283 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.154965854 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150793151 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.154606402 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.152875018 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.152008757 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154439391 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.153113211 seconds)
  done (took 35.711869664 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.173831094 seconds)
    (2/2) benchmarking "in"...
    done (took 1.173994826 seconds)
  done (took 3.434396992 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.151840689 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153253178 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.154261254 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.151711199 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.151925394 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.154341372 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.155093263 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.151745691 seconds)
  done (took 10.310378787 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.153172468 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.155696521 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.153986271 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.154960084 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.154788267 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.153528184 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.163761603 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.167219727 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.153545881 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.155944876 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.159334847 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.162260961 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.156317195 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.153547494 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.154783408 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.15533089 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.155037507 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.155553873 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.155591593 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.157549499 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.155794135 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.157817425 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.156396753 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.15511494 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.156385374 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.165260704 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.159698505 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.156115665 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.15612531 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.159928513 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.155443893 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.154355616 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.15562366 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.15638326 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.156812221 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.155369424 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.164942189 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.168708856 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.162805023 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.15738241 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.157666973 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.154065339 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.157367622 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.158302934 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.157544801 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.15686765 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.157324642 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.153941573 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.155080857 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.158731951 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.161737025 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.154777504 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.154763748 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.159357948 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.157723536 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.164664501 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.168452071 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.159117174 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.166746134 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.167902318 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.168256556 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.164497092 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.158110883 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.157169391 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.167670661 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.178673474 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.163862629 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.168056998 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.156495129 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.157654321 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.162455887 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.169797094 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.16492329 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.159202186 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.157780937 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.156936216 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.15784967 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.157906641 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.164068374 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.172119323 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.158452776 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.158818339 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.167881483 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.180332619 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.155992338 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.157187723 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.159578524 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.160277096 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.158789158 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.168807066 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.171595433 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.157639005 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.157522769 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.157928899 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.158453303 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.158837485 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.157615032 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.160728666 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.157258437 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.160045094 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.160016182 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.161269049 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.165873573 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.159669835 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.159036257 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.165156014 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.160821084 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.157353728 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.166563962 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.162061489 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.15826926 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.160005951 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.16505547 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.156332381 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.160868022 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.168859319 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.160072476 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.160794486 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.161078211 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.161376412 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.169742054 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.186782118 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.160390185 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.1619155 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.164312459 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.171988947 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.159546366 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.163923772 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.160154994 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.158627222 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.158457568 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.162049314 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.161153478 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.161368316 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.160284309 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162521797 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.156894186 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.161912014 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.161473674 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.161901557 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.161727488 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.159407583 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.163354492 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.163755006 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.159727401 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.162200971 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.167209923 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.161479744 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.16286265 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.161656596 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.158711233 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.161964545 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.161167959 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.160237424 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.161997602 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.161813687 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.159886319 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.162687593 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.160593301 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.162038081 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.161981335 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.161717648 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.163044194 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.162718857 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.165980852 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.161642234 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.161260232 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.161195337 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.161623606 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.160434435 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.161784962 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.160618241 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.163570809 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.171503688 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.16257461 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.161975809 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.166435097 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.162381706 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.161977143 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.162370866 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.164716297 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.170929821 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.163263721 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.169287021 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.163147201 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.162321928 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.163514642 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.166986711 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.161923304 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.162350037 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.164298904 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.171241139 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.174944434 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.172536798 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.161914646 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.166286838 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.168510643 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.167037813 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.166090361 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.163224129 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.16464922 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.163218143 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.163050129 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.16408264 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.167553669 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.162547282 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.162181179 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.163044092 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.162743002 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.162913225 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.164025061 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.163538728 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.164484623 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.160826992 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.164593494 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.164202104 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.161087746 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.160777759 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.161143533 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.161289986 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.162301233 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.162149721 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.169604053 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.160648112 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.164559386 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.164860348 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.163904067 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.161377946 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.164343 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.164738429 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.162130646 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.168986931 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.176119708 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.162950729 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.16983572 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.176611148 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.162034034 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.166502474 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.164931537 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.161736251 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.166287519 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.171985438 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.16442648 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.162074879 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.16405242 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.164170634 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.164804037 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.170330236 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.161849158 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.164787226 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.164983261 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.166234801 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.162060465 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.167953271 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.165944999 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.166513898 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.166939486 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.16566401 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.16685511 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.165874108 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.164988075 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.164296993 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.166098302 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.167244041 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.173105214 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.169396702 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.164335819 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.166423029 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.166123111 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.170148983 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.16598725 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.166184484 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.16409488 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.175585414 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.17438514 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.172552414 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.166204267 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.167517229 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.172483364 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.167430588 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.167042884 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.166057205 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.166147862 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.165772493 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.165857896 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.163942341 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.165869704 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.165837247 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.166284105 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.168047393 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.171573654 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.168659998 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.165398517 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.165245612 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.167197199 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.166873687 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.166611104 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.167946778 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.169215864 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.169716359 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.166173814 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.167577118 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.172910079 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.180897341 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.169141642 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.167934343 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.166257759 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.166556178 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.167558807 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.167722539 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.168978724 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.175029488 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.168917935 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.177739508 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.169469123 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.175883744 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.167421515 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.171250293 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.176487701 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.165257059 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.16616959 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.166607904 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.170382997 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.175941545 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.182290614 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.167303524 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.171834238 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.169310264 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.167952424 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.169812968 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.170202503 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.168508635 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.168684401 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176711081 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.181677667 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.172025734 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.170516785 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.164930506 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.168044065 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.168341497 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.166986819 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.171832715 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.169124471 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.169222071 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.168161522 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.167933168 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.168424977 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.168153412 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.169292424 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.167176391 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.171818371 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.176656819 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.18420771 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.173708921 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.170239271 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.176562599 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.169974766 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.177038198 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.185297945 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.170047885 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.169547457 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.169611559 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.170628289 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.168331766 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.169929102 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.169219043 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.170660636 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.175137243 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.169741362 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.174048042 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.171273468 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.172701098 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.169555017 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.179329604 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.193921663 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.17103879 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.175059105 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.168328976 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.171497302 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.174755415 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.171116598 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.169572508 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.171930525 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.182088699 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.179355868 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.171113862 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.170872116 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.172078607 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.171227493 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.169429903 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.17232919 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.172469862 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.172396356 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.172805856 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.170139913 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.17603793 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.173285203 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.171072277 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.173041808 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.173774681 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.181197736 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.172074394 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.173381455 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.171924909 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.172800338 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.173404205 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.173815091 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.172621727 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.174433676 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.17368073 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.174474424 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.177863154 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.179724365 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.175120551 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.173221743 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.173863271 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.173732254 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.173505798 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.172868188 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.172128523 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.173186995 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.173974026 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.173330372 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.174416463 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.170553854 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.172538788 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.174167773 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.174120514 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.174593505 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.181742278 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.17275799 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.170856991 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.173298985 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.175412845 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.172414546 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.172942465 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.181469826 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.175179442 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.184470847 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.183429957 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.179187028 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.174497251 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.176671282 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.182934382 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.171347094 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.174328739 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.174321058 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.174830591 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.174990738 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.177452613 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.174464499 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.180251783 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.174358357 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.174657927 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.182731723 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.188905419 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175999908 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.176901049 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.178515988 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.174123946 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.173129266 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.176188351 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.174649038 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181940718 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.190689834 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.174568143 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.178004814 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.173589972 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.178389597 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.178973511 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.174945275 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.179042984 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.173452553 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.176586519 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.1757705 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.175899312 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.175565629 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.175482605 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.174719941 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.177334184 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.184150994 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.173112347 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.178557873 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.17556473 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.177085876 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.175920836 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.17812408 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.176665035 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.175869046 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.176632197 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.17765635 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.177156483 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.178937118 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.175682993 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.176716464 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.177457546 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.177662708 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.179668101 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.186146289 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.187519127 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.175144475 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.177160929 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.177660485 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.179603498 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.17809899 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.177673348 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.17738756 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.178295774 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.177103509 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.176661367 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.17729343 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.17993049 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.194565061 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.190164518 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.177786094 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.177416836 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181257236 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.178968739 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.17496404 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.180315914 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.180238123 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.180361271 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.187646142 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.17753047 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.186198586 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.19076086 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.179031769 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.184393166 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.179862716 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.186583442 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.181101776 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179661913 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.177906689 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.182850677 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.195931447 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.179719816 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.187401145 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.209084065 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.194164285 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.181758461 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.179961956 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.178327096 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.177382772 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.181109764 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.178794725 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.178726362 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.179726687 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.181047915 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.180564781 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.184273541 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.182203986 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.181177838 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.180025395 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.181178265 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.180893557 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.177840542 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.181655836 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.178246606 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.180149862 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.181210895 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.180190036 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.181119145 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.191962905 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.190994188 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.180465588 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.181476649 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.179520102 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.182459752 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.182606947 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.190654475 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.189231521 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.180887978 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.181781838 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.180684348 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179840353 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.179033314 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.181042081 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.179990147 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180324796 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.178646128 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.192795019 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.191161402 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.18510292 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.182177002 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180699611 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.17949806 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181457635 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.180524201 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.181893804 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.181760249 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.181289936 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.184301391 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.180585874 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.181753634 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.182813774 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.19060568 seconds)
  done (took 698.278648813 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.180969259 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.178919754 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.179327596 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.179416372 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.179210857 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.181298001 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179162505 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.180254226 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.179823183 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.179345753 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.182071481 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.181417081 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.180439798 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.180270377 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.181473226 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.179360001 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.179980457 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.180585596 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.180239365 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.180318074 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.18052255 seconds)
  done (took 25.898242798 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.183791494 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.179380961 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.1810838 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.183619914 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179716718 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.183810752 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.182217082 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.183692437 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.183890449 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.180955007 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.18187231 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182972087 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.180374968 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.18118969 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182070586 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184416568 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.184240764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.181640227 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.183430915 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.179410188 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.184012731 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.181329797 seconds)
  done (took 27.123345872 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.182941866 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.185414952 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.184494111 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.182069306 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.184147031 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.181223204 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.183546379 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.18512293 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.182959089 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.185016291 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.182149173 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.18464825 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.190409933 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.19115238 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.184927266 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.183947102 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.328084215 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.18482462 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.184524358 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.184133424 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.182245306 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.190109153 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.183376387 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.184279638 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.182791017 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.184387237 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.185415932 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.186557888 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.185700852 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.185780786 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.190357578 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.185073894 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.183692376 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.184902421 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.184759389 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.186499784 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.189885506 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.18765359 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.183181996 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.185921178 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.193455251 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.207592628 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.185910042 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.192666999 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.186756475 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.187484301 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.188459033 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.193795737 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.182970629 seconds)
  done (took 59.384413097 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.185620418 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.187866405 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.184290894 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.187561045 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.186918117 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.185639802 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.187775832 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.186118088 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.184320994 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.183978177 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.186818381 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.183677842 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.18408343 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.187457517 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.186265835 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.183629021 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.183829668 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.184942091 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.184752261 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.185344007 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.185270167 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.18794522 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.187282877 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.185587376 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.185840371 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.184148931 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.18558154 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.188734172 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.186914497 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.185095621 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.189506597 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.188560351 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.187211652 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.186400714 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.185549561 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.189129353 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.188250386 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.184760269 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.188716916 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.185508763 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.188333365 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.189016674 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.188844373 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.187711436 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.187583276 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.186855335 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.185935768 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.186142726 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.185967752 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.18783911 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.188804291 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.184970111 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.187903114 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.186165872 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.18749462 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.189574777 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.186132351 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.186371769 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.188053082 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.185678534 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.185717041 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.189974764 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.186264395 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.18773393 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.188924872 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.186645939 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.187092625 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.189676845 seconds)
  done (took 81.8135325 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.188682411 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.19016733 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190009692 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.189997531 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.190326204 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.190285378 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.187367394 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.188822525 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.18950838 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.190633562 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.189708567 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.1914749 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.189183051 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.190699951 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.190071716 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.191347953 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.190245583 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.18920861 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.190689386 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.189325785 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.189836434 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.190361426 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.19167816 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.190863315 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.189872817 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.190509984 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.192912423 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.191307343 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193067846 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.191570853 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.193208602 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.190432311 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.1916017 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.192048708 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.190162263 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.191819082 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.191420803 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.193514692 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.192601123 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.191502482 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.190545953 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.189297455 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.192189879 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.190700214 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.190865268 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.190608757 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.190052876 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.193619717 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.192721386 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.191652999 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.191164852 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.190082411 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192264099 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.193743083 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.19154129 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.193188967 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.190998606 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.194856401 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.19261411 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.192289141 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.193428104 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.192703956 seconds)
  done (took 74.972280746 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193008162 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.193499326 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.190586018 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.191163538 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.191636326 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.190226421 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.191643809 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.193037056 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.191311901 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.193122337 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193051155 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.191365901 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191144933 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194384578 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.190198217 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189841174 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.191089783 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.192153827 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.192433295 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.191189404 seconds)
  done (took 24.96043869 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.189442891 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.19429298 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.19084244 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.191542048 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.193827564 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.191610854 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.194131835 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.1942739 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19259942 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194485619 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.195163184 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.19445843 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190007359 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.192080829 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.192980561 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.19177068 seconds)
  done (took 20.205876955 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.191737453 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.194151303 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.195218272 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.196341802 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.192893935 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.192194287 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.194587553 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.191927077 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.191920569 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.194055012 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.195119103 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.194437281 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.19427524 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.194605427 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.193544331 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.19554081 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.191762997 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.1933004 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.195721361 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.195277151 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.195015423 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.194033772 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.194630403 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.195135842 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.192487213 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.192587275 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.193904 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.192532521 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.192707511 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.195431888 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.193413873 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.193886012 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.194845777 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.19388683 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.195146217 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.193416331 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.195581661 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.196346942 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.196512052 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.197237325 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.19837775 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.19481984 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.196795749 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.19777081 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.19491916 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.195988141 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.194165708 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.194959882 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.195790476 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.195381849 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.197311047 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.197900557 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.197860673 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.198205719 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.198193402 seconds)
  done (took 66.842165546 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197658684 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.197394667 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.193646639 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.199345987 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.199962032 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.195624763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.198391413 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.19717163 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193955101 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.197825093 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.194268613 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.198248029 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.194353523 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.197925664 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.194578328 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.199182997 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.197105195 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.195599785 seconds)
  done (took 22.670130218 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.195840448 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.194810127 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.19724185 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.196766837 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.194347755 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.199056557 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194343162 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.19979868 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197713496 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.19534255 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196794438 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.19846903 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197773532 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.198504762 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.196894777 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196795312 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.197175658 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199520904 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.19724391 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196563614 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.200658113 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198719643 seconds)
  done (took 27.469238134 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.19740016 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.197487637 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.213656074 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.237462687 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.2283916 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.196937106 seconds)
  done (took 8.400507678 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198439733 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200102736 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.198949316 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200019782 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200681973 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19809715 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199127472 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.1986183 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200118238 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197504187 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198038325 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200173867 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200979435 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196968357 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201170864 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199307411 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199076899 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197643851 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198211842 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199638991 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197589508 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199345934 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196990323 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19637512 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197847987 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197380056 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199793495 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197497167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197289417 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200317267 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200176702 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198090346 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200302678 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198442507 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202093234 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200198407 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197516354 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200442495 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200902519 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198478714 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.201184017 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201255162 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200398265 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200140199 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203689915 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198638687 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198676039 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198330056 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199522367 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201468627 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203343854 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19830568 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200766258 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201913497 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201225502 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202769342 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198069106 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198513773 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200890637 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.1997642 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200048882 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202141075 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200592105 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198778476 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202831214 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198282102 seconds)
  done (took 80.301965023 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199775558 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.200732621 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199132749 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20096842 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200242359 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19938387 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201175753 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200569023 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202082251 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201608467 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202674524 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200205154 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200747796 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201212858 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199821416 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202565871 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201513923 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202760036 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201619586 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204033359 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201292883 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20232436 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20173468 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201816188 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202623372 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204909952 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201011219 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201262581 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201665488 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202790815 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201119434 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202164639 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200971271 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.200521796 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201222372 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201912006 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201529751 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202866338 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202090489 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204478549 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202820218 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20231899 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200821233 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201564891 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202506613 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203011073 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20233389 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201872355 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202357586 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203265248 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204198018 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203059096 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204277658 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20396498 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200837506 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202693736 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204123839 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204266131 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2026515 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205431556 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204031305 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202062096 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206515445 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202178122 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204133362 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20345318 seconds)
  done (took 80.47755784 seconds)
done (took 1629.706498103 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.271422295 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.210779758 seconds)
  done (took 13.616823926 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.363540552 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.321740717 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.202522373 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.229660271 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.199964147 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.222724149 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.218842942 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.2013309 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.201392145 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.201667637 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.203018967 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.389083998 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.198694295 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.20166992 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.203201548 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.296925278 seconds)
  done (took 41.004525716 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.230514833 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.209310364 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.307679884 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.221296576 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.229214788 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.367733298 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.255744908 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.207228382 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.35488965 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.24091735 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.590925124 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.230132928 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.206120444 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.192871935 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.22467135 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.36813945 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.423887458 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.600198855 seconds)
  done (took 27.597931101 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.58885717 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.227173085 seconds)
  done (took 8.953250261 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.223393124 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.236218959 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.219670206 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.205846543 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.2001128 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.231856628 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.217212147 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.239791623 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.23447052 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.208406501 seconds)
  done (took 63.366917855 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.225079396 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.20946199 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.209960727 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.208106086 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.198763356 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.20192935 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.206437 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.205926114 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.313106588 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.31718282 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.218374141 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.216056927 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.209887042 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.209861962 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.207251437 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.243039257 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.347995332 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.208070703 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.206229572 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.215743573 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.209806842 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.290308901 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.243432694 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.208420613 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.317188648 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.325295167 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.211107363 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.214546581 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.334512 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.209029541 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.208047362 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.209319162 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.212146925 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.753987841 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.700643113 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.214758803 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.227012057 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.21788391 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.208755991 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.333025485 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.212308403 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.217430766 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.211605673 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.677979355 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.363931812 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.31261921 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.338002725 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.212535165 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.214159104 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.270970575 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.21061096 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.21122524 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.23705554 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.928953087 seconds)
  done (took 103.187144595 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.228118509 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.692767735 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.37328134 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.220028202 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.034000405 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.870120697 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.205518637 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.451028051 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.204657948 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.203548984 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.475035578 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.669097899 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.210059087 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.234105816 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.77318994 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.284519171 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.20564969 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.120610051 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.203234278 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.207409591 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61396367 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.219475391 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.223047095 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.3062541 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.237874424 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.629463635 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.506878655 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.573686873 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.200584902 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.201031457 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.635799177 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.20793582 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.249487889 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.206924839 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.461270793 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.519420737 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.495573917 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.206447262 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.25265267 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.204367455 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.233015473 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.628972663 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.511128573 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.204720437 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.201285852 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.629335252 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.204464401 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.215145881 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.20435681 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.409918317 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.122159586 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.204221722 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.515856137 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.207205788 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.459579269 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.21032863 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.222851111 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.657715246 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.211036416 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.262051823 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.205355417 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.209270325 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.212160766 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.21186093 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.206873045 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.515550284 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.574507061 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.211214301 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.517650654 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.629998725 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.203999563 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.70053635 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.065964915 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.217010376 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.252531779 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.206660316 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.893873256 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.654985109 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.234518377 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.203735431 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.502746963 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.204298456 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.465879906 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.215422574 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.20357195 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620549902 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.228707033 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.258821767 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.207124041 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.223241166 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.011554014 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.210970635 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.455736811 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.215011204 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.208193285 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.209556747 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.255220087 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.205862794 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.218071569 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.21337517 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.703816334 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.207561166 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.324345202 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.224752698 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.207051219 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.210723039 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.208030966 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.208384987 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.428984358 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.799109955 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.210078072 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.210553888 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.206375077 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.206198966 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316028721 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.212699434 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.475145766 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.208055602 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.20694377 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.210906306 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.876678436 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.239790403 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.205977832 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.206079625 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.025988287 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.414890348 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.222944519 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.208911393 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.212337831 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.220184904 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.410719533 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.206807252 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.224976894 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.21253485 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.879620031 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.22053085 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.248570432 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.781457234 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.2076196 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.060249287 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.232010623 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.208356781 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.501189223 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.464558329 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.523096683 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.210155498 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.221751055 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860569794 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.220704551 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.350409588 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.224452814 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.244352717 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.416670676 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.32330089 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.210959615 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.772671363 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.210735802 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.42553603 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.208075645 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.527665171 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.666389202 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.208557119 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.219891728 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.888522312 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853480508 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.850142138 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.214575611 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.468418378 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.200844357 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.666697654 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.211802917 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.213381009 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.807626889 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.213139348 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.210275255 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.211453983 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.213668628 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.26811671 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.385070418 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.08258956 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.211630214 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.635207746 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.213037928 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.209030568 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.212438832 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.209845645 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.563051402 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.215827808 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.216130368 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.247143808 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.211277155 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.221196143 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.644344631 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.101188207 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.211448348 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.365380391 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.812423349 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.211284246 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.215084429 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.932921288 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.504526279 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.723982916 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.223504991 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.484160204 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.211015896 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.251152551 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.977589208 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.280971001 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.688260975 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.212869647 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.213840644 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793730164 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.212127854 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.265202181 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.213983737 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.215725063 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.718472799 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.212893644 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.21472563 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.454692051 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21271581 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460711428 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.213844585 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.225442918 seconds)
  done (took 1081.875650392 seconds)
done (took 1340.736968956 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.214838654 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.21606996 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.203123456 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.218154634 seconds)
  done (took 26.001842088 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.226158324 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.220790298 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.222537328 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.219847602 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.224986794 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.222148111 seconds)
  done (took 8.487952644 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.257298687 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.216327114 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.214503182 seconds)
  done (took 18.839056124 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.416507924 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.371435632 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.550124072 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.16849227 seconds)
  done (took 9.657321044 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.224766903 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.222514928 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.222441281 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.227012781 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.227493486 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.231160535 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.224249222 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.226200177 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.22688654 seconds)
  done (took 12.184791517 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.740534961 seconds)
done (took 81.060683687 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.720843385 seconds)
    (2/309) benchmarking ("sort", BigInt, false)...
    done (took 6.223765188 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.196357955 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.199338224 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.334737557 seconds)
    (6/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.377245994 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.371950189 seconds)
    (8/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.727618838 seconds)
    (9/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.332103254 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.261256665 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.813162405 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.198528706 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.471753734 seconds)
    (14/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.980636702 seconds)
    (15/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.365928056 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.254042052 seconds)
    (17/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.790233872 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.599408479 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.250156251 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.800993122 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.297886179 seconds)
    (22/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.196827243 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.89141504 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.261847474 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.344002204 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.236991378 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.012543178 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.973789092 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.066149313 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.351948256 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.200558744 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.449377184 seconds)
    (33/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.413473176 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.202875091 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.380656154 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.608111545 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.236394606 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.059298953 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.218680487 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.368139934 seconds)
    (41/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.756374457 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.214693073 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.215017749 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.318268413 seconds)
    (45/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.302368351 seconds)
    (46/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.227711623 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.994396647 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.207782534 seconds)
    (49/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.393492509 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.215442503 seconds)
    (51/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.297335355 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.436707416 seconds)
    (53/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.556429168 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.200481399 seconds)
    (55/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.240921768 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.553781382 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.371508262 seconds)
    (58/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.302407046 seconds)
    (59/309) benchmarking ("sort", Float64, false)...
    done (took 5.455202856 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.481758807 seconds)
    (61/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.302925684 seconds)
    (62/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.235858764 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.217402262 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.731791434 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.217031654 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.318100311 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.277372695 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.86710812 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.626394342 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.607029659 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.330025732 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.935728493 seconds)
    (73/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.352301776 seconds)
    (74/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.225392383 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.348158346 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.984826826 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.61671869 seconds)
    (78/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.443886929 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.319472728 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.284787337 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.500931126 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.260854307 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.302127318 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.918350036 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.99121946 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.530925803 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.20192766 seconds)
    (88/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.558581924 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.900619299 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.741647389 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.907313389 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.217976262 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.340364731 seconds)
    (94/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.301351762 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.938080925 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.754716139 seconds)
    (97/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.551797384 seconds)
    (98/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.353325395 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.204324009 seconds)
    (100/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.216800734 seconds)
    (101/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.400644828 seconds)
    (102/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.436527275 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.656975247 seconds)
    (104/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.919057754 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.036662102 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.216921065 seconds)
    (107/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.376330688 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.728966129 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.210407339 seconds)
    (110/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.50148634 seconds)
    (111/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.653120026 seconds)
    (112/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.939670416 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.202308669 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.253489147 seconds)
    (115/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.219289286 seconds)
    (116/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.217278047 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.460433567 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.401787177 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.23499281 seconds)
    (120/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.41752998 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.24925664 seconds)
    (122/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.765752854 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.68316876 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.218015595 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.824285741 seconds)
    (126/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.519819591 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.314924596 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.219398874 seconds)
    (129/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.218200213 seconds)
    (130/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.041164922 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.439144888 seconds)
    (132/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.521472052 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.21899324 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 1.734395089 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.242819742 seconds)
    (136/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.345782988 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.040840647 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.511124157 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.221102699 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.244884734 seconds)
    (141/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.280785725 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.898510709 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.480817933 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.796108249 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.896619652 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.062226681 seconds)
    (147/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.032399993 seconds)
    (148/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.22361803 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.627063187 seconds)
    (150/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.237002065 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.326189019 seconds)
    (152/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.783434582 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.254815447 seconds)
    (154/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.489897781 seconds)
    (155/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.769619011 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.90445706 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.246336876 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.680441276 seconds)
    (159/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.306545943 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.552393704 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.233651119 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.282946553 seconds)
    (163/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.222493931 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.318249314 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.24597429 seconds)
    (166/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.534323769 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.258856771 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.209282822 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.775424496 seconds)
    (170/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.251217098 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.208242805 seconds)
    (172/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.24747291 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.295643829 seconds)
    (174/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.589355901 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.607379715 seconds)
    (176/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.663396074 seconds)
    (177/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.232179649 seconds)
    (178/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.536252637 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.594228811 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.221981519 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.937641858 seconds)
    (182/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.977422617 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.247410174 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.493473032 seconds)
    (185/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.207365079 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.273870556 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.22405817 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.982885619 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.250759019 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.796672789 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.220193558 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.558204296 seconds)
    (193/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.238159376 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.26592386 seconds)
    (195/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.767944321 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.33054771 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.790564958 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.295752249 seconds)
    (199/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.542684917 seconds)
    (200/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.441563833 seconds)
    (201/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.561144958 seconds)
    (202/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.397868396 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.251075573 seconds)
    (204/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.329948669 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.273926114 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.23511921 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.230568704 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.253836976 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.246064037 seconds)
    (210/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.310558504 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.311486516 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.281996196 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.27412339 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.901638452 seconds)
    (215/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.230507085 seconds)
    (216/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.28799182 seconds)
    (217/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.516233835 seconds)
    (218/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.784484346 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.617110386 seconds)
    (220/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.396066371 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.783724122 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.329330743 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.813390657 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.868284168 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.434563743 seconds)
    (226/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.22581683 seconds)
    (227/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.241374809 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.276006285 seconds)
    (229/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.376443371 seconds)
    (230/309) benchmarking ("sort", Float32, false)...
    done (took 5.177440587 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.014143857 seconds)
    (232/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.210259775 seconds)
    (233/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.224965204 seconds)
    (234/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.684687187 seconds)
    (235/309) benchmarking ("sort", Int8, false)...
    done (took 4.269073442 seconds)
    (236/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.484379833 seconds)
    (237/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.919649118 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.259603221 seconds)
    (239/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.337547232 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.448342866 seconds)
    (241/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.24990729 seconds)
    (242/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.661709302 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.264450955 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.216489658 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.271982068 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.228775952 seconds)
    (247/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.270831422 seconds)
    (248/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.385535368 seconds)
    (249/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.224089168 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.226239949 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.553117445 seconds)
    (252/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.255773292 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.222949091 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.679016762 seconds)
    (255/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.483122208 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.382832581 seconds)
    (257/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.262044865 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.470479599 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.222516106 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.636510903 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.766519073 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.430165323 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.532042769 seconds)
    (264/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.252404903 seconds)
    (265/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.44657362 seconds)
    (266/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.252374499 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.267865469 seconds)
    (268/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.222137726 seconds)
    (269/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.419788026 seconds)
    (270/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.917809225 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.253118293 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.238277234 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.498830803 seconds)
    (274/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.289116212 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.610557919 seconds)
    (276/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.386875267 seconds)
    (277/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.292304329 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.244564776 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.311152567 seconds)
    (280/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.557892212 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.400329726 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.225310003 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.216828653 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.096877352 seconds)
    (285/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.333844788 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.312756768 seconds)
    (287/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.348805298 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.310435132 seconds)
    (289/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.229959343 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.335582387 seconds)
    (291/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.507548334 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.981689891 seconds)
    (293/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.212455007 seconds)
    (294/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.557028207 seconds)
    (295/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.364623913 seconds)
    (296/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.408947999 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.226683732 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.286047741 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.755654814 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.25165393 seconds)
    (301/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.73594453 seconds)
    (302/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.415603509 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.489663402 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.263272492 seconds)
    (305/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.581090469 seconds)
    (306/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.601137677 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.919632737 seconds)
    (308/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.685048979 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.002302936 seconds)
  done (took 873.659727585 seconds)
done (took 874.810194196 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.264037889 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.258198977 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.239842816 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.262320109 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.353136097 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.272609401 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.250890837 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.244077219 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.290091632 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.290571867 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.240901096 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.271312112 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.243536383 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.243892823 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.241396611 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.256623221 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.196034456 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.240571803 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.258995245 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.250720908 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.259461889 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.241134785 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.294020623 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.271553267 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.246139916 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.246794846 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.247427475 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.263707175 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.354875358 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.246639192 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.24531227 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.253364035 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.195899413 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.238425862 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.237361805 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.262771156 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.255304564 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.253048446 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.245660416 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.275694332 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.550597986 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.241048305 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.24488552 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.24456071 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.244796252 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.249037767 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.244740144 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.251034505 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.25619637 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.261374634 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.541541297 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.257281803 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.247259856 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.244331504 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.255415945 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.244183967 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.246429116 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.261442548 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.264020821 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.25953434 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.186669026 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.247143056 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.246038616 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.263068453 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.253102938 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.578764285 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.236714513 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.25018075 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.558386892 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.248238424 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.581800368 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.251539067 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.246923525 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.259113176 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.278247093 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.19979673 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.237942016 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.243496102 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.253063649 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.244418903 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.254868087 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.258734391 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.250261861 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.245721454 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.25996598 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.277695099 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.255687008 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.248184454 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.254093195 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.266551847 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.253332371 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.256954921 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.248507316 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.241530567 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.256911331 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.248191288 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.248837332 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.249279391 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.250366354 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.255912486 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.556929098 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.260485182 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.242444184 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.242625911 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.245924508 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.261274409 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.558641813 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.24662117 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.268989709 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.29476055 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.248067342 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.189981765 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.247404717 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.265106508 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.256975864 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.250376318 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.242664554 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.191778242 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.549581824 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.259435851 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.24834013 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.24760505 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.263162484 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.248965246 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.244873622 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.206532282 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.246682838 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.26619739 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.370789352 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.259003459 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.279868224 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.248130395 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.251190559 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.278302574 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.263647402 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.281364315 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.250944049 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.263953659 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.265181316 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.242890072 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.261001972 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.259138954 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.248590844 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.255027749 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.24316193 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.279296915 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.262237069 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26283125 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.270169617 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.371155425 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.246143261 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.195147274 seconds)
done (took 210.293450923 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.305830592 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.236421456 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.327504715 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.245273509 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.342342044 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.338849552 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.241663853 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.243361248 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.242016076 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.617530592 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.24229388 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.242372888 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.242088702 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.243230881 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.325939859 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.244657587 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.240826568 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.581843481 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.243645276 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.314110332 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.243639375 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.242434974 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.245001585 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.624143683 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.242213373 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.240054992 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.31409997 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.244360915 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.590954844 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.245013545 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.242406987 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.591439288 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.336126596 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.26247265 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.255445438 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.251874918 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.34256174 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.259809392 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.328290027 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.325838491 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.328997602 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.284519714 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.244744097 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.242091263 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.247475152 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.247513201 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.244846483 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.271499952 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.241035743 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.245173246 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.582801417 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.256013827 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.242786745 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.244647237 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.246127538 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.275983122 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.24336053 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.248159269 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.337188853 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.248392264 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.306729632 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.63121661 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.619797158 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.245737363 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.242070024 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.24451734 seconds)
  done (took 142.475358722 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.313407972 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.320538706 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.353465833 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.248437349 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.297427093 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.357197663 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.246689555 seconds)
  done (took 10.312261449 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.252554304 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.246384195 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.297165978 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.296842729 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.247481657 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.394102577 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.248438435 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.257315471 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.24589888 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.298753788 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.25180602 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.249012348 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.255954012 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.243800846 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.295721717 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.257314525 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.361570553 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.247629053 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.249695682 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.40399802 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.244683904 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.256518332 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.300224668 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.258531428 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.251034984 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.254026573 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.812029962 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.249045054 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.245062713 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.249856012 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.246782354 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.286060879 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.249868838 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.242366497 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.247820749 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36369778 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.248713607 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.24600126 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.248523395 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.24344962 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.250299388 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.248818361 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.250246494 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.24742217 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.249044471 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.272177774 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.250678022 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.24822112 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.250141602 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.249140088 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.299990474 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.251289306 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.247823758 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.250020584 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.304292593 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.257113762 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.25118439 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.247831152 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.251918456 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.24646785 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.405975925 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.298209601 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.249392833 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.297219587 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.250787154 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.252339973 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.249495443 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.249890389 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.304879186 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.250507103 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.299463746 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.250534435 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.40428546 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.273747463 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.252123428 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.251873774 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.253715086 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.251139752 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.246526757 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.254426439 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.246985488 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.250987653 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.256044755 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.248012134 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.249028579 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353295712 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359721049 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.248619441 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.263556542 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.257613396 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.249358829 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.303310136 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.252003889 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.248431827 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.301794161 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.366868895 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.305264006 seconds)
  done (took 144.955108747 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.256648584 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.2587139 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.252119503 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.267322911 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.252325128 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.250250338 seconds)
  done (took 8.716411838 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.25413824 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.252155873 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.254531827 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.254087234 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.251205517 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.25589327 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.252899398 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.253560828 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.256996609 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.25258787 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.254403109 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.255290556 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.253700729 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.252787075 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.252633721 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.253335685 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.253408579 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.250847252 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.252334505 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251115984 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.356184605 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.253567114 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.253895568 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.25402699 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.259685085 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.252469987 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.260998164 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.254878206 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.255048423 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.259371936 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.255380858 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.254508226 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.25230642 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.258844109 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.259396507 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.254556743 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.257654506 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.256653454 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.250495887 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.255993029 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.25678513 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.254184883 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.255889144 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.259302092 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.255167282 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.25878336 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.263233119 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.262320321 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.254255918 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.258368573 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.258082247 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.253394531 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.257726487 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.258638542 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.256167025 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.25770075 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.260438229 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.255629773 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.255570273 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.253441379 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.257681105 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.255217005 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.255662501 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.259281976 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.253193001 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.258430343 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.253792164 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.259372652 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.255578751 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.256247021 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.258944401 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.252518984 seconds)
  done (took 92.686082595 seconds)
done (took 400.315878269 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.474599175 seconds)
  done (took 7.657789861 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.471237247 seconds)
  done (took 7.656839586 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.337085599 seconds)
  done (took 20.529046645 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.270962181 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.282753622 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.244976921 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.261937153 seconds)
  done (took 26.244529491 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.388374635 seconds)
  done (took 7.573273431 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.250707937 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.245229303 seconds)
  done (took 13.682374169 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.576438244 seconds)
  done (took 7.76019345 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.832811367 seconds)
  done (took 8.024638732 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.276295694 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.274435007 seconds)
  done (took 13.98601758 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.234637051 seconds)
  done (took 7.418325125 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.933018474 seconds)
  done (took 8.117351434 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.252870498 seconds)
  done (took 7.43817294 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.307052223 seconds)
  done (took 7.490757219 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.739790406 seconds)
  done (took 8.92417393 seconds)
done (took 153.686221036 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.248217698 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.249736117 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.245188459 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.246679235 seconds)
  done (took 26.174926492 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.290298734 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.290339857 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.292948766 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.301473912 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.293305617 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.291457117 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.281727976 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.28184867 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.300367452 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.299694292 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.292442029 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.295063678 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.291993894 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.283595159 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.295781343 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.292856777 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.302167521 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.293184833 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.283020866 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.29358545 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.260590367 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.303222442 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.293838572 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.258457052 seconds)
  done (took 32.14854696 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.455430454 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.328213811 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.411767208 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.310007696 seconds)
  done (took 6.690804549 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.310921428 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.312097297 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.323971371 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.363689752 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.386962179 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.322884153 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.284502595 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.281314123 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.265625356 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.313760202 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.387867308 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.327935713 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.395039473 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.25929562 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.445175003 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.259723998 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.259346252 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.311277615 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.363987134 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.401183868 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.259574865 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.310007249 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.315387544 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.329381716 seconds)
  done (took 32.975665311 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.257383379 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.265805654 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.264831638 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.257683787 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.259967052 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.259805354 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.26541356 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.259553938 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.278805631 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.260207029 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.258031428 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.257946054 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.25687602 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.257212987 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.256566705 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.272890228 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.27097649 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.258217892 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.263404565 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.264686067 seconds)
  done (took 26.43302166 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.250598131 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.107498676 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.60424302 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.508818411 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.25286881 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.248948123 seconds)
  done (took 27.160151905 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.318982797 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.447439848 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.258425386 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.582704711 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.652355447 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.258747102 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.258775877 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.481788124 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.752272142 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.745886776 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.309184226 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.316251211 seconds)
  done (took 18.572012798 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.261379595 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.253815808 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.262346095 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.268165343 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.309610579 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.258531209 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.26575405 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.253186597 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.30944 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.311563056 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.260264814 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.310625327 seconds)
  done (took 36.515782373 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342520226 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30182926 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.17655905 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.95301371 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.975312563 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.465503346 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.988108197 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.096346952 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.25841732 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529936054 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.079791766 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35496663 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.511792068 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264378829 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.256927534 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.21429378 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479426193 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716748552 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258887657 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985545841 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281151985 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.257157533 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.151649392 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.281413456 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.46845164 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.233805646 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.648835475 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.035536383 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519666325 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270512284 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267325892 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.25662403 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532027668 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894834815 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349611025 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269279227 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.92866894 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.802780123 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.25417459 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.078895715 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.847515146 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.256786227 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26683491 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256958681 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.19193704 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260962645 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674920468 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.261845221 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.970546092 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.257787871 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.267861483 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351491485 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.262896708 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.836791161 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250864791 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.260717143 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.257490241 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262853302 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831779379 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.464984572 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.261422227 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.195529399 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.607373543 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.993304966 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83356732 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.359643382 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.263997155 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.263404974 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194637962 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.055192391 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274443065 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40736855 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.283194071 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910130075 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913721505 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.084832459 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.200334513 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785636174 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265363854 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.195063757 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488421113 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037166347 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195001802 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.205996532 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.194227034 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932355908 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269821943 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.607368159 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.266043008 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.67082275 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.270324899 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275922222 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284927823 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.483906674 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.142258198 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258476148 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.826075305 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401440893 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277206305 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.671416445 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193518127 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.261955992 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51579948 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.471256137 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264196319 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.20163894 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.444179902 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264304773 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.277841103 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.270818768 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.270510621 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.791114814 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273792176 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.476909983 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279313072 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.036021132 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972685482 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265093641 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.360407358 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.106156348 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.499378367 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.996911099 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.187851929 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.329241458 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264807619 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.261793122 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.110258842 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11174659 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.16495729 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.261149763 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270737297 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.271660297 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.26165652 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210374653 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.25961966 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.107431196 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.039783127 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.484819793 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271527308 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538304094 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195461762 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411422944 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269834035 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.482770493 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.410778246 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.263714499 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520962352 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272579332 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271399221 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27469014 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282068517 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358620758 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285533334 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.263424299 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.531965868 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.268703937 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.268134874 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.113003624 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.044423844 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266991808 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.270483259 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.075973095 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793522373 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242126317 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.268926175 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152694327 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.276786003 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331401441 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.270088053 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.273356238 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.936049979 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.054968859 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.268121479 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.260277823 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499978654 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.274071708 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.09818691 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345782361 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.445711864 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.802173521 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.277085342 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.199948002 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.976338649 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.95762567 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261832043 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.45355668 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.264426448 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273701565 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274723768 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.744224287 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.802161306 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26835263 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.019281196 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.272853341 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27526157 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.270048084 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266182523 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.913271943 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.501722957 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269419069 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.276748185 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408716778 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.279200354 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.200414661 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.782546992 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.270126623 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.265752184 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.041330517 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299852523 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.022113534 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736373651 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524085187 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.921357993 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.277992654 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.1460547 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.291823647 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.266360697 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.880571879 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287394275 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.266700154 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287566259 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.277257855 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.070402461 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.704127339 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83322984 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941930178 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749223103 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150167203 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.277870819 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.171470076 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.68613124 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199918166 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923309358 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.439827731 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.683853684 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208181321 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448290214 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.41578694 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.974225245 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277403702 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.495452376 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150347381 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.884935973 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288660949 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.47987932 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300660557 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.279654814 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.196270511 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.565894258 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484884655 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.884347309 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350099734 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68556734 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.875946668 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.059000749 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.266184777 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.581319651 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426891378 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.897570451 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.658133713 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.275457209 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.140811395 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74254687 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.275082486 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.793222512 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85428459 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.268449011 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.452841814 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207092136 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.280359519 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.279554115 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.268889214 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.430145988 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.26900836 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.522457679 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281412308 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20524117 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270523258 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759777773 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.124521624 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.274548618 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271054168 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98736983 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.274479314 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532264007 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.273723825 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.900987869 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274750028 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.205090836 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204894151 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.962601114 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.272020124 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247257438 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725058483 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.597019187 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.252123837 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291639788 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115295869 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526956836 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.283557915 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.809049817 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497551952 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.031342604 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293102355 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.37038374 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.946905471 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.26751507 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.16792441 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.506305934 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.083688466 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.495277497 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.216402157 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.244325837 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.269339951 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483827175 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.186424734 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.145864272 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512822007 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.982525663 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.28940917 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943894024 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297339932 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.178827402 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293444605 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.61614983 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.276726919 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342291919 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281908498 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.283614187 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.282604857 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429843269 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.156272384 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284812967 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.286543924 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365687121 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.541601873 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.919720309 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.044904444 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829101888 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958485132 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.814082622 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286621009 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.27259248 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274026184 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208911007 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417080035 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.799341204 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545283228 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404334485 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.681013098 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296461161 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.970595048 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282842475 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485080326 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548282546 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.141600059 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278757281 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.931002735 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.170104906 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285488746 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.48352171 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738712717 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803111776 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388297249 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.272841137 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.690353132 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546633342 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.364842316 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274889401 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.862768477 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.276978486 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.585109186 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.280858695 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.219111937 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418664637 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285464956 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918034796 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.281703726 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.433096022 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.048182217 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.152314489 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.531346233 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.715964229 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.285958873 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.818682708 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.926117364 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539413483 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345542267 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285105822 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.379864696 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419547506 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.282963782 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.172165952 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.277064834 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119055178 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.985303109 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.28520952 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822522757 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54042686 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.272758527 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.285678821 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29497476 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.282887138 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.49942646 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964193234 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498659272 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286732051 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276918651 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.266344917 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823164376 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288693445 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212308262 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.276407062 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503425894 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.515665918 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303865094 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.72884238 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.98666137 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811088883 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.250884727 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299213681 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280598982 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.930686925 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824302261 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.932508765 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743964191 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936090204 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290857009 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548978647 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.282951616 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.288272419 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552185428 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.281611972 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.285758086 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288613222 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.820509741 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987816323 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.298099394 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.083599512 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.215786336 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.502855423 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882074301 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21585008 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276075821 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.448830039 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.281102261 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41289256 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287812055 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.280152976 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279877019 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.011964195 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561369298 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.281304562 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.279284073 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.001348669 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.281211906 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284866899 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499658528 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28243757 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.953660081 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.629321708 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.534168922 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.279634009 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.2609014 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.282089974 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279126991 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.997170598 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.243663233 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.771722819 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807316734 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.282858137 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.289508544 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.282702939 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.494833013 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491704929 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.22564549 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.301636521 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292002748 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294972308 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.185340078 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.045053752 seconds)
  done (took 1541.139488326 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.32584189 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.282381543 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.296099839 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.320197572 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.299618002 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.331207403 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.379060115 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.306981734 seconds)
  done (took 51.755813611 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.284433122 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.429570994 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.307287169 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.28404339 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.285063324 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.290804632 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.712160465 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.277333926 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.285798192 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.290080149 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.280923991 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.27751779 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.912673338 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.286096633 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.288900396 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.265860357 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.286082358 seconds)
  done (took 64.26186536 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.278309312 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.533582138 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.357961428 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.28048311 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.976051344 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.28512049 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.582745027 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.345033389 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.277820831 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.630940603 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.929914472 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.321411864 seconds)
  done (took 83.011393741 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.28949072 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.288488415 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.288947584 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.288836708 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.287416201 seconds)
  done (took 7.656526101 seconds)
done (took 1955.680028686 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.582422936 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.917667867 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.90969608 seconds)
  done (took 5.040544141 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.427809613 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.476863295 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.597329074 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.714405276 seconds)
  done (took 7.431166337 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.558896919 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.651112641 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.478238129 seconds)
  done (took 5.902039679 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.586218033 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.287309697 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.41497692 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.279800392 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.280845287 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.283050164 seconds)
  done (took 20.060439381 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.285607892 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.288169434 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.286141251 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.287946283 seconds)
  done (took 6.362256082 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.266488017 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.977754084 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.269334068 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.283921767 seconds)
  done (took 18.012528137 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.03363833 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.046870297 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.029881934 seconds)
  done (took 7.32604657 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.29218005 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.132043149 seconds)
  done (took 9.638110218 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.573156924 seconds)
  done (took 2.787540238 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.444733085 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.6112627 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.278894075 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.214830881 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.305833691 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.788531439 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.780345905 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.39380949 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.179808315 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.26397748 seconds)
  done (took 26.480104974 seconds)
done (took 122.124987071 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.851541322 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.304019081 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.489646419 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.820857726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.512394847 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.285700636 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.688239863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.791125282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.330377178 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.320818839 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.819686791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.517268678 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.854551441 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.3089389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.853208222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.308575136 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.518571937 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.898169533 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.50862767 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.747143792 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.689951724 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.460387006 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.652174991 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.482459185 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.512581807 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.439510661 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.0435535 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.305367152 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.682335131 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.059488412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.436800797 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.921604593 seconds)
  done (took 184.632735548 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.283799983 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.283812021 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.294333233 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.282408486 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.282659661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.295725593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.282809292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.290726283 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.28277392 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.28606668 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.282373548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.291457061 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.283092091 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.281823975 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.28076975 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.298668006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.282394012 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.291126737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.283221554 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.282498364 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.283775418 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.282527166 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.282970481 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.298092928 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.281612257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.281489258 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.296671511 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.281805007 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.296936115 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.290803907 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.281631921 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.294711135 seconds)
  done (took 202.395641492 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.285814733 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.284358633 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.282370307 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.284081708 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.281103245 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.284048551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.285048275 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.283378965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.289080486 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.283519156 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.284098726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.283783317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.286420911 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.301421314 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.287316856 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.295402426 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.283313607 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.298285645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.282328419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.283226175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.286779452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.28227644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.283852446 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.29529428 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.289480907 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.283700147 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.297944276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.283712059 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.283668891 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.284112244 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.284694146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.284893799 seconds)
  done (took 202.389439591 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.491961541 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.294867162 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.295927857 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.249462373 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.295878373 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.292996173 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.291457746 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.488813627 seconds)
  done (took 13.922685302 seconds)
done (took 604.554459101 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.532585651 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.261669969 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.48713643 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.316736254 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.034386924 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.31286354 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.316450717 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.477432045 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.188837408 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.473628889 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.531927282 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.31249159 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.668450326 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.314854344 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.555233527 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.410000248 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.172197736 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.276483088 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.617410324 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.794253309 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.555242027 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.69910049 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.475209875 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.185229053 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.643843093 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.697150602 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.95089787 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.153322522 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.312371817 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.614820819 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.837439356 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.207067948 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.367062515 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.350323285 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.40729653 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.388976633 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.182183644 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.34527605 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.491712961 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.478090267 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.801647878 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.007884774 seconds)
  done (took 88.42707278 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.285085773 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.283965836 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.283551222 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.285592609 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.285106748 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.284172742 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.285093489 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.283363518 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.286002617 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.284454886 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.284861307 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.285165953 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.284848914 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.285374992 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.283782576 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.286947729 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.284805077 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.287972618 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.286541562 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.285432376 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.283360634 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.283919043 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.285800464 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.284079723 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.285014318 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.28781337 seconds)
  done (took 34.63606081 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.299400674 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.546911804 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.69783051 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.305678342 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.296963598 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.302369476 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.368326486 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.300669876 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.301247718 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.302564068 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.451300151 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.300151513 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.334601594 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.727847888 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.302097973 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.301171171 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.300353929 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.299449682 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.552894739 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.309465187 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.38609073 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.300139766 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.369939329 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.309057506 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.317661797 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.298803314 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.303612261 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.826353961 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.300920334 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.447525532 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.012823823 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.365814398 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.779164961 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.712073094 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.017256324 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.30094102 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.30029912 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.45175451 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.301428024 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.300631694 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.370707053 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.301509195 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.712432705 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.937657138 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.314757455 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.30096432 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.832919434 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.45184458 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.52332872 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.307845162 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.729190607 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.304017018 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.303684051 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.303415873 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.526966579 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.307356452 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.300615592 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.822632704 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.318948063 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.37358282 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.302029158 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.301980723 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.562090492 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.306204743 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.549290887 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.305123549 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.311252249 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.303964005 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.71273987 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.304467384 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.943232586 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.315878517 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.301633091 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.448379427 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.548417283 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.866457176 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.306846126 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.562557763 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.778470122 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.369956173 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.305772327 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.831401598 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.374343382 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.305898437 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.306035749 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.304610882 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.301659398 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.349618447 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.370243659 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.876782721 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.93983151 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.838204846 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.389618107 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.314413181 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.302567568 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.822706023 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.319402832 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.303997092 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.719428999 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.942862056 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.317941673 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.311796075 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.929113014 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.318206298 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.375425739 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.310022123 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.725312299 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.30479588 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.407857844 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.303455705 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.310484805 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.308001538 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.374059351 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.309181795 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.312208986 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.924520139 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.475028288 seconds)
  done (took 171.513582618 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.297753429 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.295206814 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.298595883 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.295387168 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.296797684 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.301929867 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.297856538 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.300232615 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.304828934 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.297284412 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.297554486 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.299691629 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.300107029 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.300925635 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.319561902 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.305014507 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.914397089 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.299820027 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.307020197 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.295482055 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.079061996 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.299015458 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.297390579 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.295786057 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.297958192 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.301209527 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.312119166 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.299258586 seconds)
  done (took 151.037615726 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.305953299 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.824787416 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.305704926 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.424371939 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.326536231 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.304264211 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.424472975 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.354370539 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.308164478 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.303678223 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.303626791 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.584676086 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.30493697 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.786326779 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.476059717 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.42737751 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.785940893 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.308248228 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.304050254 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.306469211 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.429620224 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.312463592 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.588009488 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.823614085 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.305137136 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.826984559 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.292109876 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.307247248 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.306116181 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.827026709 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.304126911 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.585363218 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.375137128 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.361539704 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.830510786 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.778971873 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.776840044 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.435843905 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.307533715 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.305742388 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.305256172 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.295083284 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.829677008 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.306594997 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.308819333 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.825139238 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.31947906 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.308661595 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.318854099 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.307180743 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.361878371 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.362913255 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.593008431 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.832685031 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.374246414 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.327345434 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.427729454 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.690776005 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.309508223 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.788886168 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.295539156 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.833505716 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.309790128 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.296562092 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.309872011 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.312149944 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.442822391 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.429718141 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.784818237 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.308071137 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.784501301 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.444118675 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.307385409 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.310059848 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.310621089 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.840489949 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.785873757 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.443034015 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.433024926 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.484970391 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.298458198 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.30653135 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.297841684 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.37883568 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.307222416 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.843387944 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.790705826 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.310249418 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.311957213 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.310895391 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.310559491 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.46984472 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.844521781 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.379229153 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.780337821 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.604970414 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.596787538 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.310666956 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.365749471 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.310155382 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.596336381 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.309600517 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.36320197 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.753929989 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.59574735 seconds)
  done (took 155.19603299 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.541066773 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.45250923 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.393956101 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.416257921 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.880325866 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.86276374 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.552812104 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.428314065 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.409520373 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.546076337 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.417332293 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.401967705 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.470999092 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.379906512 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.010528954 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.372753844 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.397628834 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.435339953 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.399067526 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.29871181 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.93491851 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.584316576 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.469252481 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.229185621 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.394982484 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.062941901 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.835244713 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.828644538 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.476382883 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.532528776 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.813742319 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.372523012 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.222622161 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.939066617 seconds)
  done (took 63.001342315 seconds)
done (took 665.031180349 seconds)
SAVING RESULT...
DONE!
