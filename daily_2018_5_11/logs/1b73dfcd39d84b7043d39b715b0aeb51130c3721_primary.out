cset: moving following pidspec: 29389
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.540464162 seconds)
loading group "string"... done (took 0.53378743 seconds)
loading group "linalg"... done (took 9.142892409 seconds)
loading group "parallel"... done (took 0.178225697 seconds)
loading group "find"... done (took 1.311905235 seconds)
loading group "tuple"... done (took 2.069456651 seconds)
loading group "dates"... done (took 1.525563782 seconds)
loading group "micro"... done (took 0.210675322 seconds)
loading group "io"... done (took 0.557445224 seconds)
loading group "scalar"... done (took 52.929917093 seconds)
loading group "sparse"... done (took 13.767823221 seconds)
loading group "broadcast"... done (took 1.304701518 seconds)
loading group "union"... done (took 11.009816462 seconds)
loading group "simd"... done (took 3.300096258 seconds)
loading group "random"... done (took 12.429822405 seconds)
loading group "problem"... done (took 2.252347979 seconds)
loading group "array"... done (took 24.266763459 seconds)
loading group "misc"... done (took 1.149770505 seconds)
loading group "sort"... done (took 3.784187863 seconds)
loading group "collection"... done (took 19.398754265 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.619241865 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.184319425 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203431749 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.288278645 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236825251 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154421245 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139067353 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.261312465 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.626338225 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210953214 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.129689804 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511384184 seconds)
done (took 6.307546712 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.254437032 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179836814 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168768231 seconds)
  done (took 1.036240871 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073800075 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.153070491 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.104625925 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09183271 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090324402 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106342563 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091511257 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106363777 seconds)
  done (took 1.437560274 seconds)
done (took 3.493796553 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.502757321 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.878575134 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.525602492 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.162574631 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.301527516 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.297272967 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.330071026 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.199755907 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088933585 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089082372 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175706887 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.383908535 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.439043206 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.947473033 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089195948 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.112601073 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.117170951 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.778654017 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.075763452 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111990758 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.511459857 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.191771572 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096506303 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12434544 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18318167 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130531123 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161686381 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100545077 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.670626182 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132572248 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186263616 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.094948008 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15965274 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.191665534 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.20627718 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.091040913 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682693625 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.196743143 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094502821 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097167028 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66905415 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.11558361 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186739875 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100621716 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088596537 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180321536 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.094487828 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076228568 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.112982538 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083159759 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164374472 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.456181868 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104045436 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170358355 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090315127 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69974506 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096350386 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.270555902 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123743778 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091254894 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088760395 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088619686 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156558421 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093429064 seconds)
  done (took 20.040234044 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148261763 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165149576 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075934026 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153577014 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120533922 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077957801 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09935808 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07592857 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107185142 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240049673 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134660107 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152099754 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088678354 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085629428 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12688009 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245905212 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107249719 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121617076 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085747085 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088317886 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137111917 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094746547 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089123098 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107611051 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167036995 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200770886 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109588715 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121565637 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.086600729 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096587495 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141668067 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146922584 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090174906 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084520407 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171134652 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119935054 seconds)
  done (took 5.1748137 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200767277 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121534458 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.215070598 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162197844 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145075223 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168459202 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146328324 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.285412466 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.279672003 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161209942 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125707631 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103186041 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078021783 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07787963 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094203951 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.492501113 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.177515884 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128912261 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154508477 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102046531 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080561872 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.376756298 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098817878 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079302835 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10112163 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067326654 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.199678033 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085023903 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.091289572 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081014663 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085721795 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133875124 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193432074 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129900229 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119219852 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098828388 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079846635 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.214670634 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090819933 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075711504 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124032008 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114273899 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12867126 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.17847517 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082137982 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221389732 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110801438 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079006855 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119814993 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.057702734 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19298704 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124395425 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07702592 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09721296 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286590849 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097042362 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084322401 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099820169 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.240939243 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129750244 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08061191 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077275542 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105125517 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078197234 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.431562537 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104410881 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.003909389 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096607951 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.140432355 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099118605 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102171708 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083644831 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083270094 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116289285 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07861676 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076422672 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077083297 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094446558 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08210388 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10898308 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082559349 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076459909 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158502497 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096504771 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097160431 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124397048 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08314818 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093323826 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109876049 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09485499 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081751147 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168893113 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085028804 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093063072 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099843207 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080174504 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141600477 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.078487286 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.203692882 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07771098 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104459707 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097605527 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124378093 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099601819 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077401831 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098068662 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079243184 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075445179 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095063946 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143415074 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079083088 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080782985 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097613315 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090759249 seconds)
  done (took 22.970728527 seconds)
done (took 48.873877634 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.448519818 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087411229 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.0854179 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103940166 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086588722 seconds)
  done (took 1.580523773 seconds)
done (took 2.326502798 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.322064785 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196012438 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099225349 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195600423 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084501821 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199716238 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186799708 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092083058 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213431551 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083767663 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192130006 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083183829 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101903156 seconds)
  done (took 2.817552592 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099659986 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106505537 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.114804991 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098015296 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080478452 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096682118 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112511573 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107984632 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095704926 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106738029 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080107328 seconds)
  done (took 1.8416705 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095922866 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102999909 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086893151 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111714828 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08085289 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09483092 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110942283 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105439087 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094741808 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108286829 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081133644 seconds)
  done (took 1.818386477 seconds)
done (took 7.219072051 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.985144275 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.324833572 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.167825748 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.300876872 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345904098 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.25055883 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.656958037 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.156244713 seconds)
  done (took 32.084148223 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.115156582 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.155412844 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091387832 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085881215 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086559289 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103862154 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089871785 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090195607 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.109024994 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09095066 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086041435 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.1032719 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085478662 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085203564 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087799371 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101769737 seconds)
  done (took 2.376560769 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139229002 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112133323 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108713256 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.092244543 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087753783 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110197258 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096027632 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0898247 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10520503 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088853372 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.096932166 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108164631 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090300018 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087919766 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107418669 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118464442 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088532841 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107749615 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116584455 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091761078 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109696115 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.091386737 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090245881 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108921995 seconds)
  done (took 3.273431489 seconds)
done (took 38.479544258 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151730915 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098121023 seconds)
  done (took 0.998905169 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.138835726 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154993021 seconds)
  done (took 1.049023855 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108158272 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084110998 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132426265 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098715432 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0836947 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10070929 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113170744 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099732598 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085490645 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085232092 seconds)
  done (took 1.750071694 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088934128 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088998183 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.116462037 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138172238 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111316922 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.088583298 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090598595 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087463328 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107809453 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.085065109 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.092915908 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121394672 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089004159 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120437561 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090340422 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091252099 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109561177 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.089917061 seconds)
  done (took 2.568085296 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084344766 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.086997354 seconds)
  done (took 0.933286093 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088614501 seconds)
    (2/7) benchmarking "second"...
    done (took 0.083936708 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086848952 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103524624 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084653423 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084062783 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100356951 seconds)
  done (took 1.392103863 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.494443615 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26241557 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.371182831 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101946623 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140066751 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.336788331 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.139454804 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098363475 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.0969863 seconds)
  done (took 2.836670626 seconds)
done (took 12.284449313 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091953072 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.215342097 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.630427225 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.227801163 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084834976 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158173418 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.288394831 seconds)
done (took 2.463184477 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348751079 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.149597218 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084002399 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085856677 seconds)
  done (took 1.427604299 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079771196 seconds)
    (2/2) benchmarking "read"...
    done (took 0.092472875 seconds)
  done (took 0.93870288 seconds)
done (took 3.135045968 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085135985 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107146318 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100687579 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.082320138 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083838897 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.081729688 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099856139 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083177773 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083972757 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084099364 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.101800721 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084047761 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083166949 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099614208 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083479122 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082841608 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082502594 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.098033018 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082980878 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08239211 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096832151 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082840754 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.082693739 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08129467 seconds)
  done (took 2.916684811 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109114991 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084118339 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103070295 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089453345 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.087598814 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103684783 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08982431 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.084788898 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087832269 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102030994 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087650444 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08722975 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101715493 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088266346 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086624353 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104228853 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08971367 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084673512 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101682447 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088775229 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086921707 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101593932 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088970302 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08843156 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103369265 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088059712 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085072317 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100462229 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089785323 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087187625 seconds)
  done (took 3.552162484 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096196531 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083179537 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086967008 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111123956 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.083977631 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086734409 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099280199 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084694201 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088351608 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086088371 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.10584059 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087868647 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.083201031 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.103394376 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.088907912 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08970885 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094294749 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101744685 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084808703 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088275071 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.105765041 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085186683 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086915463 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08493078 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.104138391 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08444214 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08625587 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.102729549 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088856012 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086919978 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.088675571 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106013726 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087542702 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096845123 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.106253462 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088238056 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093160872 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083666258 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.105502684 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084097156 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083875338 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.103983015 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085414203 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094077737 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08633089 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.104224901 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084088512 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089084157 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.103784017 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092324561 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08271012 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083478476 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.106157635 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088067916 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.0888399 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.100044701 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088283916 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.083903625 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087715217 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.10379991 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084081576 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082569995 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.107604524 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088169118 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102941902 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.108745379 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085595908 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089164928 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.087072505 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.109321406 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089989439 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09709006 seconds)
  done (took 7.437358905 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099449225 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093964617 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083549114 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102164369 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084978759 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083913683 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105138737 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085950146 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084575775 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108064939 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08529701 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085091924 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084121641 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103215341 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085156476 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08384473 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107484956 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084636982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084709161 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102238671 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08725005 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089288442 seconds)
  done (took 2.794266112 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.22832742 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09204475 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134015703 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115125721 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102354751 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114788255 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090352367 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090566063 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105342476 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095550309 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093614744 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10529083 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102206545 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092948419 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11068992 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095260174 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088460931 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112180487 seconds)
  done (took 2.749068171 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102071513 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.085365797 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.124652398 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087830252 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086990139 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086283537 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108525602 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108420173 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086886298 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103860834 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093666264 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087197019 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104323234 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087515327 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08674512 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105109612 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087963233 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086846673 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110217721 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092990007 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091115321 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111320272 seconds)
  done (took 2.905577982 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101037099 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08661362 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120484847 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09064997 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085170277 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.084816544 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109063986 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086285997 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092692892 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104228857 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087521005 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08594298 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.11803669 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086827999 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091232429 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103226038 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087883879 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085711625 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10351921 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085538838 seconds)
  done (took 2.677639937 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.169814557 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121143801 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105496799 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11293856 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121466547 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106686297 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11156133 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123355667 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104601217 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131766837 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104590128 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104726483 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129714174 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111056968 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105281149 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130428065 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112663376 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128447343 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106531522 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105376972 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133279822 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104124506 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129983353 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105954027 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104726722 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121541284 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10569253 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110165756 seconds)
  done (took 4.049107994 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086956949 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086307122 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083980941 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10104595 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085303942 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083753154 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.084103941 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.102009137 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086371288 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084268742 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.102693176 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087330789 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085129646 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084584605 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102203553 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.085756178 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086209109 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.084871396 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101656578 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085258301 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086264833 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101127968 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08698316 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084211313 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083643479 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102457276 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085991453 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08467218 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101248125 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085611743 seconds)
  done (took 3.47916604 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096974169 seconds)
    (2/2) benchmarking "in"...
    done (took 0.095178126 seconds)
  done (took 0.981682925 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093889739 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100708896 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084324124 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102377639 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09297376 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086830791 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111995522 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091967458 seconds)
  done (took 1.555642707 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.144190093 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159444681 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090876702 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097495301 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160563182 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.151865383 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133231698 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090940788 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105017397 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082853258 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154445342 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081785726 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090501111 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084407387 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108555091 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094553771 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085947331 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.114189915 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093995778 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088017137 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108391759 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095223379 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091536642 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.114379743 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083992673 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090956104 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111066987 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10142849 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086609294 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109790251 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088064914 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086493196 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.108417273 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092300842 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.086897485 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162301509 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09788979 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10384127 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092044055 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092581567 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.137747535 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.087335917 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091079578 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086827005 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111517032 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.092276069 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091456568 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.104340103 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083275955 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084927125 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.104018924 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085450549 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085629358 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107550848 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091050858 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096260278 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.105064353 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087726401 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085109891 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084653047 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106792419 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086256025 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090745588 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.108376718 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092174605 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090505601 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106536187 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.08695192 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087017065 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.104901331 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090629018 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105463212 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.10884425 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.093184332 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092294788 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.104072886 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088196614 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092576506 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105308954 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091625262 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09113475 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.132001603 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093391381 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085633634 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084919293 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113034907 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.090187325 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089605451 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100493511 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100646077 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088495435 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.105613133 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08386303 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087829454 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102883029 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.091565241 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083521619 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089812889 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.10437594 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.092085241 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091743924 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10658805 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092924773 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092665498 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111646915 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091311315 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.151767278 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089139877 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085806619 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.089290489 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112208579 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083624147 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089659141 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.104022248 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089459076 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085542125 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110546171 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091441771 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.088404149 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.110367688 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093539081 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092055802 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.107940503 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087829053 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08720488 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091205019 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113690085 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091983895 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08804085 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.105216876 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.088076987 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089519027 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.109453338 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088912455 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092185921 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104830445 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.087583169 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.088895557 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.092873719 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108429065 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085929868 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088506279 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109479153 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090431435 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089904212 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109678978 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086358316 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08285767 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109433389 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086790442 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08699359 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114919382 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087892223 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.090229119 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085154853 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115380593 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087642563 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.091395389 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109512035 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.094733797 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092164018 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100584617 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088410896 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.090201313 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111157528 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087484377 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.087521912 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08653756 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.115013662 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083592197 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.091093424 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101707229 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0878967 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.092536793 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.108194561 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.092518108 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085228324 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.147280112 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10107915 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092061909 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109132748 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091840766 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.091787631 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107256628 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.093462885 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093710101 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091700266 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110109721 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090583841 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093669927 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105477698 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090378423 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088437902 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11086985 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083650224 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.088637002 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100479272 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.094320615 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092888083 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091403541 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.11221538 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091183703 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088867434 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114416844 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087363342 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091917114 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102079943 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.0952706 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.096275327 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.113085168 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094780352 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092121676 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106555927 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.089389713 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098233205 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089540162 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110030663 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.088944329 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083448361 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103290469 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.09593811 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.090349968 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104156931 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.087947023 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093429897 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092229888 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108165061 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083722504 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.092859416 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114182747 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087690423 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090772357 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106092906 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089507327 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097799902 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102877453 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088484124 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.0928832 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.110755261 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.087218017 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090054932 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.109105002 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097386918 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.092226196 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.090343662 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107256824 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096857431 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087805871 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.104190655 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08901854 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.091552293 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103258683 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.091386188 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092084668 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087136268 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106368124 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095839226 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093999822 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.113380447 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089779293 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09204033 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.113315257 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.09512244 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088388838 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.113251237 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088107139 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083028622 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105040391 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085023036 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.089294255 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085946799 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.111446808 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089404873 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089197713 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.110247143 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094316577 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088120055 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.112692382 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102537079 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085327623 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102582822 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090254572 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089946168 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106147892 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097813726 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.089013434 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111007003 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.094400007 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094211722 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086528525 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.10782194 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09474585 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.095938134 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.114043087 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.095153788 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.094053969 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105088072 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.093548111 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087597891 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112885005 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086417956 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090057912 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108219342 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091902043 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087518968 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107974362 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088253692 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084049683 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086218695 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.115195049 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091355032 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.091704288 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109562261 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089910437 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087547921 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105975563 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098701748 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089356003 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.113517792 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089531517 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084055734 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08424296 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11272908 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093022118 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.094055785 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106102187 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.092939237 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094591939 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.109693381 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.089574963 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.097129386 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095428131 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.11363433 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097805459 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083729487 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106800636 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096607609 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.086870297 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.109877212 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.091013407 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085315089 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11241105 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096742085 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092406182 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107530514 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085600057 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.088303642 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09399444 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.110737982 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091603198 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08969073 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110156042 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087339728 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092375024 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.094206074 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111635392 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09438749 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091047813 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.112885533 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08776469 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.094153167 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.107831922 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08687377 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084478299 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106399551 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.095466433 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085803649 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094360864 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.112762474 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088604309 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089233054 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.112440832 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087466038 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094389463 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112785998 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090283356 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097771609 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.107299166 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090171227 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.093269117 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.09300586 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104272123 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090810677 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089097703 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114135024 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090866339 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.092929223 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110272355 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096121474 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.089798972 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.111965038 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09521858 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.093867132 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.0846669 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.115595401 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096391354 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.089488375 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107172201 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090457341 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085601672 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108815894 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.096235257 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08859589 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115607278 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.095839839 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089829627 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088266432 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.114352717 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090439179 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094018642 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105878506 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094771335 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083989547 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114552234 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091091487 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.094574031 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10675924 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087110017 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094617084 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.11258018 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094852206 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094979653 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094658235 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104115125 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085767923 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.090914593 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108199266 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099627125 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094244173 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10853895 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091350891 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.089749115 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.107748631 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097559891 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086238086 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087941023 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112162121 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094458251 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088826476 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106483683 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.094146292 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090479436 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113058522 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091797973 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085653739 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110137791 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.096970359 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091295953 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106910198 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090948053 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096795544 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090111558 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108704212 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086399547 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097773676 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114092216 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096559153 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087951311 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.112056107 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090720698 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.091512859 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.115152579 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091748393 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092117728 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110175292 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096442408 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097656861 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103946002 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090891007 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098045835 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093158777 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116504455 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.090669446 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090069765 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115342344 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096589455 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.090791662 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105569124 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088180956 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090375459 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104187432 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.092645037 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0977103 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09075603 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110125353 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094266115 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0927676 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.110032943 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.092356586 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086251343 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115389027 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090390808 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095424061 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085117256 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106427992 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09128961 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094292531 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111032459 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093905823 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.089562245 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.109800371 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088016467 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089951411 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115474141 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096597692 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.09511549 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090769165 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.110184279 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.092915863 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098991517 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.110185594 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092823074 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101465568 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.116504784 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094432281 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091792974 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116861917 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.097656147 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090825056 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.116064446 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091793193 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091190917 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.096474053 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.117388184 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102401042 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090162532 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107893626 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.094967299 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089980909 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.106962917 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097126173 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096981451 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.117205018 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093125125 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089202023 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118723747 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099161813 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092237802 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109077766 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091073292 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.09417338 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08950886 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.114299583 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089565581 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.096530928 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.116425423 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097249045 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.099478434 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105865279 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09950456 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094609948 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.120057813 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.091622878 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086229655 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086132408 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.112749643 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.097964369 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099013653 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.113322545 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.095379054 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09402447 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.112655468 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095352179 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090544316 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.096781715 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.115943105 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.090957589 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.094209621 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111611523 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0948643 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.090885812 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.115712829 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.098788519 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093766973 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119536169 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098660355 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091210569 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108938143 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095803698 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.092125635 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093489522 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116371095 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090126851 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087110084 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116897245 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.09897894 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091481518 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117420622 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099579297 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091619658 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114798065 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099961378 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094117794 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.090102883 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113830748 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.095074905 seconds)
  done (took 59.155108427 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144694316 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097847667 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111529184 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093955509 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110851968 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112770398 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092522082 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092477368 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11222694 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104329874 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091443734 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111361472 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11024547 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113223314 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131764875 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101968273 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110426089 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093964166 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092590568 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092042026 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128358113 seconds)
  done (took 3.092042156 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112103143 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105758908 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122860091 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107874067 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098089707 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12588524 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103251628 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123931541 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108182398 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100157507 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.127282196 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103958445 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119252474 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.103014176 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099648274 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120961717 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108375626 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098438641 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125187835 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103921756 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120270376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104944571 seconds)
  done (took 3.282169048 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.102531571 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.095559622 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097318422 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11242112 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.097400595 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.090985231 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118782761 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09448344 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10092547 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113214652 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090191251 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094293218 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09749515 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.111399659 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090132212 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.092112118 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122205362 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.097086607 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.097798416 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091361962 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127987596 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.092191766 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091406264 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110216285 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10525431 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.097461748 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.113270073 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098107899 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087882504 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.116966527 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.095469548 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093254575 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.113852704 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090500259 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088946558 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.096065277 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.116998747 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.093042271 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.092148571 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.114554329 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.094521485 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.098084705 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116809022 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.094114249 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094107067 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092571351 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.117875236 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.094106139 seconds)
  done (took 5.689768016 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124062499 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1532972 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097228827 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124051116 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.130769298 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.103013713 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.096058036 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12648788 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093880105 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.11607659 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110527613 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106825244 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11910488 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.101219954 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096052522 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119130407 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09885126 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09522156 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121554457 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.096692243 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.100094014 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.120251098 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108483708 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.127323485 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101755446 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096067425 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.115900341 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.101512814 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.105080651 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.123006956 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10193131 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.099976164 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.369255218 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.097054502 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096812735 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.119943334 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.109279344 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.096847477 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11892471 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095206814 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09707813 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.121110992 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100062579 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.108370634 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118464393 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.099115875 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.09697026 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.114496574 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.105365038 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.097301679 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124087928 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.107717648 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.119535469 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.09871795 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100385461 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127253108 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.097196769 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.094768055 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119100363 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.106829547 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094740715 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120589027 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10809296 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.097096697 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.123879673 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.107411087 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.1180121 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10228671 seconds)
  done (took 8.641540069 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13308127 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101032385 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129320105 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109855788 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100487086 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.122585454 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101664203 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09995574 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123771432 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106341026 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120510028 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.198474256 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119363799 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106207585 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100040663 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122598795 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102457394 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100839129 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123081333 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101824334 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.099466695 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130714553 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101823183 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12906608 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114527599 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098183931 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121731909 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102524958 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108659075 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12240549 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113143554 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121606905 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102521749 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109266774 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.133142999 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.102444482 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095185352 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122714691 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.102485903 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100642098 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.119550936 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111136191 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100821531 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.120212702 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102306388 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100803114 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.13204026 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.112712667 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127411328 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107726678 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.100795759 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132553695 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102287951 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122120722 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112283105 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.115963984 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13224906 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109595129 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122462094 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11217034 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109010126 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138859693 seconds)
  done (took 7.955665255 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096788486 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095483272 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.092957752 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.114665497 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095900335 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092972999 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092839512 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116848645 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096537846 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093428442 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114902184 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096077935 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094084147 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093474201 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114658118 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094097572 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092764445 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093294757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116126639 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094211878 seconds)
  done (took 2.848775445 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106106797 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113117564 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.116741346 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103625852 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.097434368 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122203968 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.098616362 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097147812 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095772235 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119778449 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106898032 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104110334 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118892265 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102418119 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12603747 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104007573 seconds)
  done (took 2.591355995 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117018547 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.113986058 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.189272634 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.099019764 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.119484966 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104331083 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.097263927 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098297427 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.118439394 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10376049 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.100476597 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.122332653 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.098741145 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097656608 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.119435983 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.101932873 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.094481018 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12199193 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.098188889 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.165022972 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.12429765 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.098127529 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.098370944 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.123930055 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.098401942 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.100262629 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.126364591 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.096517132 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097907976 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.120449266 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.099576093 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.102799226 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.117816577 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.102533418 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098422146 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.118261181 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100146613 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.097888015 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099014678 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.119875993 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100138177 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.098527617 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.119826123 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100713502 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.095293883 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.119724308 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.09672499 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.102094058 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.119296313 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.100134967 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.097539051 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105706244 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.125595691 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106919804 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.104086871 seconds)
  done (took 6.876802171 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110088945 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099232753 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.129970684 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098115343 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.098044674 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097071102 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.120178526 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.099156751 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096519235 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.117904601 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099548479 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099884503 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117838358 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101820026 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.099039085 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098106925 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117264131 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099137563 seconds)
  done (took 2.76539867 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103708381 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097519361 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101822629 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.118999449 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097047974 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096350417 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117010662 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098452441 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095981402 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095743251 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118419515 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.099668232 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095996999 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.119818236 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098247073 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097533519 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.118463657 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098320215 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097323977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094916928 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119722965 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09876379 seconds)
  done (took 3.147627372 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111631285 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.184419383 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107062269 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.193508423 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097390714 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095038176 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128096581 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098127283 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113070445 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118205433 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09748457 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09541508 seconds)
  done (took 2.307851245 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128419311 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136392946 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119660745 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099818485 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107137647 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123577569 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102871889 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101615936 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132100842 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112785688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122375233 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112576463 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109749943 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130536028 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107243659 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129614575 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104183341 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101061222 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097565438 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140259627 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100971884 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132085885 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102421053 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101711041 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124187718 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110748108 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131171452 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114495994 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101128609 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132397707 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107520921 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101663443 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133232658 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113900859 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1189801 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111359464 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102081178 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139811747 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106976396 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131209258 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100262378 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106830841 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132694866 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108545856 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110156649 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123775355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108365336 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101166606 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124877765 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124570352 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129852134 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111692342 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128164657 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112837098 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10892613 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147187025 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11366856 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132930066 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108120828 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134553557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112449365 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1072482 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133268841 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114253589 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128518657 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113096836 seconds)
  done (took 8.589220978 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139711779 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098966593 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12329859 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115343547 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110238267 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125231011 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102674801 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123343014 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103849028 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09841127 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169280838 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102977852 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112556013 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133796287 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101751375 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124228112 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104228465 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110166036 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12194397 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126345986 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101858857 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134438083 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11072651 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13278631 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114706237 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128187388 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1043025 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101881167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124198833 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104002769 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107157432 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124983577 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111450378 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098820918 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133108715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10336092 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102795535 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129900826 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103342596 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128887336 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112673799 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119124039 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125193451 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103177352 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135307429 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104429026 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102006324 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120971072 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105019939 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099121485 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13552608 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11582655 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113800395 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134982766 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102959139 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12492642 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104150096 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102680753 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124773327 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109913501 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110522753 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125143169 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126495484 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124034713 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104262027 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111136057 seconds)
  done (took 8.524813558 seconds)
done (took 161.334208377 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150081372 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.188855036 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145861676 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177969243 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093089549 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126593341 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148052939 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148275014 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091771324 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115516682 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094467664 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09488986 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180244107 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093172868 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091219592 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.094805408 seconds)
  done (took 2.901360732 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19029376 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.312935161 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113574503 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119072519 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101735088 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098912238 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118488444 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100105015 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096148431 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12772721 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100731054 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095415846 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127544016 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096713993 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097127999 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120665486 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106822066 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099459817 seconds)
  done (took 3.106889884 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121435345 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139771647 seconds)
  done (took 1.144919376 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131337637 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.196275573 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275490195 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172945206 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122399859 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137909824 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151758342 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132786456 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.17886989 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132751905 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112253987 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09806107 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14716756 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103485097 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.109799045 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12068966 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125620617 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.131743953 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.110356338 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099721509 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141652774 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103962298 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102997724 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.131157663 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.169832491 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132098812 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10422049 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101875404 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121825832 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.10915936 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10669741 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137711937 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110524357 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17558941 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103481453 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171709498 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108128286 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119670971 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108173111 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097771551 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124342498 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101889296 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115253088 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122153349 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102938689 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129515372 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103978127 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102204502 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129258433 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109468784 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106748086 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128742138 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167868215 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.111017407 seconds)
  done (took 7.786857666 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.854148061 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14068775 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098508583 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.008927977 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148893014 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114166282 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.847640568 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143728 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23282553 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.901415411 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114944964 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111537368 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261084835 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.251137109 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.178467809 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.369997688 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.684851111 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134407577 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128198691 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164346346 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107240764 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146372011 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120537378 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429295433 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099123913 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098117643 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128353724 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11317549 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178404181 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099497526 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.100822546 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197815671 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.28752123 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208046448 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097656592 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119307115 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099554637 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186219494 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27344887 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219090086 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160091432 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118034721 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097596946 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106214172 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141541156 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094157597 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181230518 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190115648 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189440334 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102864458 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110561535 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131418936 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106949975 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177858828 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096349219 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.353725257 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381226781 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098670794 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106411956 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136682531 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268807959 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098178077 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235478597 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1471555 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215116602 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098523817 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808683476 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184174876 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098073423 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104025135 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128401339 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103044525 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12657746 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159117618 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405145675 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111087048 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12420097 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098599051 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236975567 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09805632 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097299307 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182802751 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098495745 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130280591 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111788242 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132702338 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187265918 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246527302 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13435455 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10943645 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103052136 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135135688 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099023101 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232644591 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230069774 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176827489 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.2319192 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1082135 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181356902 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160736844 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129203517 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187441017 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106766479 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113312353 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129739678 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22441154 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155641358 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100325051 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103087472 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128712507 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137659428 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100466592 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130805464 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185237623 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.442565265 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186674379 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.116918851 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105233001 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107821996 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179775542 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105754023 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264985686 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130065372 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161996981 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129020442 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096201427 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105483316 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180827538 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130176086 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10811418 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105749016 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132744102 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.268971862 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222474623 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113605314 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24074936 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191989085 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106916602 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192142342 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106709823 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188847232 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108798762 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12919317 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100917501 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798445957 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134441339 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107900292 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10416398 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205317621 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098434204 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100125531 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122335279 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095357145 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80478207 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100475524 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119040615 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101797431 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106557333 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129734634 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107767821 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103814425 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18022645 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243137656 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.135790491 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105415158 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12016311 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156737794 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.122188604 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099958104 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098835017 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.120380173 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109801716 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103520594 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1223723 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168511651 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176645958 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230096155 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.530950035 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120151735 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100664917 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241401787 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097897924 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.317921829 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131186884 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236002342 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185840865 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096521203 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.350534302 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187196173 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202019897 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103991024 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189730986 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097317233 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106967585 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179898729 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.097955347 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130763085 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174992899 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115878428 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110785626 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.212201986 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101096893 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2485805 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09748135 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187831535 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101625769 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10637678 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.344690782 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101180853 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116551124 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180455705 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102643759 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123592196 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.707027542 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101449443 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10946638 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128723364 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236909571 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18429012 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107356252 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107899142 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136252499 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180390485 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211419009 seconds)
  done (took 45.795131968 seconds)
done (took 61.616291601 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29216455 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254603256 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.304868893 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.213930949 seconds)
  done (took 2.037482784 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.29175796 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164222557 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.233651021 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096842871 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248469947 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096560117 seconds)
  done (took 2.043901379 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.497394767 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.388038289 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.343671823 seconds)
  done (took 2.137820209 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.249614143 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.233812816 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.348955107 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.413478869 seconds)
  done (took 2.276875169 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.30262927 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133084072 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125582042 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.215920195 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.281736558 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.258815698 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.151497762 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203066175 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.153597059 seconds)
  done (took 2.789741361 seconds)
done (took 12.194942197 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.372041222 seconds)
    (2/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.248105415 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.19555945 seconds)
    (4/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.287426247 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.27067369 seconds)
    (6/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.314747693 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.107480423 seconds)
    (8/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.318718743 seconds)
    (9/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.275980075 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.172154199 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.219095724 seconds)
    (12/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.272478416 seconds)
    (13/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.15514172 seconds)
    (14/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.30937002 seconds)
    (15/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.190236928 seconds)
    (16/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.248979549 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.136099158 seconds)
    (18/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.323815292 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.082360927 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.148024998 seconds)
    (21/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106455737 seconds)
    (22/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.225898255 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.265188126 seconds)
    (24/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082544667 seconds)
    (25/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.10401009 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.162952013 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.134111637 seconds)
    (28/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.20042367 seconds)
    (29/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.144462733 seconds)
    (30/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.092553745 seconds)
    (31/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080732004 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.151460715 seconds)
    (33/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.152527871 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.161005825 seconds)
    (35/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.304224568 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.183467882 seconds)
    (37/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.360221849 seconds)
    (38/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17542486 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.130981988 seconds)
    (40/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106454362 seconds)
    (41/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103975047 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.127828517 seconds)
    (43/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.105166714 seconds)
    (44/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.184549984 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.129006763 seconds)
    (46/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.212402096 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.105656679 seconds)
    (48/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.107987543 seconds)
    (49/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.18802342 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082953621 seconds)
    (51/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.138795034 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.166517572 seconds)
    (53/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.104119023 seconds)
    (54/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.123917278 seconds)
    (55/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.178686219 seconds)
    (56/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082092543 seconds)
    (57/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.182713725 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164044701 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.121961732 seconds)
    (60/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183344671 seconds)
    (61/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.131285875 seconds)
    (62/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.14906624 seconds)
    (63/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.154396038 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.103870363 seconds)
    (65/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.223164212 seconds)
    (66/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.146459402 seconds)
    (67/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082921419 seconds)
    (68/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.116935541 seconds)
    (69/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.094144766 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106724116 seconds)
    (71/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.087064677 seconds)
    (72/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.207421557 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124590247 seconds)
    (74/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.08181446 seconds)
    (75/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.131562265 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.136486146 seconds)
    (77/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106042028 seconds)
    (78/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.107090838 seconds)
    (79/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.200286739 seconds)
    (80/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.178072383 seconds)
    (81/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.107846948 seconds)
    (82/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117781558 seconds)
    (83/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.175158826 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.131805148 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124041343 seconds)
    (86/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083001952 seconds)
    (87/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.170346706 seconds)
    (88/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.137960153 seconds)
    (89/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104773321 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130650549 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125405964 seconds)
    (92/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.161722477 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.133226705 seconds)
    (94/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083660595 seconds)
    (95/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083103714 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.103455015 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.12476125 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.10699411 seconds)
    (99/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082115925 seconds)
    (100/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08268947 seconds)
    (101/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.131191628 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122744072 seconds)
    (103/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110142755 seconds)
    (104/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.172975458 seconds)
    (105/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084317048 seconds)
    (106/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.105188332 seconds)
    (107/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.200998614 seconds)
    (108/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.088456562 seconds)
    (109/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082917129 seconds)
    (110/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.109544854 seconds)
    (111/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.10808343 seconds)
    (112/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08427605 seconds)
    (113/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.082556052 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.104270492 seconds)
    (115/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.171336464 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103241373 seconds)
    (117/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.187359135 seconds)
    (118/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082538917 seconds)
    (119/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.204516415 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.134867811 seconds)
    (121/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.109250674 seconds)
    (122/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.181956373 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106206264 seconds)
    (124/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.130190397 seconds)
    (125/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.084543885 seconds)
    (126/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099536636 seconds)
    (127/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.08206901 seconds)
    (128/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.22910142 seconds)
    (129/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.105226175 seconds)
    (130/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082520396 seconds)
    (131/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.112644333 seconds)
    (132/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.084227498 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125280243 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104646443 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.150006485 seconds)
    (136/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.196082324 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.127626127 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107113703 seconds)
    (139/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.144984943 seconds)
    (140/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.083498133 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.110402125 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.107961781 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084457347 seconds)
    (144/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.13250759 seconds)
    (145/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.084433081 seconds)
    (146/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090567342 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105777051 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122819502 seconds)
    (149/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085729616 seconds)
    (150/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.088867219 seconds)
    (151/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.082902249 seconds)
    (152/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.1567487 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.111815246 seconds)
    (154/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085064135 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107540889 seconds)
    (156/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.08816153 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.132105002 seconds)
    (158/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.106784718 seconds)
    (159/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085280334 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.130325509 seconds)
    (161/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084902955 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099969331 seconds)
    (163/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.218859579 seconds)
    (164/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100395265 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109639423 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.150125233 seconds)
    (167/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158093428 seconds)
    (168/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.083669002 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.105956177 seconds)
    (170/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.202489861 seconds)
    (171/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084667739 seconds)
    (172/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084017074 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.083776315 seconds)
    (174/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.131540431 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10123837 seconds)
    (176/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.083552575 seconds)
    (177/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082165324 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.118939067 seconds)
    (179/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.089666655 seconds)
    (180/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084786538 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.082885175 seconds)
    (182/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.088374551 seconds)
    (183/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.10715747 seconds)
    (184/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085260578 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10653204 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122364274 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.131293122 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107230365 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.129351684 seconds)
    (190/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.084306882 seconds)
    (191/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.083345814 seconds)
    (192/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.089484326 seconds)
  done (took 27.47220432 seconds)
done (took 28.399667308 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.220929734 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128195971 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108753068 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107058419 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.2043769 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116010415 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142123454 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111935156 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114121956 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13029453 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100716076 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.117283728 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107220542 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201986924 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110722972 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127429598 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101076557 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115701001 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.142318685 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119560275 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205326328 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102717023 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.113243604 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125923995 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.181276755 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126939776 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.10847818 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109022161 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.138533436 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108943442 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107786278 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099804911 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.143329385 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119284836 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09964627 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132469813 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100200715 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089524373 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.130132926 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109804887 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.115659907 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.107228964 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134942673 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102273151 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.10762656 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.132996103 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100538669 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111135678 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.125185131 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109406336 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102558955 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.143813068 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106549362 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098703027 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122765916 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102810169 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114786743 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099530503 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.144268842 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100311759 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.101156487 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126445756 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110764999 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100669937 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.130821957 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102379169 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107154217 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.13233554 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108158806 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102850229 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099729067 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132366266 seconds)
done (took 9.68062512 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112358164 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.157001248 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.201979479 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.211693889 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131022204 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140710119 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121245607 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129784023 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143643398 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127044188 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.158941278 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130325938 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.212900652 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.113648316 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115908578 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.137100426 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115084666 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113731893 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.215336697 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.122897995 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155789312 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113129259 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158759569 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124891264 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107482381 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.164016769 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.107822619 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.135103302 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109705919 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115406709 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.149320253 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110459821 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.107129498 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.152940939 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121468422 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113481268 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.142882239 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111405835 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106535394 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.131831891 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11555784 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123851741 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131939899 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117378093 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.135350178 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117564352 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115701248 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.138991468 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.111174797 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110511656 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.135471941 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134758706 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.113141159 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.139821498 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11560539 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115222963 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.140155783 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116291438 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.107611043 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.141429928 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107839435 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108047815 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.136243533 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130760754 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.107926917 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.140551956 seconds)
  done (took 9.618148672 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132352088 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136765814 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140776929 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116266968 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110544906 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12341898 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099533265 seconds)
  done (took 1.834683793 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.106512176 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185954478 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210270617 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208795437 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.180105209 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.218382268 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146916616 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101200843 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131135402 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135576321 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188178586 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.240864819 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.106560339 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141939103 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185945366 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126530984 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.187614887 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126510233 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112233305 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.21315221 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114479297 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.128041409 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.140924518 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100574467 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209903412 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102200501 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.264349436 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115837152 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132561528 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115754142 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111800413 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205933568 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.206498923 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115784391 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104219097 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209674085 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.204540233 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112781542 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.222634781 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106047987 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.20876176 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.112847418 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116209907 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.136947926 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117282689 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.194141189 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120205788 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113414118 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.136852332 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19392881 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136137839 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184849589 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.133618887 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.112896133 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111315299 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.13832992 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123697146 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114141982 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.21933234 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11520766 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209995769 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.207725922 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.185743673 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212560932 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122616641 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212605189 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.204434034 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112508265 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108518294 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.138233049 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187840457 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.136075835 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113324296 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.198267933 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117848315 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.210568348 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.187714889 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136078877 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114158187 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104136238 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.136072342 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103304317 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.174597317 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138671385 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110930507 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119077482 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141562451 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11277427 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.106278641 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.150390069 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112730754 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.137490155 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120062108 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.111930781 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143486984 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189629104 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.138140023 seconds)
  done (took 15.567169423 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110692377 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103641202 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106843438 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128870247 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102865141 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103353406 seconds)
  done (took 1.645522006 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146268723 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114366906 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.147705847 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115712101 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165909111 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.219101976 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.224804661 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1106537 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156282508 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127433231 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.219837188 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.197907907 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.229799235 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.115879257 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.225879225 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118063993 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.226559336 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110665216 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150401012 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11236548 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.14205851 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.11944909 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111665871 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.211372749 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117943142 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144523264 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112038827 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125101296 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149155093 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112583472 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117065836 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142962579 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110389573 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110153449 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.228817743 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108169699 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1360191 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122203525 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115506189 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.14543872 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.199068816 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138471225 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122693394 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122238387 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.138531373 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108960852 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.148898275 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112650479 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.224738135 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124688057 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12236875 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.141802143 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118959364 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121989383 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.1359603 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112697143 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12201554 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.229344482 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.116224365 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.137077366 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.114374236 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119392883 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137799976 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121319106 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.11454807 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.149657241 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109978193 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13982934 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113129498 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.114086812 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147489908 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11620165 seconds)
  done (took 11.209482809 seconds)
done (took 40.838015963 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.568045849 seconds)
  done (took 2.556033948 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.908262161 seconds)
  done (took 1.900934 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.057033148 seconds)
  done (took 19.077631942 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.538408117 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.609214147 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.053828818 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151119232 seconds)
  done (took 3.340178174 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.001049391 seconds)
  done (took 2.009032958 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.301125484 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264091642 seconds)
  done (took 1.561591121 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.730080268 seconds)
  done (took 1.737477832 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.534093775 seconds)
  done (took 2.531237164 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.364828511 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173496621 seconds)
  done (took 1.546324213 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.628302309 seconds)
  done (took 1.641971556 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.444192939 seconds)
  done (took 21.459557352 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.250481036 seconds)
  done (took 1.267355577 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292704452 seconds)
  done (took 1.311605125 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.628363724 seconds)
  done (took 4.647220599 seconds)
done (took 67.591087338 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118926618 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116076455 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114254462 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139241504 seconds)
  done (took 1.494141978 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127802715 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116989646 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120279414 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.1425038 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122657923 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117387899 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141916974 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120049989 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116441134 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144968841 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117541857 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115503419 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145562753 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116946603 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114337691 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146090022 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122354495 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118444152 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143294744 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120104441 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118213048 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143372862 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121030628 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120039976 seconds)
  done (took 4.048237655 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.118763249 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106522078 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108896284 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13251857 seconds)
  done (took 1.486931837 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131790997 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129573814 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15350752 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124999325 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130075708 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154534501 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11699235 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11342709 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142125126 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125672684 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134087904 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156124936 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130264863 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118370384 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154462635 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112375147 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118723246 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155419012 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123929482 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125161047 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144311649 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124090231 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121835505 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151703909 seconds)
  done (took 4.208486186 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194094538 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125933693 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.166701711 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159466042 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.168007565 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11178926 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.136109548 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.145554638 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.118105736 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.114440168 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.142921181 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159813315 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144340846 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.115519688 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114217296 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146162633 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.125407235 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.118268515 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.182545304 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.117437308 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146153724 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127934399 seconds)
  done (took 4.098315872 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.124954154 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106387023 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.13018114 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111429352 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119132604 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135762794 seconds)
  done (took 1.753798428 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113016948 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101139431 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101223776 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126350694 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106140868 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101246933 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099870498 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128155639 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101747504 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101424609 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126987601 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101117214 seconds)
  done (took 2.329809456 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.348936328 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106246114 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135500072 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108195382 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11243767 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104210229 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147659022 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.10678134 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.271038723 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106719339 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146209058 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197732867 seconds)
  done (took 2.918335816 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210940069 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142540137 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29622618 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368305476 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160919472 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18497679 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268917763 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187872281 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201270723 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133689596 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240861541 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151562513 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173481072 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170141872 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160800669 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161563266 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192339372 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187879009 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171200855 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195173811 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180092013 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186006851 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176762234 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172875537 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131672975 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182814901 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115098591 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122884371 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191519604 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160008818 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194263892 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168662779 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136687984 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215860893 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232281613 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196888525 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28646779 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155999765 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177787783 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.20453781 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253587907 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135336132 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212259107 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14774395 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151944858 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174064729 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176857944 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.194142774 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.126777179 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138821966 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203253976 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194652019 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173414786 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156958249 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286489005 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186725597 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.137253748 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196247584 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205817753 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18468687 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188270196 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118637081 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204283264 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203745953 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175095698 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16164224 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161361216 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146163826 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163592431 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216554084 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173424777 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181849001 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.222904973 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126600923 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181395098 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167100714 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20119689 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171869737 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182227795 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.114287356 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172047662 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131995439 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120862228 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.222816697 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116834771 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221651162 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126816312 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343806611 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212786092 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150413662 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183886003 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153589812 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181567772 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139241366 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.136567287 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141304272 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184661596 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151573836 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154678703 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151722637 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133594892 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.151217383 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145364063 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.144910511 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153401026 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131242667 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188158565 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180656358 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127008053 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158364564 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171745761 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.14748835 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190640791 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206143168 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1273974 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126813684 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211826722 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176917175 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.127124687 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195944508 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180262009 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.172933195 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132798264 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186602681 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184562921 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163658938 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183640011 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159372904 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1309303 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170991399 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156730799 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180088184 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151338665 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123248692 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173793817 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220117534 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.123097227 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131997149 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190414069 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127902916 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148013163 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134218899 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129612426 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.16400391 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.13786239 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.156880131 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148465253 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181214155 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151176597 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179776934 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129539635 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200839258 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128373004 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.181620827 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141653158 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.113323165 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19765874 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206743004 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125215433 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225207014 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160265786 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21782754 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180915783 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127282841 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20034971 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124162394 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.114102888 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185220989 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149098959 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185251087 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.173550208 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21239372 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188806093 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.144373727 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173172705 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160987454 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.200002798 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174430071 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139983363 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15171532 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187965364 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.115475405 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146871532 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123039999 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131992705 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153322318 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129918007 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201473219 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158624307 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207450393 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180679085 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134489867 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206649194 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121569516 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183538209 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.159261254 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162085898 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.176083221 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203843168 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161289441 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164733569 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155622677 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.144825414 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122059334 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.127035054 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188901872 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129188337 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159075917 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136959468 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205491114 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166487258 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172135144 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221149744 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161762058 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215615094 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.114399173 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.191097226 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165772315 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182400302 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180595606 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159249247 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154986852 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20381168 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136568151 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211316 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151237427 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186341118 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210268112 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151816969 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124736382 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17153463 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154913632 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161924618 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160222733 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169728942 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125549931 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175950909 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133831127 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119688424 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20824895 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136275523 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194428696 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.181774534 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164708722 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148609422 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13857644 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179992587 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141551926 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113260881 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194623921 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178572241 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168142077 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150773907 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197980921 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124482317 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.343215033 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211590301 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173277883 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159281349 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136496093 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184659498 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157603912 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185936306 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176280099 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166124473 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174217772 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182281879 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138826569 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125309422 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173651668 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145690545 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.173940861 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.127334072 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179712724 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.136662303 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21019574 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134170065 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183625969 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154457139 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.173338038 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14695448 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161756482 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19156991 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180787394 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170295683 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.178706465 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162155621 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215901344 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118918649 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152114891 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.127126533 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203128212 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126417161 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156604139 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203808576 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216720245 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186591283 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158016276 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162749895 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121507542 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150837936 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173607612 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215128174 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130916672 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159978648 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190069083 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.162410952 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127359224 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182489345 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278814389 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169348531 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170058068 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.146175258 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26995531 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151481097 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12807807 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157417141 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194214304 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.12679157 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.20586057 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157637621 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165410611 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158863477 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159321644 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183052811 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216316615 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191718109 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168655817 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.169516444 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154927654 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185188704 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170480586 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167852037 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139313428 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185889633 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177049542 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205440139 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.127336202 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183122006 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154173418 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180555059 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166018277 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161624294 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186799008 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152637359 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158188095 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162328601 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119359124 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181458598 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.175182484 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154986635 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17209806 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183818338 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127473811 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1505141 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141226041 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180281843 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135542362 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.124958135 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206270053 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124313629 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188528496 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174363389 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155222327 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152551268 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171619636 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126628002 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136388516 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166571186 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125230997 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170073662 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204003061 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.125829911 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205071946 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187629028 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159806512 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182151456 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137719046 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.688413153 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.122602032 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202628314 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144944553 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211984488 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145906475 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185260737 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155264044 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172365936 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159999556 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171292543 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237376876 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187010537 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153017123 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125372428 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164945674 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135412417 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.15646345 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147619328 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182186964 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137249125 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129457408 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180726604 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136774254 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.170429053 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134510291 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208717513 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143448612 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209636932 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176287092 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162204136 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157217815 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198373284 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125494769 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188682395 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194739758 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137386503 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14186161 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.157115854 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132789944 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206694971 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.120007711 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154160603 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185649493 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153709108 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182757126 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.129116682 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187671046 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135635581 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185208175 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122269226 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.17410207 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156973769 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128711325 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.151477674 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1545949 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184567612 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150370987 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148585501 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168186749 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180279261 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.146967173 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129487207 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301676681 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156252888 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213296255 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.144624555 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160125474 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140110266 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179016029 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15184961 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184311556 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126534475 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12417389 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.152991067 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.170043422 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.177431483 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156001006 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201788592 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156697715 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219881703 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131624478 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.31343458 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134703708 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18101866 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.125620385 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.123448593 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166497853 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13027158 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13485879 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212884569 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204234169 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150463279 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.170752819 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130461234 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.121307249 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155884177 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160403898 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176728086 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154032156 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168131354 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112762671 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137520052 seconds)
  done (took 82.334444719 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172582515 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152071173 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168066414 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221227659 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196085315 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289364483 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230250731 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254193545 seconds)
  done (took 2.800436252 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125198316 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157241076 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138793143 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143754346 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117331701 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.448600121 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.157788063 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118539651 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16384073 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.159097738 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140161241 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.617077262 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114975683 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145588363 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128271017 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116837766 seconds)
  done (took 4.095822898 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.433644001 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.587877319 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.219710982 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.278324709 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233284148 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.179111975 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.799913734 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.191776533 seconds)
  done (took 13.04099121 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152795597 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133853401 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.316542238 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.769008483 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150384689 seconds)
  done (took 2.643684871 seconds)
done (took 128.261306739 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125522577 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120166343 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.11941856 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151234462 seconds)
  done (took 1.621528638 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.190050881 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09506193 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097183699 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122851013 seconds)
  done (took 1.622156122 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.446371823 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095152799 seconds)
  done (took 1.684730789 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152184218 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141640673 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167422297 seconds)
  done (took 1.591778832 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.147477863 seconds)
  done (took 1.268311636 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.133369077 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119422252 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.238597013 seconds)
  done (took 1.615672939 seconds)
done (took 10.529934977 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125977537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.415152261 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430466053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133335635 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710142726 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426552171 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.075430754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174173099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174127415 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136655794 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131628434 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687662452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.056172491 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.359162739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.012712421 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.386848176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692952758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110927751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111593012 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.049843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135784348 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112169834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11128305 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715610082 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421099668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108804042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.398132078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108806572 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111728394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425027927 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109480607 seconds)
  done (took 17.414446178 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123169248 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171558602 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144741197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110899412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11198573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13714645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120892307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120700728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203593858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10838443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158675327 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.10892773 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114467336 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135976346 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135726927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108261218 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111289945 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141927119 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11743264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110422038 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158165216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108770344 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111727307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14005722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109603068 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131815487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138557252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122360402 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108316612 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142556643 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115362296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110053603 seconds)
  done (took 5.226688844 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1644585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179353448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147357956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146324961 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185662792 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111729034 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222366778 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148544939 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202803034 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110610347 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130582109 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136796174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151040553 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109759099 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16317696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11053634 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113171548 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140603592 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11814974 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110940019 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160085884 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109422717 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111572842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14001789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111265978 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132984963 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137480168 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122585621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108356891 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142170724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116413758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110022762 seconds)
  done (took 5.541668174 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.132197493 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125306301 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133838533 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163701458 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119551796 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123780245 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154177196 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121062736 seconds)
  done (took 2.211482318 seconds)
done (took 31.513826747 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142033272 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129065131 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129057299 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152711334 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.190407092 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145109307 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125868347 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115102603 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.151627829 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131090217 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108916972 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115418795 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.157948953 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120335046 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.224163292 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123993888 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.228729865 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.19382524 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145939068 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124088228 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116602329 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.22937973 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120661195 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.145442821 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.20342472 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11304353 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.215203285 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118712213 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148564173 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111623035 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.224216381 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.120525899 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114675863 seconds)
  done (took 6.058657432 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.21587587 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.116662366 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149047756 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117661597 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.116521639 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146750477 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.213510361 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147702089 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119199343 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117491371 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.118136026 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223709811 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122885621 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.141037435 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.11869349 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.115052418 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.242880345 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.11713216 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109934821 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.126963429 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.111421906 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117775276 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.255059204 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.110214242 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117867016 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.14862152 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.118480149 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120056253 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.144468278 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.118877022 seconds)
  done (took 5.400164679 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131543728 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131255714 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135235454 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.21429666 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146893173 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160750421 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140194176 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133426794 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172261194 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11256063 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127122329 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178581676 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12942459 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121892349 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146183482 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13187176 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134260616 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142334669 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121412344 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130163992 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160811029 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130243604 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139276328 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149588639 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11064645 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118463656 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151075248 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127905989 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119891641 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126052255 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144484923 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115836427 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113179305 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.178098502 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116455087 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.152614914 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139233355 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124326544 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126161694 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.173611919 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115605351 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114594318 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.168148501 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168005541 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.141353474 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127455377 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12354423 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126276669 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.141443806 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130825997 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154921496 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.144601169 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132917246 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113301315 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.14039979 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120241449 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112140184 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144980649 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127606306 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11473604 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.165161775 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120705958 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122094104 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.113650043 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152866201 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11077919 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.110918019 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.146081946 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140212801 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118991304 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180016291 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112695774 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123568682 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.153307187 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123521552 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123249504 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.110875974 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.154809294 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122623518 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118209225 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.154211402 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.116177714 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115418563 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.158870882 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134151983 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126720307 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.154958574 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126178124 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.1154896 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.142111931 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129935801 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112980898 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.146257638 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127722103 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112052319 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115311913 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154621652 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124531118 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109773494 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.167733019 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.11679831 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111358719 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.16678268 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119683154 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117817209 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.151760981 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.156217931 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114066131 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.153185152 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126956899 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11288209 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119434578 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146468278 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111909 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130009876 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.15910786 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120353164 seconds)
  done (took 16.873710243 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.326777451 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.312555521 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.182135185 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.312680082 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157029569 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.209500265 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.308148323 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.310579921 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11146228 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182418249 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165156416 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.277855465 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145262563 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140997626 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.311604619 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.364574973 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174350402 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151325233 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181766681 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127277749 seconds)
  done (took 5.608471646 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138085861 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149523088 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166716988 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14468114 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119720119 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157324227 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11327933 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132034998 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.151038535 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124060757 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115656385 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158942854 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122612632 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.1260493 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159076341 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.153056413 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121153453 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147532752 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136480982 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117608169 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.136997467 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140118496 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122433261 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166567902 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129494668 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124134976 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141699061 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119236561 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116201019 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.118296648 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.147821599 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13395332 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.118580042 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.139470034 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126016435 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128391696 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.146166881 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116747886 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.11779699 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116496721 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.157354587 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123432398 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120495709 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.132794556 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130063123 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115580555 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122828571 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156861107 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.111763686 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129048727 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155840822 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125081029 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119286974 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.159719387 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.117815571 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12962604 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153257311 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125414371 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118724938 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.110732635 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.141702202 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117542014 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.118713453 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154003424 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126403901 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134532179 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.160451786 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114128613 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117430455 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146540767 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118603193 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128105782 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.16539467 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.118861611 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.117564379 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154912626 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119799366 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.099498316 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122355593 seconds)
  done (took 11.619525697 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147016426 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.120239787 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132061113 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179202963 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12551096 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118975841 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.150938849 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132975928 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125535435 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.15974676 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12682391 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126459438 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166362318 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123425887 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12063434 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160074205 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125201695 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152548408 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162452531 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142969543 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124894202 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150794256 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128510698 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124562457 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173453862 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125178836 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140664953 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.155705941 seconds)
  done (took 5.094322834 seconds)
done (took 51.791965513 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.294428116 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.488824877 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.259143613 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.259934632 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.262997622 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.283785173 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.258722937 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.260075751 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.778412677 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.239331384 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.260874335 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.257144713 seconds)
done (took 29.064832143 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.302241398 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.775929995 seconds)
    (2/2) benchmarking "String"...
    done (took 1.534320437 seconds)
  done (took 4.459885398 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.247260894 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.24804983 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.472194722 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.247521546 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.255336955 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.247504307 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.257023743 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.256807079 seconds)
  done (took 16.133309999 seconds)
done (took 26.297192519 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.317651892 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.450630468 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.497625963 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.244797767 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.246910537 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.268632789 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.252115506 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.276419086 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.257163707 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.245485422 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.660677391 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.510188308 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.259630708 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.633434547 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.252976632 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.24996325 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.261830527 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.492888732 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.251614804 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.282775763 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.230731219 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.236701813 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.264028602 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.251839416 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.253651319 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.251793103 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.315295598 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.24960969 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.454279217 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.25519776 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.289386734 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.24859201 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.309357328 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.251556937 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.259155498 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.261464401 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.443224536 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.259480566 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.239609357 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.261137167 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.451009456 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.255864485 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.250327361 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.261456397 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.254416483 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.305116072 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.240176167 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.362986949 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.268234052 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.259031652 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.260182814 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.639064687 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.257476501 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.257241519 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.251790356 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.494740234 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.271903154 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.313074034 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.27682476 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.257111802 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.251719714 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.250174348 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.293029737 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.270249713 seconds)
  done (took 146.901429331 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.253757793 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.250653199 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.249859994 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.297578407 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.255139638 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.250810098 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.250587927 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.251965433 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.25249765 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.278139477 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.255957164 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.251913731 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.255373524 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.199354906 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.259828416 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.273236794 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.265519121 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.250839659 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.256552357 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.254754458 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.262761128 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.252955009 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.252199008 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.252523877 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.253817284 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.339494158 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.293552529 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.258041958 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.262968408 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.254782085 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.296314016 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.259021383 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.882272008 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.120781603 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.268895437 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.282481722 seconds)
  done (took 82.059580313 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.257034125 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.256357763 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.256418156 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.290872681 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.255594797 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.850188843 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.849962335 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.973475528 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.252466896 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.672504458 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514102884 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.252477387 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.352017034 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.26806894 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.254031468 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.274078663 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.28276986 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.259243394 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.25781425 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.849666619 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.270118846 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.285558328 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.433591337 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.268374376 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291875718 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.656327892 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.254730091 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291837653 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.592697367 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.304332853 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.25378684 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.651511912 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.435117554 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.369572007 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.255855734 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292330897 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.259014237 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.544043486 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.257027842 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.260763948 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.261056191 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.962969557 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.25556886 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.25907549 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.852592125 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.219943503 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.25428396 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.260661716 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.258633951 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.548675213 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.936143114 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.253174837 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.255785219 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.257088624 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.259322126 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.256169503 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.257471641 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.290081908 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.622996253 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.351113669 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.256225227 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.260274205 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288712462 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.256274372 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.5013077 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.252639864 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.104245295 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.307277711 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.489431716 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.829905304 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.256254293 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.351844307 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.369744129 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.249002112 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.251554082 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.253388306 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.252955995 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.365274468 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.253463681 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.66112309 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.424776779 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.265251016 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.59799362 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.34913183 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.24944871 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.625762936 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.254354891 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.253372101 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.979272909 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.347521627 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.24891539 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.253765991 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.254342765 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.667050836 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.820558771 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.253889079 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.502219642 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.255436677 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.758046377 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.251084297 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.676953844 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.802677673 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.928244532 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.253703323 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.366528211 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.427218369 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.266346442 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.255006182 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.254224498 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.592851271 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.253545419 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.314411398 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.250947968 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.657259254 seconds)
  done (took 372.463673241 seconds)
done (took 602.574309875 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.131618606 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.081992444 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.229485277 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.083101389 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.064626604 seconds)
  done (took 11.742568523 seconds)
done (took 12.896349953 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.447220376 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.450643924 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318223016 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.449043928 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.288993601 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.467405936 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434649559 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.27748444 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.369032933 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.335778287 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.367250953 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.309682204 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2882156 seconds)
  done (took 18.955250074 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526837285 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.260823051 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.322425655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499399258 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.298568098 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.539714047 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.568010697 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.260901537 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.405099518 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.275741436 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.273737149 seconds)
  done (took 18.385987386 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.56078536 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.260608192 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.317035085 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515334127 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.295292391 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542748573 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.581239534 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.261963886 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42142033 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282300929 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.274996792 seconds)
  done (took 18.466001167 seconds)
done (took 56.96136561 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.127250795 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.018826032 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.292092143 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.352187201 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.270671615 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.285183014 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.359855646 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.275081794 seconds)
  done (took 28.135379557 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.268571098 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.269048372 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.269944921 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.267395111 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.270706703 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.272071238 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.269504838 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.26730066 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.268808991 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.270576596 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.271039861 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.268015176 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.26786555 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.269342868 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.270795884 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.268755919 seconds)
  done (took 21.465108699 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.269985689 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.267611068 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.268052745 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.26796322 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.267530529 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.268571464 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.268993078 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.268114522 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.267815927 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.269647807 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.268828051 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.269260378 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.267102996 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.269837697 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.26887435 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.269737215 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.268343173 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.269722185 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.274065285 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.273801121 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.272397638 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.268514767 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.269497783 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.268612327 seconds)
  done (took 31.618975418 seconds)
done (took 82.374674712 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.260487701 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.27269668 seconds)
  done (took 5.688806161 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.328181535 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.327317275 seconds)
  done (took 3.810656898 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.269575523 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.269666109 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.269649561 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.269957185 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.269143475 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.270067154 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.269276441 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.268241107 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.269417971 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.269275054 seconds)
  done (took 13.849909408 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.268756618 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.270139338 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.269239123 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.274457358 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.269052118 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.268901187 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.268686948 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.272330948 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.2687063 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.268516569 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.273649642 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.268652649 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.268971685 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.268601451 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.271299804 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.27020966 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.266456934 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.268399284 seconds)
  done (took 24.012139561 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.282887708 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.292121018 seconds)
  done (took 3.729479037 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.408390804 seconds)
    (2/7) benchmarking "second"...
    done (took 1.312077144 seconds)
    (3/7) benchmarking "month"...
    done (took 1.385034095 seconds)
    (4/7) benchmarking "year"...
    done (took 1.375313499 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.311347659 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.289790492 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.311106585 seconds)
  done (took 10.54878848 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.270580865 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.488922426 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.621941813 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.832910682 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.272416391 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.274078084 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.090796584 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.272388315 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.273808717 seconds)
  done (took 14.552838731 seconds)
done (took 77.349944927 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.257694964 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.318943066 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.282975605 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.283207538 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.561875657 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.264753504 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.260761234 seconds)
done (took 16.387210268 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.251243012 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.246750105 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.248045096 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.269694283 seconds)
  done (took 10.165902099 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.258837351 seconds)
    (2/2) benchmarking "read"...
    done (took 1.545396146 seconds)
  done (took 4.953895606 seconds)
done (took 16.276336116 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267102779 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.267023447 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.270720546 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.268392868 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.271315896 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.266789548 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.266107373 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.270639986 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.267154917 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.273120174 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.267675917 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.270689767 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.268321699 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270776582 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267269887 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268765667 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268245714 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.271940077 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270098642 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.26310803 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267078613 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263571617 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.264600605 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.266165519 seconds)
  done (took 31.586681824 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.271865699 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.266561363 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.266627529 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.26653774 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.267498646 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.267171762 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.27086451 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.267087868 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.272103433 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.269553005 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267652804 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.26448977 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.271103722 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.270056399 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269296597 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.268358428 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.272278109 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266710082 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270823626 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.271336753 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.271137779 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269210464 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.270624737 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270282324 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.271919976 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271139514 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.271550898 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.270035977 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271183545 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.27016112 seconds)
  done (took 39.236661859 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.27785792 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.279215831 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.274820085 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.274242575 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.27424749 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.27425509 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.274455658 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.272759123 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.274367097 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.274582871 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.273264062 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.274976636 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.2747908 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.275116792 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.274129855 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.275090695 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.274612605 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.274778565 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.274957641 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.273296352 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.274655137 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.275744157 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.27582766 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.273713511 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.274975617 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.27634908 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.274605651 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.276089799 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.274771464 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.275065783 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.275714862 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.275191749 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.274974148 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.275535132 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.276040055 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.273066698 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.279897594 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.280961415 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.276381523 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.275561075 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.274327564 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.277087807 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.277262009 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.277848391 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.277742247 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.27769305 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.27631194 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.276929905 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.276607313 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.278606545 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.275877469 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.277010137 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.277377239 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.277465122 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.277169164 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.277402659 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.277747377 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.276396497 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.279273007 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.276455554 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.278241745 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.276811365 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.277423096 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.277677478 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.278763395 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.27906151 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.277962422 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.278677881 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.277060759 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.279948557 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.278852565 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.279724348 seconds)
  done (took 93.052824882 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.275966042 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276353409 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.276911072 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.276066848 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2755348 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.277273576 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.276050309 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276290274 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274386312 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278576748 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27615732 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277393493 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275874991 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27774504 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27712385 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.275338025 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278340708 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276144996 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.277783429 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277917303 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278393673 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.277893232 seconds)
  done (took 29.250119379 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280123284 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.280687885 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.277579561 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280504713 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279691996 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.280288681 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276883238 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281155798 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28139197 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278054641 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277073 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279562717 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281312874 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27804209 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278419723 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280854568 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278409636 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.279502417 seconds)
  done (took 24.188631283 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.278225676 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.279454208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.279859293 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.277902424 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.279087417 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.279174973 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277537302 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.277759374 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.279980566 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.279479795 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.283066337 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281714781 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.281668888 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281683961 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28302944 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282917979 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.283740315 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281595562 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281699313 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280239884 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.280610598 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281416383 seconds)
  done (took 29.335404869 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281023033 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281105083 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.280551313 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279474945 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.2811003 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280990291 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.281158891 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.281041548 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.283673325 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.281185918 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279570108 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.281156745 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.280756497 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28041314 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.281975087 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280665721 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280552666 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.279675557 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281018769 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.280520752 seconds)
  done (took 26.781778803 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285728974 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289843162 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284743997 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283494493 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284368196 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.2851903 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283970962 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28404155 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285790594 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285496937 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286018764 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28487726 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283767728 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286187506 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284793684 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28418056 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284380739 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28525336 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285387808 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287350725 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28821865 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28640218 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284306959 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285305547 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285664754 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283812231 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288687354 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.286257196 seconds)
  done (took 37.161134461 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285989286 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.284016643 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.283246468 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.284689535 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.283854519 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.284529223 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.285008582 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.284522426 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.284406262 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28640178 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.287127595 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.286702794 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.286805195 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.288956732 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28562383 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.28487366 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289051901 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.286205923 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282842251 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284329585 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.284201434 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286478539 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.285454964 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283647851 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284599019 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.284949565 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284552178 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.282293911 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286012279 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.284370145 seconds)
  done (took 39.724053806 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.305011116 seconds)
    (2/2) benchmarking "in"...
    done (took 1.304924524 seconds)
  done (took 3.776461063 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.28438206 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285901966 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.286316803 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.285227149 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.284762134 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.285415965 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.286317644 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285256739 seconds)
  done (took 11.449736566 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.284115799 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.292531036 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.291072978 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.291326369 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.289838088 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.281163324 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.28852955 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.289679638 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.281739997 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.281513142 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.286234635 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.285596105 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.283368814 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282632028 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.280855566 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283603002 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.289421953 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.286842596 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.287263769 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.286460112 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286404548 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284400931 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285417304 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.289066916 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.283328333 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.292569132 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.2883985 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.29130608 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283464774 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.285188644 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.282468188 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.289420031 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.288702173 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.288803271 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.288170215 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.288459302 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.291099608 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286703147 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.290084815 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292663809 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289783356 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.286555598 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.285472938 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.285936059 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287876631 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.289707607 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.287361438 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.287106763 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.282751223 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.285311397 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.293192069 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287437129 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.289254608 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.287502772 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.284690308 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290678862 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.293069508 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.285246564 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.289571725 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.290767079 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.297147486 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.294198636 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286738055 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.291326989 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291995731 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.299322846 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292723789 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.292029068 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.288807009 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.29098259 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.291587031 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.298981669 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.296297713 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.293030279 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289443395 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.29065732 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284442803 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.290683541 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.291817353 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.290639528 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.291498864 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289631863 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293033255 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298835623 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.284832504 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.289772823 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.290624468 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.290994713 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.284395632 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294358992 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.295763965 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.291147171 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.284014914 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.286021485 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.286391018 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.290463979 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.285060025 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.287210808 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.291333211 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.290753873 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.291149888 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288653856 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.291181704 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292968345 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291422522 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.291859314 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.293274901 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284424228 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.292863195 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.293218251 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291591001 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.286151453 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.290353205 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.29461305 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286437663 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.288529439 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.291922952 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.28204574 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.292736032 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.290796792 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.291746246 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.306924493 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.291409113 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.290351577 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.289553999 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.297901839 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.291511098 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.288470425 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.292075966 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.290129098 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.292446389 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.288030252 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.295228305 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.288284427 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294065979 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.288305731 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.292617773 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.294830751 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.293589183 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.288319961 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.291389201 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.29176708 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.290883118 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.293269733 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.29963829 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.290266773 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.295533025 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.291129264 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.289623595 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.291313122 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.293108856 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.293859844 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.294491021 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.297101165 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.289650557 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294940859 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.289408019 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.298073139 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.294806788 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.296373335 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.298401544 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.292082842 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294026594 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.298722955 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.294833047 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.292882226 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.295708623 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.293627548 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.298781821 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.2910755 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.297063577 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.291950996 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.294900451 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.302203574 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.29826908 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.300550175 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.291072872 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.296771593 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296260341 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.29690669 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.292629118 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.295541672 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.295415595 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.30203967 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.297438378 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296343459 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.295121064 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.290082738 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.289122983 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.295432024 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.292997329 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.305690111 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304592905 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.30267805 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.291900767 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.300626367 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.291876088 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.299391845 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.294715207 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.30205638 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.300259473 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.300947767 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295948822 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.302168837 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.296935526 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.301132161 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.296867315 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.301063282 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.301636446 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.300559529 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.300831726 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.296735218 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.297034585 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.298002194 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301950288 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.301517788 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.295675942 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.299347114 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.29416866 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.295786731 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.301850358 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.302322733 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.301560269 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.301129223 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.295943334 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.298087371 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.297163888 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.296080275 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.301394454 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.299734798 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.298098943 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.3054494 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.299308046 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.298890134 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.304892714 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.300905763 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.298180172 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.300067897 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.3015491 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.301134803 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.301004577 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.30969535 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.307937658 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.303056606 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.300688902 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.295644129 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.303014826 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.30325088 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.303332348 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.296814092 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.303870662 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.300052372 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.302347596 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.29843218 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.300485904 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.299996242 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.302129258 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.30531538 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.30467589 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.300845643 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.306580273 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.30363102 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.304997162 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302676984 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.308663833 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.304281888 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.301358498 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.30132134 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.300478659 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.306461816 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.299082968 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.306091877 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.300571746 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.309477508 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.314380165 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304864226 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.302488892 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.30562653 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.305692117 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.301749812 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.304009984 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.301118975 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.300607394 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.302849754 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.301054384 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.305389968 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.302070782 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.304613758 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30387496 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.301553636 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.305171903 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.308562521 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.300454373 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.307956061 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.306685315 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.306718698 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.299982492 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.30822547 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.304819057 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.303763892 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.301712977 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.302971046 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310515072 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304513173 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.304685154 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.302488462 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.306651328 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.302987568 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.304656565 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.30987175 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.304827872 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.313335078 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.304403465 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.309650071 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.305563212 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.31073642 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.308370396 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.304265531 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.312453302 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.305925456 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.30112872 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.305100152 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.309045415 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.310053371 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.311034933 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.302470435 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.310244983 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307651044 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.306729484 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.309253514 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.308330426 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.307111934 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.308543485 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.311635524 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.30519997 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.305984823 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.305807934 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.308849133 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.308482448 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.308696342 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.302802525 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.307815022 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.309599098 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.30333674 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.304638766 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.304650526 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.308050144 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.308710884 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.30960101 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.307803015 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.309120683 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.310295422 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.307658982 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309215915 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.308079084 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.310972081 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.307718889 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309407142 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.3095198 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.302308757 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.309811574 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.3060909 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.302407787 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.303203226 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.306415343 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.30745072 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.30079751 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.314114116 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.304508458 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.301280037 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.301787549 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.306500303 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.297909398 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.308262962 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319733571 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.303952777 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.302250046 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.303128627 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.299101264 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.305079509 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.302068477 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.296964818 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.300652264 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.305618412 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.309716527 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.299861172 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.30429139 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.300287483 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.304458402 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.303826651 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.30453808 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.304691638 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.304172784 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.299401482 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.304398764 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.300994743 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.303975424 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.300337446 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299291699 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.30054272 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.306851255 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.306537299 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.300394638 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.30453181 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.306269366 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.295702746 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.301671192 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.305774339 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.302376181 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.307283192 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.30277904 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.303253541 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.304091414 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.307068068 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.302011831 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.307764387 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.303269359 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.301883021 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308762463 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.307469046 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305857887 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.303391492 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.306868859 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.302742738 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.303792792 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.311577367 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.304006316 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.308579923 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305317082 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.309840229 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.305073649 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.309241177 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.307769933 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.310584349 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.301695362 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.305299774 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.312755871 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307932124 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.309527655 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.309122741 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.312456593 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.305919768 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306673297 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.30875653 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.305002007 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.303722994 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.309502123 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.30459348 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.304676255 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.305281877 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310277548 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.308563718 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.306650022 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.305305794 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.312160495 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.3098732 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.310104605 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.303014036 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.30514083 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.30319394 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.309181894 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.311110499 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.303546499 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.31135203 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.310232795 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.310539372 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306258063 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.303917002 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.299140146 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.309005116 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307421818 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.301181413 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.30779919 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.30289485 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.308993808 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.310360733 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.310191204 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.301086514 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.302882984 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.310300691 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.306162777 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.30582549 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30312035 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.295988016 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.299263328 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.306767894 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.306518344 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.305515942 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.303117189 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.298899749 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.308254811 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.298823874 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.30451411 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.301631644 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.302661165 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.308673133 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.304515954 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.305758552 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.313504997 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.314688759 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.310114817 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.304724312 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.306248802 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.309438549 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.311701176 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.313623522 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306430012 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.306591477 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.309182643 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310479191 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.311800439 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.306577987 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316596197 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.316475326 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.310483269 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.310993113 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.312779239 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.313810981 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.313329313 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.314367246 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.312458246 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.309051635 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.317625677 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.314714778 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316226065 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.313874 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.310690286 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.317818655 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.311761826 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.313329855 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.314276929 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.315794402 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.315917015 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.313969369 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.321461868 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.317706554 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.318984522 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.330517961 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.312134432 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.314235628 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.318800293 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.311134877 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.315849065 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.313834185 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.317439531 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.316633434 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.317732917 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.316383952 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.311174845 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.314230557 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.314151093 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.321633021 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.315782543 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.311223876 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.313488561 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.316168181 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.315568906 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.322317047 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.317654334 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.317023493 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.318914928 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.31305314 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.322142049 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.323559606 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.317721978 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.316136219 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.315820259 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.31390434 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.31453496 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.316462792 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.32092642 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.31613531 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.317377096 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.313919067 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.318179641 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.319434905 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.311432264 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.312312712 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312820595 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.316072706 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.324636373 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.325768442 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.318979299 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.31309575 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318228349 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.31866694 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.312836886 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.319229786 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.317267709 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.314967023 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.315693309 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319565073 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.317953721 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.315834998 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.315146066 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.323407036 seconds)
  done (took 777.09211009 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.318237961 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318332802 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316689042 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.313976615 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316942094 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316456428 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315589953 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.315705105 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.316101677 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.317675216 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.315330428 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317269184 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317354603 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.319230219 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31687608 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.316487247 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.318453809 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.316354744 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.315713377 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318214823 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317898095 seconds)
  done (took 28.847859339 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.318599716 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.317724276 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.316908877 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.318986675 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317197941 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.319125576 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.318398584 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317842372 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.319251738 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316762582 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.321752667 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319586081 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.318268382 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.316655555 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317529882 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.319247819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.321512359 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.319476962 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.32131455 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.319082982 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322605297 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.321061375 seconds)
  done (took 30.213267489 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.32390621 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.318776948 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.316256692 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.321691467 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.320677533 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.319711938 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.320808236 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.322249663 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.322338886 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.316467069 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.31565148 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.316843973 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.320838243 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.324768023 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.318989587 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.322452771 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.324207077 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.323701897 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.321870631 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.320805063 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.323217847 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.324160644 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.321036421 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.314791289 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.319643794 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.321129545 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.318387424 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.321819125 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.317260368 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.324626054 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.321427994 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.315109502 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.31867884 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.315702397 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.316393177 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.321533538 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.321426127 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.318690635 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.317094544 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.321735774 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.331903835 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.319632013 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.322854633 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.321915401 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.318994352 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.317479825 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.32532068 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.318661668 seconds)
  done (took 64.580699404 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.321145265 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.319803185 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.319551997 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.320137973 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.322401702 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.321560731 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.323391511 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.321558642 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.321582818 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.319285585 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.323422164 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.321055584 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.320170568 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.322168519 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.321933874 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.319125159 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.320726589 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.322179472 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.32213357 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.323354161 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.321562865 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.323912917 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.323924751 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.321658567 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.324434601 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.323484633 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.322077513 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.322115924 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.321583107 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.322299889 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.321885088 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.325000762 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.32507244 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.323821845 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.321962943 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.324581639 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.32483409 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.322586483 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.326434019 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.32506563 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.3258775 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.32509641 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.324861501 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.325164585 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.324288934 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.322921557 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.323436224 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.321726509 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.324279571 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.324302794 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.32639932 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.323974841 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.325311501 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.325728287 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.324977918 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.327358352 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.324526506 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.325920067 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.327405351 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.325478526 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.326483265 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.326798196 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.326583872 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.328851395 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.326189211 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.327733295 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.327123766 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.327638249 seconds)
  done (took 91.208598965 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.329579571 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.328912555 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329741164 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329454111 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.330315577 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.328504985 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.327458389 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.32684746 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.327429536 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.329793238 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.328436719 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.329764335 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.330126387 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.329216234 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.328101432 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.330160836 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.33093921 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.330032491 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.330494498 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.330194862 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.329856884 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.330901223 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.330113369 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.329283556 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.330779576 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.328593577 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.329802611 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.330294507 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330070746 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.330164095 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.330256212 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.329365403 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.329338922 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.331385928 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.329630838 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.331465454 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.331518483 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33196248 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.330609113 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.330212055 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.331210055 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.332091236 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.331676616 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.329987521 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.33020363 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.332315076 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.331128 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.331667217 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.331068976 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.329075526 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.329430869 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.331217956 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333212734 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.331912269 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.330511836 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.329661916 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.331979637 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.330923371 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33268015 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.332952539 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33223183 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.33330568 seconds)
  done (took 83.683580989 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.333275043 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.332918251 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.332107873 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.33103834 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.33070322 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.331921104 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.330414642 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.333221494 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.33314674 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.332446882 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332936327 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330491189 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330009217 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335364826 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.331211693 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330634266 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329988486 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.329764972 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331774311 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.330938693 seconds)
  done (took 27.83862941 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.33124619 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.331962702 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.331716319 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.330879979 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.333100754 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.331147313 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.33508327 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331880774 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329436644 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332334709 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.333442797 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.334131111 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330785669 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.332800268 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.331425283 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.330715075 seconds)
  done (took 22.516210616 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.33545808 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.333396454 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.33436172 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.333202916 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.332615073 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.329846008 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.33342887 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.332771546 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.333634526 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.333861083 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.333947575 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.334777812 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.334310663 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.333749603 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.332797526 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.335108347 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.331416804 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.330401074 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.334686959 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.334068276 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.33353715 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.329727648 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.336010319 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.335918135 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.332821645 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.334687421 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.330659529 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.335163935 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.333935437 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.335418672 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.334213229 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.333342533 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.334671947 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.332941491 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.335401537 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.334323091 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.334537492 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.333565943 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.334674478 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.334847105 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.334210912 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.335197831 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.335462835 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.337852157 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.33378456 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.333623117 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.33584812 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.332197111 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.333353147 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.334123921 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.334922938 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.335768949 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.336899216 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.335781206 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.33544714 seconds)
  done (took 74.579916279 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33675017 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.336288431 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.333521848 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.334350172 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.336578244 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.336819695 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.337329033 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.33947447 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.337540252 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.340447049 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.336922566 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.33919394 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337169341 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.338548784 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336841101 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33744139 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.337336575 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.33570277 seconds)
  done (took 25.274853888 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.338580538 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.336822039 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.34138116 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.337105067 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.338089799 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.339593998 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337008237 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.339367169 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338092017 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.33811576 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33873615 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.338343294 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340158497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.338033411 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.337471413 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336711501 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.339552655 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340629538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.338493253 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.338070189 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.34010378 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.339474656 seconds)
  done (took 30.659015167 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.331745978 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.31815711 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.316749481 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.335113813 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.330384053 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.320649027 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.317783489 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.32255569 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.328096928 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.341002593 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.337898834 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.314974038 seconds)
  done (took 17.125456528 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312799678 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313105748 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313188782 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307867241 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309736398 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302336027 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305038565 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304765356 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305078903 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305761488 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305864686 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304552131 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30432529 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302681122 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305404881 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30431402 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30365718 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307176839 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29746055 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299328564 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297718259 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298978311 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297722072 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298342353 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297839141 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300162034 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296097624 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296587358 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294779609 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296534808 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296638832 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295690876 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295913419 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295277314 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294286637 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292697242 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292183914 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292896862 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292584673 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292072816 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29335736 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292707345 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290890626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289689645 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290665973 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28839137 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290444072 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289769351 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291421501 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292543688 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292504497 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29160613 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290610253 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290333859 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292152042 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291033589 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29199743 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290509462 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291388936 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290423974 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291881701 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291105608 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290606175 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291827071 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291426871 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292306096 seconds)
  done (took 86.787031261 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291411479 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290461436 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291965297 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291368168 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290582713 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290993409 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291324066 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29073706 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290843721 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291058318 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292424979 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291176355 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291852883 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292525659 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292420311 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292352225 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291394335 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291407874 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291296858 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293913625 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291648759 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290880791 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291510491 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292117516 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292491634 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293856713 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291983228 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292473207 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292270132 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293509447 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292515992 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292675219 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292264456 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291900475 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293851394 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293115692 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292174135 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292844472 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29242003 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294650596 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293186495 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29458102 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292621826 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294440038 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28822827 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287944 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287958392 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288537727 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289430726 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288278358 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289354233 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291702226 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285380986 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284650485 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283902754 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284226634 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283057408 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284091173 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284358952 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286124134 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282068094 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280477077 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284172923 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282288296 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281705615 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280828297 seconds)
  done (took 86.314194109 seconds)
done (took 1813.418717519 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.442151093 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.3953385 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.27616516 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.29038051 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.277588537 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.301208594 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.291644977 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.277946179 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.276568243 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.276515719 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.275984507 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.466459194 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.271271233 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.277017783 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.275247356 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.373144738 seconds)
  done (took 26.213444806 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.299605721 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.293004931 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.394781569 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.286050841 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.3087605 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.460057012 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.3448299 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.292412501 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.442567745 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.309130072 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.275576284 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.306058015 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.282963298 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.279062294 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.304206167 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.464125804 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.517303577 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.283713774 seconds)
  done (took 28.312749802 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.686785279 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.29540297 seconds)
  done (took 5.149035397 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.296323673 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.281794961 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.277388213 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.275123509 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.268669305 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.268901208 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.276323409 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.271326285 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.280870783 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.397777474 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.285549577 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.291402387 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.277042945 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.278275847 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.281835289 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321096936 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.433238805 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.284836313 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.280806535 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.283943809 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.276593031 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.372310962 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.321131519 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.287498697 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.392858338 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.28609732 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.287774304 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.283889361 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.417920651 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.28333871 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.277184099 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.278430062 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.279497301 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.271478258 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.7424479 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.277719775 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.287045984 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.302821905 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.282128866 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.426995016 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.282471379 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.284776108 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.271963113 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.736840518 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.413837701 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.398109031 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.277629419 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.284944131 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.280901958 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.34515937 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.286172224 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.281811443 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.339060613 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.105458255 seconds)
  done (took 82.308993596 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.329210456 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.273260922 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453092244 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.300799118 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.273027755 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.278067091 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.282170411 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.53845216 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.298744129 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.28607925 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.559453239 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831259046 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.286270224 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.348478732 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.276033177 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.363561294 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.274703108 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.277898874 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.281532522 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.278366339 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813119587 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.280245215 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.28076378 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.388014309 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.310967206 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.778797414 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.279827844 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.278606396 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.297167656 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.275394669 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784426667 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.288203623 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.370478662 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.277147716 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.540283866 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.634706163 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.594386767 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.275449998 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.297627941 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.278930484 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.282075316 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.751997718 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.61277603 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.275167812 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.294777131 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761568541 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.2756512 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.274413362 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.284506998 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527364522 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.280348726 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.274792038 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.272255543 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.276216187 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.270340003 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.305268292 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.367462426 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.762935693 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.266680565 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.273455801 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.309174316 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.265439742 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.272777101 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.269379666 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.280042688 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.60872545 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.46222911 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.273185133 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.601643089 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.765906581 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.26906217 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.838327832 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.26620661 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.277421839 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.267570537 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.271592509 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.264142181 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.751611861 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.285861118 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.264303432 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.587039035 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.264822975 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.545390194 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.283725904 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.265321645 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832616166 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.27037266 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.282698201 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.265244219 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.271515194 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.270542577 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.274785929 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.537057942 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.29803208 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.265472116 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.264019286 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.291038067 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.265021405 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.287088882 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.27359886 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.837961355 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.269104286 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.265494714 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.274998385 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.26505995 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.271675609 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.266310725 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.265155963 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53620241 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.270224791 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.289466371 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.26754981 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.265870711 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.280046485 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.359700333 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.267763018 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.554105289 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.266634296 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.266228001 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.271635814 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.271784048 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.29494022 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.267725657 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.272976854 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.129797744 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.532921545 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.288024526 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.271118588 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.268370935 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.268796955 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.26709831 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.269012618 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.328493819 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.270315673 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047049172 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.277143723 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.270062653 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.267888118 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.281035025 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.267666565 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.276810392 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.268459462 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.561276987 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.540410186 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.455712404 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.271726523 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.278333017 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.027068492 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.285757085 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447153055 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.291659521 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.269205218 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.518653243 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.494879543 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.269750679 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.268037548 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.268324779 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533514704 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.274053115 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.584134233 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.809340063 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.268969251 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.279935732 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.052392897 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.961199918 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.276276261 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.27092261 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.547216716 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.28288921 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.270501147 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.269268273 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.270029891 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.270094173 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.274235562 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.275476803 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.269833172 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.270816349 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.573829865 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.462059223 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.290178137 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.279967538 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75934484 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.305908476 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.270959798 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.271074647 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.275154515 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.270677238 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.358395179 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.270768171 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.316030928 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.272899278 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.271293903 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783295698 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.275794677 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.276258088 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460280048 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.959152459 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.276562436 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.272032109 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.272102125 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.205913312 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.790436031 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.344972279 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.564705485 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.286036585 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.309850176 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.274935403 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.368476088 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.790783653 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.279179853 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.272250346 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927351971 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.276368727 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.784398577 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.27219366 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.272445631 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.852797197 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.276531184 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.274656359 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.27242095 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.271113651 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595665945 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.277350899 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.275858412 seconds)
  done (took 484.113906578 seconds)
done (took 627.266628668 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.271811136 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.273056873 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.26250227 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.27697627 seconds)
  done (took 10.251270289 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.31524049 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.278758145 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.286168262 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.279633143 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.292181278 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.276586235 seconds)
  done (took 8.898099458 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.272740117 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.272559443 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.277889346 seconds)
  done (took 7.99253291 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.483185552 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.299713486 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.619680028 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.288664 seconds)
  done (took 8.860890134 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.286815859 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.289765007 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.288553087 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.293295965 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.315099481 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.317138996 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.291635006 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.29036336 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.315924086 seconds)
  done (took 12.858009554 seconds)
done (took 50.028380279 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.25588463 seconds)
    (2/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.417774893 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.347739028 seconds)
    (4/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.930727611 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.400084586 seconds)
    (6/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.162909316 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.312341979 seconds)
    (8/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.981895146 seconds)
    (9/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.273917347 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.392479172 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.446448881 seconds)
    (12/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.314069646 seconds)
    (13/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.346864813 seconds)
    (14/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.374791462 seconds)
    (15/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.352460641 seconds)
    (16/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.080308092 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.398751796 seconds)
    (18/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.27276366 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.073238085 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.354003912 seconds)
    (21/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.311314446 seconds)
    (22/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.259495809 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.259354896 seconds)
    (24/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.467071293 seconds)
    (25/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.322451425 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.277258181 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.385124799 seconds)
    (28/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.271776594 seconds)
    (29/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.314472163 seconds)
    (30/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.405107621 seconds)
    (31/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.04584926 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.366155173 seconds)
    (33/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.342303921 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.531721003 seconds)
    (35/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.128361035 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.501586341 seconds)
    (37/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.283840071 seconds)
    (38/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.046072159 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.347048497 seconds)
    (40/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.303761092 seconds)
    (41/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.446219431 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.349499294 seconds)
    (43/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.281751921 seconds)
    (44/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.264748525 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.382972329 seconds)
    (46/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.365503307 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.394311996 seconds)
    (48/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.261525517 seconds)
    (49/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.188300506 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.260022214 seconds)
    (51/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.285658446 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.558530135 seconds)
    (53/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.312171088 seconds)
    (54/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.383691372 seconds)
    (55/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.538535786 seconds)
    (56/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.439502345 seconds)
    (57/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.496312962 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.397192434 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.336661704 seconds)
    (60/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.938018782 seconds)
    (61/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.367158975 seconds)
    (62/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.347370718 seconds)
    (63/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.311664838 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.356797687 seconds)
    (65/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.036368874 seconds)
    (66/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.370404613 seconds)
    (67/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.267586424 seconds)
    (68/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.266297197 seconds)
    (69/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.268123932 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.284391124 seconds)
    (71/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.50613777 seconds)
    (72/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.267634994 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.371401966 seconds)
    (74/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.38626149 seconds)
    (75/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.337018756 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.428811259 seconds)
    (77/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.310096054 seconds)
    (78/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.263510314 seconds)
    (79/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.136013613 seconds)
    (80/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.097201455 seconds)
    (81/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.268616284 seconds)
    (82/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.292604643 seconds)
    (83/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.303637465 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.414445958 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.372540998 seconds)
    (86/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.131479476 seconds)
    (87/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.355415421 seconds)
    (88/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.280444666 seconds)
    (89/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.321551143 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.391885072 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.364818475 seconds)
    (92/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.533486609 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.285100273 seconds)
    (94/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.038723048 seconds)
    (95/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.268397192 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.308982094 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.398050926 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.31564783 seconds)
    (99/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.418505599 seconds)
    (100/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.465648743 seconds)
    (101/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.320784859 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.347816491 seconds)
    (103/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.361297607 seconds)
    (104/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.496126022 seconds)
    (105/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.269711123 seconds)
    (106/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.317238104 seconds)
    (107/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.994406864 seconds)
    (108/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.410210977 seconds)
    (109/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.39139719 seconds)
    (110/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.371237103 seconds)
    (111/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.274438283 seconds)
    (112/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.271172087 seconds)
    (113/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.389096416 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.325319837 seconds)
    (115/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.287991728 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.365254453 seconds)
    (117/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.287267489 seconds)
    (118/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.267823283 seconds)
    (119/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.501558588 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.445390753 seconds)
    (121/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.268827892 seconds)
    (122/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.226222498 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.557293919 seconds)
    (124/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.39693561 seconds)
    (125/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.270236814 seconds)
    (126/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.370211769 seconds)
    (127/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.37043187 seconds)
    (128/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.437991223 seconds)
    (129/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.319928648 seconds)
    (130/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.470687205 seconds)
    (131/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.411614796 seconds)
    (132/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.374967268 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.377126554 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.437272015 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.416675136 seconds)
    (136/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.265866485 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.293589831 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.545465955 seconds)
    (139/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.324571397 seconds)
    (140/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.269052999 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.979354251 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.346179942 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.466198916 seconds)
    (144/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.344367845 seconds)
    (145/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.095178408 seconds)
    (146/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.2759374 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.396501485 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.39502356 seconds)
    (149/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.272883497 seconds)
    (150/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.422414213 seconds)
    (151/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.429387906 seconds)
    (152/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.623954302 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.092914474 seconds)
    (154/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.272083493 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.286248371 seconds)
    (156/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.468384458 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.411910711 seconds)
    (158/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.31646519 seconds)
    (159/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.996974964 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.299216653 seconds)
    (161/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.13254637 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.367827043 seconds)
    (163/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.271620238 seconds)
    (164/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.400882215 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.323040002 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.40521614 seconds)
    (167/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.287102362 seconds)
    (168/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.430219456 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.382819341 seconds)
    (170/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.092657536 seconds)
    (171/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.274723116 seconds)
    (172/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.427008844 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.289296883 seconds)
    (174/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.321987688 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.451296565 seconds)
    (176/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.400935895 seconds)
    (177/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.447170152 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.239935243 seconds)
    (179/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.46627812 seconds)
    (180/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.281381854 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.442813256 seconds)
    (182/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.506245231 seconds)
    (183/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.274996656 seconds)
    (184/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.289302833 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.455003661 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.483381394 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.43575105 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.449541261 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.386807998 seconds)
    (190/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.502125956 seconds)
    (191/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.289524407 seconds)
    (192/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.539502813 seconds)
  done (took 330.27465518 seconds)
done (took 331.446523813 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311158773 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.375075316 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.294695186 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.29466593 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.295958699 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.29788878 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.318059455 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.296009031 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.305417709 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.30648997 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.298827408 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.306149052 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.308859225 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.304040841 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.329851243 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.29692215 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.296668007 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.30338992 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.306389984 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.30749607 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.297419367 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296970492 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.314430856 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.295962567 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303729494 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304154747 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.30286057 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.290243266 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.300503087 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.306932672 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.292849538 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.302465211 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.308111002 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.30495752 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298253448 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.30431216 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296937688 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.377533785 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.313967084 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.304615364 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.301531565 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.309721738 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.301931812 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.302520878 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.305574066 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.317871828 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305321704 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.311798873 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.29619581 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.289123939 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316453169 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.307141162 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.302147444 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.290493981 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.295051608 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.314030516 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.305591999 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314525997 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.303373465 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.299207233 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.332078391 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314260442 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.308176639 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.307234802 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.302818172 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.30970925 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.305270973 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.310973547 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.302789057 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.300315539 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.300777425 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.304345628 seconds)
done (took 103.24515853 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427735548 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.2981058 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.440773922 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.303825648 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.462073028 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.431029107 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.302583177 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.304102766 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.303512673 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.127108568 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.304261869 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.304631633 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.298647857 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.305362088 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.430211961 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.305624939 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.303472707 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.019491782 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.306711649 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.44378617 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.297560948 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.306126027 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.306107711 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.13158327 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.300397435 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.295745798 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.445773444 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.306090604 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.019625744 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.296071935 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.299599885 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.020595273 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.447801645 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.325078611 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.316164927 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.315163749 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.464151317 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.309413936 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.430845689 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.430505557 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.442378646 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.34710551 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.297236437 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.301142866 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.309397 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.307819845 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.305465986 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.334814678 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.300640186 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.306720709 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.022660989 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.316329686 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.306582749 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.307545431 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.307182165 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.337044529 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.307195678 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.308921781 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.448536346 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.309546761 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.429330934 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.134668882 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.131154589 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.30852892 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.300764982 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.308545744 seconds)
  done (took 106.510947855 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.37161985 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.377601503 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.40998436 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.305845329 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.354262305 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.411558163 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.304493992 seconds)
  done (took 10.725423626 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.309588247 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.311198923 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354423961 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353416597 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.309092708 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.460138457 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.309223177 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.314973438 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.30901833 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.354776414 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.31293599 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.310275736 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.317694838 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.304401876 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352538332 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.315318673 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.419421374 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.305319297 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.31029401 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.458755465 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.309239795 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.317729577 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.355485111 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.315070212 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.312422039 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.311224163 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.078015524 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.309691679 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.309029823 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.312040778 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308978047 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.359080223 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.312152425 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.305281562 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.309986248 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.420699507 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.311708077 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.310780915 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.313738153 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.298606966 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.312959093 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.31004777 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.312858933 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.310488066 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.313276082 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.329912807 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.314907522 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.312067943 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.312713864 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.314633506 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.356408361 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.311542564 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.3118089 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.311221199 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.363044506 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.320681635 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.313425994 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.311335269 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.316426854 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311878488 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.45961926 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355471944 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.316658982 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353501846 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.313184412 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.313900511 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.316214427 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.312499688 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399861713 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.312831464 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.356976417 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.312176062 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.488625424 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.332464005 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.315617541 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.309545839 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.309981491 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.313995386 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.306211392 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.314387396 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.313637889 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.310101106 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.314489862 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.315007526 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.312441875 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.465592041 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.418467507 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.312234214 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.3213947 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.314620937 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.313590547 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.360937771 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.313887354 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.313089506 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361841034 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.423232997 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.362329555 seconds)
  done (took 135.200067948 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.322452377 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.322978935 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.312912565 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.336609675 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.310351494 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.309940859 seconds)
  done (took 9.110944577 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.310491142 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.316919654 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.314564355 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.315529343 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.315577027 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.321698197 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.321132984 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.31321201 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.31823196 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.319891858 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.320536633 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.323039711 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.327936568 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.316790492 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.322211792 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.319848081 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.322058981 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.315934098 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.317546744 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316950041 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.310931901 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.316657107 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.319753511 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.315243711 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.323553074 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.320143301 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.333271062 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.319687856 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.317952677 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.320107852 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.319797841 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.323940827 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.314137692 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.317089303 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.326433867 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.315438837 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.319796594 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.323750887 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.316598257 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.322230386 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.325896008 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.318060176 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.322302199 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.324535646 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.314258065 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.317536886 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.328776357 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.33401776 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.323106898 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.324491973 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.325562105 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.318547262 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.322659367 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.3275079 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.315823224 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316931736 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.330076429 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.324685972 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.319765977 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.31698318 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.320630811 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.324981436 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.316032231 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.326649997 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.319750418 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.326706793 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.315436257 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.322338817 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.321648849 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.320104859 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.328046034 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.319691346 seconds)
  done (took 97.279802395 seconds)
done (took 360.013028398 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.588944254 seconds)
  done (took 3.788655444 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.366524174 seconds)
  done (took 3.568500833 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.332161751 seconds)
  done (took 22.537607057 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.317283209 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.380684514 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.341968167 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.319530097 seconds)
  done (took 10.560022443 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.584136721 seconds)
  done (took 3.784818813 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.328075235 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.323370554 seconds)
  done (took 5.85476617 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.487049341 seconds)
  done (took 3.689306548 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.521408205 seconds)
  done (took 3.726379591 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.33148603 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.327928263 seconds)
  done (took 5.869393655 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.294891566 seconds)
  done (took 3.496877617 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.790347459 seconds)
  done (took 20.993329387 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.322725497 seconds)
  done (took 3.526092287 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.368044969 seconds)
  done (took 3.569894884 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.782958678 seconds)
  done (took 5.984637844 seconds)
done (took 102.151271075 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.310494707 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.316195206 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.318498201 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.314000024 seconds)
  done (took 10.461071695 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.376028301 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.377100411 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.381984768 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.377620132 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.376292035 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.378145509 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.35035551 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.350253109 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.37828619 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.377108671 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.382862392 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.376579998 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.377223012 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.351997559 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.378108723 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.383763826 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.37778452 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.383647646 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.351211914 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.376598998 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.325802453 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.378478249 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.377689759 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.326695058 seconds)
  done (took 34.074124651 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.834504767 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.390138992 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.470455638 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.369806317 seconds)
  done (took 7.268620479 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.404825915 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.407885343 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.431433693 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.461140206 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.503055286 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.424071934 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.353677962 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.348078307 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.335311158 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.408948672 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.458380155 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.397710969 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.495024053 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.325998471 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.614997479 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.327158444 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.328825642 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.407326603 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.459442814 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.475602181 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.327867876 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.405523839 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.4115087 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.39652789 seconds)
  done (took 35.114542859 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.331200408 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.344226489 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.327507509 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.340487068 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.325064203 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.326296838 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.327359391 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.333134275 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.325089439 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.324279184 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.326392473 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.340164041 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.324560304 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.326388232 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.333493925 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.327441698 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.328885744 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.332950385 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.334504691 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.326784404 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.327449102 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.333048986 seconds)
  done (took 30.47199752 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.316196394 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.314642977 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.66652773 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.570908462 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.315287941 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.31641615 seconds)
  done (took 13.706245469 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.387640189 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.530228243 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.328872943 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.657948655 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.749625727 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.328078643 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.322590017 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.560484403 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.85155775 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.847532279 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.375238001 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.392776614 seconds)
  done (took 19.539482711 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.325874218 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.322377291 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.329585676 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.338130459 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.375052798 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.331699019 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.329838254 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.316894338 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.379951704 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.386679456 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.333204234 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.376097677 seconds)
  done (took 21.354050619 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413694565 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325120409 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324359445 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356862343 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32764498 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168015801 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341324048 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.015612668 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.327375582 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598886601 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326024874 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41981897 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.579141975 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325453488 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332378776 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.303134471 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559505548 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804316786 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328556386 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32792871 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363617964 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33960241 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332226325 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.530663091 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171217174 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326017802 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.588163207 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327111155 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594563478 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57410184 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574150401 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334007004 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600797908 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958025042 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424421538 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522667885 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321640522 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333668302 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.307015431 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.34704326 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342249623 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335540713 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567424616 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335715253 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328945626 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33559327 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026272545 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.335722284 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.328379469 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329708444 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56976441 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437683514 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.33440939 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329263036 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367524791 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334226208 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.332143685 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452818203 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896579273 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32912593 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3581356 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.33588851 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340220668 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341481297 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91960259 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.335661801 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.333735212 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.334469018 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32993833 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340159937 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358936731 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329609036 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.354291452 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330550513 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012023027 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343602283 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337395469 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85891119 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331405301 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.336936358 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560782724 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331220475 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330980862 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.330205389 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331073457 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00295828 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34343196 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.317318881 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379705281 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.019131677 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.528936398 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350179793 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363389662 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.553198952 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.308378429 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332655521 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.331884261 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340394452 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352857603 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.024894191 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33223869 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.335916224 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588310485 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.541698948 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341048747 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.315744489 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793664107 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332359597 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.365059871 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332742278 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53726654 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.894869879 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585268036 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340565484 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370515623 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333165019 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063478478 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337635566 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.34466553 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339976782 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60317113 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.097431788 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338334765 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401634828 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339213005 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335130703 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345514733 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340066442 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333436433 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.527420901 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346742781 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582501399 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.344282962 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334251053 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.346855539 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350194517 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.341294029 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.556031104 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33573685 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617223086 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334714355 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334178256 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335409713 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.557462123 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.335622034 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.347789625 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596412442 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345309419 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341525374 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585639122 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372209916 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445408577 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367528466 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.336300942 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.597832563 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.339545469 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.34016131 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347323996 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343252951 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337068295 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.344829779 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338301453 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900529923 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320232631 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340322308 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338531134 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.351931527 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405296388 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34365315 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.536320971 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.33872567 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339485049 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.34419961 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.336117245 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567759786 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581037092 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.348984916 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420171153 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.795536748 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89623053 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358090691 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.337992673 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.336506129 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.338823866 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339094683 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339609486 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339412118 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537624571 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586488891 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343711393 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.908564151 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348942725 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344051518 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.351744562 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584264828 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.35409422 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340141962 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.342157479 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344294231 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347398666 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.58792086 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482556288 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.353669083 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339185221 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.857865123 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346391791 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340351551 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341726224 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37132316 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349026417 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176424039 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60552828 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335022034 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589139712 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354326684 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.361908072 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.341344136 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34112357 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358408956 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.357709637 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370469553 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.541120013 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341761772 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363744646 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901453222 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050792301 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862488608 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358488754 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.348271292 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347600583 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.042701213 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341847258 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342442647 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569739553 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041154229 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341888939 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800960128 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.345424057 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.086374128 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591289817 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579245845 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352236696 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.344989119 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593419405 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560292834 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37557764 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346144381 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347809828 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.321261981 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876848281 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347276205 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425871126 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040554332 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343238022 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366425722 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.413307019 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364780351 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734345094 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343927194 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34371169 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352728047 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350331139 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186114552 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346410782 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343937976 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932129862 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351520478 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.809529292 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343481504 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.542675623 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.588110413 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.591609391 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.351089877 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.355046341 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.603692133 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588722633 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35131367 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353101197 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888580542 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.215345056 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.350682827 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345456729 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076047339 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350886455 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622176602 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.365518263 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.356818881 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351630616 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345351216 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34575449 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.344630354 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352097131 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321456418 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81522126 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.346908746 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345235063 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349664342 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352176023 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600421601 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.361274152 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.91412628 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578463665 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353380175 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379528669 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.351204491 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354779792 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.331470113 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348811468 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346861625 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396563652 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.574465332 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349645724 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.329295259 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353177293 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563388638 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347147083 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347551984 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580688127 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.346767137 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.367356608 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079860312 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384337186 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359238388 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356033898 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342561071 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386831178 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415832188 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548915346 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.594248417 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599420272 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740429226 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361246306 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356183347 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.364571445 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448123288 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349279191 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.363328816 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.128047905 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916364946 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059531483 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933914001 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600051784 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356603183 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356750185 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350246015 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486475901 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349745459 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62370671 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349757476 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.346389964 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391373833 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359826313 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366649422 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565811134 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625837597 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350454862 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361614423 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35627992 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.350325309 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598330261 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.567958026 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827156325 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893833278 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352670034 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363465579 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057018783 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626091935 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351283543 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352281086 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351430925 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.372792124 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.37535639 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.361355716 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350903895 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492451095 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59747519 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00396154 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.596984024 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.39456728 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.869743688 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352631005 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610831809 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117976659 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.553038425 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925306497 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.042407551 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62251996 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422372577 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553787324 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.353348022 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489757769 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.357814047 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353200222 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353625581 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354234579 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.351384307 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599021035 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938613672 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622947799 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.358034202 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.356911534 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383249316 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.555159367 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.576390129 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038769386 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580061881 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60425527 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367326394 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35445493 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931911419 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607520452 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361013917 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.359307266 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567995828 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355867717 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381728038 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.871840936 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.353837131 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892680631 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.248446136 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377256307 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355055261 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.043728705 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94176543 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.361083139 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83400928 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362518285 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369318849 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634436715 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.361650199 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368707329 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645377848 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.360216327 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367317046 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564778102 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.924438808 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11266809 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.377772309 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379217358 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.364655263 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358149744 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35812559 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362918017 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367325131 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.769157263 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358554157 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358176699 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371104858 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.35799446 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364078375 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.363604401 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358556363 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.365254573 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.354762428 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.341537968 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379605793 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484009408 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897756253 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359380787 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.03837915 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.684255381 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612035325 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360359658 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.341785654 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.364388498 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360447906 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360429755 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360594716 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352674607 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897543206 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.361299741 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.613197393 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370778742 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.569202144 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569471443 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359312764 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570518784 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367580577 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388657852 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.335822734 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36016006 seconds)
  done (took 963.121629566 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.36219027 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.386627383 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.392956664 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.385697685 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.38187305 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.435155378 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.411101515 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.474459772 seconds)
  done (took 20.470494646 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.353761477 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.369036311 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.369471118 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.368442966 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.364581234 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.82701664 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.369046858 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.363445258 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.3758422 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.368366898 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.368705419 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.025932968 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.389028411 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.367241707 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.353664154 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.371637046 seconds)
  done (took 32.251952545 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.462038242 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.538921441 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.267311106 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.413233047 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.402619165 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.376132786 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.591296096 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.374725772 seconds)
  done (took 26.668120148 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.369803888 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.36780513 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.369201186 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.369095828 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.369542266 seconds)
  done (took 8.086707526 seconds)
done (took 1223.793138227 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.368047523 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.368202869 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.367012503 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.368435428 seconds)
  done (took 6.713053401 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.339557232 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.341025503 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.343757982 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.35620731 seconds)
  done (took 9.622353018 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.039631271 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.980449837 seconds)
  done (took 5.26123247 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.847305561 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.849450135 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.848429239 seconds)
  done (took 6.786521417 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.645395419 seconds)
  done (took 2.887529185 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.272722582 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.351718707 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.038945339 seconds)
  done (took 7.907965027 seconds)
done (took 40.420915615 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.357036232 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.617236091 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.513694062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.370373233 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.518091016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.511780259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.161864443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.35804612 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.369399183 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.367272503 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.37197364 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.517888703 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.081166358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.603852879 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.082087123 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.611721491 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.518306106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.361908501 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.366715163 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.35910847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.164613861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.361831311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.367683083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.36325321 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.518816586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.502441219 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.362811148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.604116555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.35865866 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.365910309 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.504019651 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.367500039 seconds)
  done (took 82.1056275 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.368702605 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.360008335 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.372528821 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.36495751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.358683878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.370859125 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.360837419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.359026491 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.3592905 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.359820445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.364824488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.361661721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.359427302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.36005488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.379121671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.360042017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.376726314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.37531921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.377224414 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.360539108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.362792934 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.360663964 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.37465034 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.360195763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.380599821 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.362739838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.376359189 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.361556089 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.361484013 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.36042531 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.360948437 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.382931898 seconds)
  done (took 76.961401076 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.363119968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.362858384 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.360634121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.374454783 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.362387747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.383371494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.362464097 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.361929492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.368091957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.366693918 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.363320175 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.374009665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.363230866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.361358116 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.378473441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.360967198 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.373247627 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.372017454 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.36320478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.363108004 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.382065512 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.362183319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.366287456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.365977294 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.373634652 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.364034181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.361829628 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.362287209 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.375184826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.367386463 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.369831812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.367343757 seconds)
  done (took 77.004680932 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.601636123 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.376992261 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.380170743 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.373002493 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.380991003 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.37753736 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.372853487 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.610179116 seconds)
  done (took 14.72138492 seconds)
done (took 252.037738887 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.385272082 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.859520415 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.402761854 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.369613072 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.389958108 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.397875289 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.589660796 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.403139406 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.592949771 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.394605647 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.392070503 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.375522624 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.155806542 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.525252779 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.231109053 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.34450641 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.242305882 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.365973713 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.92646779 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.656339443 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.402832695 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.370190488 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.21634637 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.245744344 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.355472036 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.45066978 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.468006757 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.598568915 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.536406035 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.454283452 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.875566173 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.37255738 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.373762839 seconds)
  done (took 63.970468143 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.373351536 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.379159839 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.383497221 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.383073475 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.380362803 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.383780104 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.372197824 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.381783454 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.381789833 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.381808304 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.381711522 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.379216952 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.38249755 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.380878244 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.378935566 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.360184343 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.372194627 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.378130263 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.371682882 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.361516527 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.377456972 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.381682058 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.380924134 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.381698448 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.382413835 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.382418782 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.378950622 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.380449265 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.379585627 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.379550452 seconds)
  done (took 42.606901417 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.382038082 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.952004826 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.088089432 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.386720288 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.374293058 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.378229956 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.656096562 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.391005727 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.379122211 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.377688992 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.853279823 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.391220566 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.407850077 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.098282195 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.383881879 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.384837324 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.383405483 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.376000598 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.95257041 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.389946464 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.654166791 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.39128852 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.656100014 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.384920105 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.380496018 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377760648 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.380897737 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.19291209 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.401377776 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.84951449 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.130115673 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.654801272 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.136301576 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.152348654 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.135528935 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.392152857 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.385761589 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.855682621 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.385800755 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.37719226 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.65407343 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.383168216 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.096900409 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.047400566 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.394581395 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.387614936 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.241430187 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.87898124 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.620349126 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.388945037 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.131983523 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.389024342 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.388932783 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.380188596 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.613973883 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.387099442 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.377810224 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.225223532 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.403904509 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.655514052 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.393855525 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.378746898 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.950188929 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.385776376 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.944466335 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.387101672 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.386847234 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.380552366 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.102889899 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.382506623 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.055851613 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.395752857 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.387991095 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.852430953 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.954332234 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.271688277 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.381569071 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.956514146 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.150964751 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.673801618 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.388856967 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.17634855 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.676043429 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.390678546 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.391140166 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.39122599 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.388959392 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.451859788 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.655020424 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.006119799 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.053506813 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.220217015 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.677229437 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.392583078 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.381233811 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.21153376 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.404239816 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.388472983 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.100769527 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.059086705 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.398330107 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.388209319 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.051427158 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.399995748 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.662090966 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.392646572 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.145293496 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.383514618 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.453251813 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.389007132 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.38873476 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.385969324 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.661295741 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.391796644 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.390659799 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.046059876 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.88730054 seconds)
  done (took 192.959557299 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.377365846 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.396495237 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.376349514 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.378745686 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.377422401 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.385532889 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.377561937 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.377209501 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.380935105 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.377063821 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.378453409 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.386045516 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.384787575 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.37816086 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.377661612 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.379417189 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.377625317 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.394332706 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.377694602 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.378539501 seconds)
  done (took 44.876277472 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.392496507 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.928107164 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.903064176 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.394217671 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.38860226 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.383233903 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.437541584 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.389567776 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.389850484 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.675330057 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.5513991 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.401899715 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.388705189 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.390147363 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.899558273 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.378377474 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.675792497 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.929057899 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.392886518 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.930405306 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.371911628 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.393718035 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.382764192 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.930300498 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.68282379 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.663899782 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.440318835 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.930530885 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.391446303 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.389530102 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.930388798 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.395253769 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.386376788 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.925410777 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.400810496 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.408743596 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.390926079 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.44126261 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.445487259 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.68580876 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.946419425 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.676218676 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.412926603 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.564217226 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.39882673 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.374628335 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.946891643 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.403505455 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.373323458 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.393838397 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.400265205 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.911167879 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.393963172 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.912062994 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.398797404 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.395709117 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.933543417 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.913441854 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.915685213 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.553461463 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.392492601 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.667137175 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.39268692 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.943132671 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.396727861 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.396405123 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.397350136 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.557766872 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.945293036 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.671762318 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.688955243 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.689490319 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.403052325 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.451022552 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.400610707 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.685225303 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.454300784 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.810223285 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.69384758 seconds)
  done (took 125.728121595 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.641334908 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.505778835 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.753236961 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.970699818 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.883192862 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.523793168 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.502696451 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.627009843 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.397077976 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.484948442 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.022164927 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.499536085 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.115102126 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.481030235 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.491761631 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.51645015 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.778552717 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.384464888 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.045436483 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.004152567 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.39686867 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.496526802 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.899083677 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.570162264 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.386147363 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.946185204 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.322979543 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.89812335 seconds)
  done (took 52.810169002 seconds)
done (took 524.200293742 seconds)
SAVING RESULT...
DONE!
