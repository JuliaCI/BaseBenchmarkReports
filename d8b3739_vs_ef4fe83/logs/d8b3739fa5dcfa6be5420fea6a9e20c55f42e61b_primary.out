cset: moving following pidspec: 17715
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.235774441 seconds)
loading group "string"... done (took 0.588087114 seconds)
loading group "linalg"... done (took 8.192743715 seconds)
loading group "parallel"... done (took 0.174070488 seconds)
loading group "find"... done (took 1.279194024 seconds)
loading group "tuple"... done (took 2.041614449 seconds)
loading group "dates"... done (took 1.333617347 seconds)
loading group "micro"... done (took 0.203096041 seconds)
loading group "io"... done (took 0.938257819 seconds)
loading group "scalar"... done (took 41.013763463 seconds)
loading group "sparse"... done (took 12.898212068 seconds)
loading group "broadcast"... done (took 1.021216798 seconds)
loading group "union"... done (took 14.815853574 seconds)
loading group "simd"... done (took 5.198783788 seconds)
loading group "random"... done (took 10.036865076 seconds)
loading group "problem"... done (took 1.760031047 seconds)
loading group "array"... done (took 23.509119114 seconds)
loading group "misc"... done (took 1.751883811 seconds)
loading group "sort"... done (took 3.735532541 seconds)
loading group "collection"... done (took 19.700617429 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.544028151 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126168555 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140393819 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123404087 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153638344 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119733923 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128263652 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086464907 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.848046408 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146850989 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114110701 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415500717 seconds)
done (took 5.320220205 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172356713 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087344053 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079399313 seconds)
  done (took 1.203201566 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066307329 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127143453 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067318264 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067639255 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068030868 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068036121 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068336353 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068300103 seconds)
  done (took 1.574389389 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072866236 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068927355 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068064747 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069582215 seconds)
  done (took 1.31979948 seconds)
done (took 5.382234431 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.802426228 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214394392 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189006524 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41522235 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13793501 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182536129 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637767579 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335819242 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193730976 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097008385 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116113515 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395677538 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127928379 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645776732 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080711569 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099356337 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143072919 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431756438 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07134951 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086989426 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095133121 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131224916 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083141478 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078824054 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.155203201 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070821196 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143251687 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086497448 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06949028 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.257599309 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177164771 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658107412 seconds)
  done (took 10.488346396 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10129554 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100376684 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070985712 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128012316 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101230722 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072495325 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078107078 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069650863 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093529804 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132447084 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095263462 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111716979 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068440103 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071919692 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085219018 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201373231 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083152508 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084617197 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070546129 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081040299 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110814092 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081149877 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082779935 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082731969 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.135502898 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170732 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100026333 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100870624 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067061684 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084746451 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115774111 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130231743 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069505411 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068127448 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128129699 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096990181 seconds)
  done (took 4.605983559 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.014553119 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1505378 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.0901305 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13544396 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066819414 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113114948 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06778978 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086330102 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244019329 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.387400575 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.636279547 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.15106847 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120274509 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107959574 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073541425 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071288226 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070139837 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.272832638 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100825178 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109979028 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090192127 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072591252 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071613167 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06634013 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073721576 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068091236 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070335093 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08927802 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077575074 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.33196485 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127656523 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069884826 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.955224405 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.17063226 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070880745 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108215609 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168986137 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093794782 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140148667 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06836744 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092877856 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065167409 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.299034959 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067642564 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073855079 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068932881 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087235042 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111679666 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12326556 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067021779 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068393013 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171473317 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066802481 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083089334 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.210812526 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152952535 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067060654 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295989718 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094801889 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073845717 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066863954 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.194492059 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119282774 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069297717 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069430665 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071108729 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066632604 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07317293 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067382072 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.394610849 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068140469 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076522711 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.913449429 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073707679 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073165242 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081769875 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081792158 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093942938 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066336729 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069042767 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076026395 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068763371 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068040025 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06914106 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095083744 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.394180651 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067927803 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072395232 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066595495 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094602426 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100909793 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.0695399 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06753357 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104375317 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070977593 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065883005 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06761941 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117095946 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070350562 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112837326 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066458721 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066266424 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.075561007 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096182671 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068484537 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100292892 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07615164 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069450011 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.448579648 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064684972 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07123189 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065070797 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068470676 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067060425 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078894806 seconds)
  done (took 21.798638241 seconds)
done (took 38.947772512 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244208864 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086015857 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086090586 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085292333 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085042821 seconds)
  done (took 1.72219168 seconds)
done (took 2.868485344 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125529006 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099953341 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065929967 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100268027 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066058042 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103399126 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106262205 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08640862 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102706705 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06643426 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100060615 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0663645 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066151873 seconds)
  done (took 2.288597848 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082301546 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083888231 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070682034 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086752178 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064125221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083953899 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082738789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090512538 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082890855 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07391427 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064690487 seconds)
  done (took 1.976843603 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081427183 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083580311 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070862181 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082931062 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063730907 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082701739 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082515496 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086237112 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082799698 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075391075 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06425782 seconds)
  done (took 1.962139029 seconds)
done (took 7.331450223 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075256665 seconds)
  done (took 1.170373523 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.532079103 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.565963425 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078306421 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.099858399 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193727413 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.110984483 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.23646321 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085245492 seconds)
  done (took 8.16742748 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09525665 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.081988311 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071748133 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072049255 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072096685 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071741084 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072513731 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072598209 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070897664 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07109744 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071212791 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073086944 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070999341 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070864146 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071289461 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071111341 seconds)
  done (took 2.364413971 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097721146 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097811172 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075770513 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077638264 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07462187 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074058481 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076704137 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07610952 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073630761 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074604453 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077807645 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075608991 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075414351 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066466738 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076019459 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078668642 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073115775 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076741151 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077347492 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077907821 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077820112 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065872732 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075903646 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076706762 seconds)
  done (took 3.057578106 seconds)
done (took 15.865582125 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105215313 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069387607 seconds)
  done (took 1.27569957 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.07801715 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082194288 seconds)
  done (took 1.273113147 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077812201 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063292619 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086133379 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075827012 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065016493 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064684004 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084613519 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065128616 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065311602 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065265243 seconds)
  done (took 1.827773788 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065042336 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072331193 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068978271 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078596182 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070327514 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06494136 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070216891 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066975541 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07561843 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064587628 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06975964 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084233886 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068510879 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084553192 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068521691 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070053463 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071854283 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068666583 seconds)
  done (took 2.399034036 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063331649 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063997238 seconds)
  done (took 1.247355926 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066216032 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063249971 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066260219 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066149343 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064135961 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063447359 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06589046 seconds)
  done (took 1.570611241 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404242806 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125751622 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340511325 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071629983 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083635884 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263326282 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066373295 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071532269 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071631465 seconds)
  done (took 2.65853412 seconds)
done (took 13.371530681 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080656936 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087140845 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099484278 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.423867637 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094871484 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069771463 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114980278 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181520296 seconds)
done (took 2.281295897 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.20717111 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.815709585 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.493421354 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.21147715 seconds)
  done (took 2.640606956 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344248288 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083318031 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079029441 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.18425762 seconds)
  done (took 1.822654519 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067347998 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070104489 seconds)
  done (took 1.264097881 seconds)
done (took 7.062540941 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064662315 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064163793 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065218565 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064409294 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064559278 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066198009 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066310026 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066344967 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091308126 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066174618 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066015821 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066348987 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06627743 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066569916 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066572827 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06620597 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066369171 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06698423 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067178735 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066610424 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066490053 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066088414 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066471579 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066491404 seconds)
  done (took 2.773771049 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08118037 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067014504 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069677407 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070423149 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071173384 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07035417 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070639184 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069069566 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070573816 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068623622 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070830739 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071155995 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06809925 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070714601 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068398311 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070999234 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070307222 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068783976 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068205274 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070868566 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070648566 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069022382 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070612544 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070234523 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070489231 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07086517 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068422705 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068766139 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07031263 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070816299 seconds)
  done (took 3.248232053 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067810075 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061871352 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063534998 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072363927 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062330751 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06362277 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062480469 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063131719 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063763022 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06262038 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063476237 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062640106 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062423479 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063369858 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063091351 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067361524 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080988963 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062977444 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062576265 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063182433 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067299156 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062393471 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06275131 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065338933 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062335604 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062132887 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062603282 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062618978 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063282282 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062609422 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06669045 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067084372 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062868566 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071496821 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066866049 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062740704 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067371198 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062219316 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063027993 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062320557 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062088974 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062919845 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062928217 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071883271 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063045744 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063740129 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063434555 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064264116 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063330064 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.0648833 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062302491 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062792811 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065170382 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064214114 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067999577 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062409575 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063283293 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062174694 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063546183 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063009876 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062574539 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062366012 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066536449 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063623061 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080863551 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072261812 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062952445 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064480943 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063528433 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066345162 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064298276 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079041921 seconds)
  done (took 5.805820155 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084413824 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087378836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067538779 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067751492 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063434753 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063415123 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072020209 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063786626 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068487766 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083058797 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06359218 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068173383 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068355677 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068155806 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063904248 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068116281 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072305964 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063706354 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06351127 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067508952 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063420531 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07156773 seconds)
  done (took 2.674802941 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146571624 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069875796 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10748551 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075031188 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072919823 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074897035 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069566045 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070660534 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069935472 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07016247 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070244763 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069614394 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072362418 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070026854 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070039721 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069686211 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069320202 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069855054 seconds)
  done (took 2.531939456 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077966718 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067590206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08679939 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067938349 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068628479 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068906269 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073281844 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073754104 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069119735 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068899325 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074477755 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069031942 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068766443 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068979194 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068504382 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068836646 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068820996 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06870478 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074061524 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073109442 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073081746 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083118226 seconds)
  done (took 2.726427041 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078186809 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066599202 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083838974 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069848913 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063455508 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063565163 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069343757 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068356174 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069518319 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067866412 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068637047 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063582465 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070533694 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068386697 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071274034 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068320667 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06770996 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068788248 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06762036 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063888824 seconds)
  done (took 2.526372426 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082885526 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065828846 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065134339 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07237156 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066353919 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066571511 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073619793 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067208162 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066580714 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087967495 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067548226 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06757685 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073306922 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071125803 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066950518 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073226084 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076482078 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073404695 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066798449 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066853185 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088031347 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066936174 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073281864 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066751997 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066827734 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066875021 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066634795 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070675259 seconds)
  done (took 3.131252014 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064975253 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064502271 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066200755 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065971167 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066823728 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06639902 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066745755 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066859835 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06611626 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066970811 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066180077 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066074195 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066192445 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065948711 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066680005 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066247658 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066250245 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066351127 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066612605 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066761915 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066497139 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066024586 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066032678 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066519013 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066419691 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065984601 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066559033 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066694088 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066281618 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066506564 seconds)
  done (took 3.140383693 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075189576 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074079077 seconds)
  done (took 1.301608241 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063020709 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078879903 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062493793 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074166557 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072036858 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066922386 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073023049 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072492116 seconds)
  done (took 1.711084065 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085257555 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076578794 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066451298 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07838126 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076653769 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086691214 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128837686 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065604113 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076515522 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066579355 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084509425 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067826083 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076680677 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071145203 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076246727 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079324809 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063578126 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070458459 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067075765 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064432207 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066120755 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079533921 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075182682 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063964763 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071056614 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094041754 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081960132 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065059992 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072901663 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078683355 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07579514 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062214078 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065518066 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065499411 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063471417 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077065326 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084692128 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072543623 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078249363 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066341753 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074087365 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063261471 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073783804 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076506881 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081502991 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065468745 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065493016 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063442008 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065946886 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071192926 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063102579 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070283664 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063183833 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077394219 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073164687 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080506763 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063928421 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070845944 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07201892 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072600031 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077080128 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071502932 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074784689 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064717604 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081437597 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075397258 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077519907 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062775663 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062295921 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06348246 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078758908 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093813889 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074700265 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065687668 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065842789 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063240124 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072256774 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065313506 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074679679 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076740558 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064682053 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06957039 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077064049 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069843074 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071506592 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071470266 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063475047 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068690031 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065706014 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085668193 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064023007 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063058 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066151803 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080581569 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074697586 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064727274 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066446315 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076946333 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062551552 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064898015 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065594844 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071124443 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078254092 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068951506 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068357718 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07780244 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073057196 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069780741 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070844601 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061465347 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065051325 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066494941 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075756344 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061236511 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07069624 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067924743 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064587557 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075722997 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062343228 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06357256 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076177458 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075352644 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062424034 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061131751 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070907975 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063747991 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066184346 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077742778 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063073735 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062390044 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062764402 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072110388 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064081109 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071902179 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067836346 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071516952 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061490233 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.188143981 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068901981 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078389477 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069829492 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072789247 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.0763531 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072310783 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065428444 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078359174 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073130833 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068176173 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075210496 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069589606 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063015595 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067738984 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071936714 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064037139 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072717921 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067664072 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071812083 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066072668 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063959002 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071839633 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065376893 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067798894 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070405479 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064297347 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080794435 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072204194 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063071389 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062637366 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072357425 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066780518 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064536522 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067472684 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072280348 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065691409 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063178211 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064652081 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071280156 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073221073 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068229561 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066111302 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074862776 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083486982 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065155201 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072572549 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065036681 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066671459 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066052935 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081120056 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077100493 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069815071 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07241194 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062787428 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074963207 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077694934 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067942206 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064191312 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068132683 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069518393 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077708477 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069471082 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065838182 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06380357 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071315541 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068496239 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072372422 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064906691 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067619352 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070475507 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063580098 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071393726 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065902304 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080127718 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072913184 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063366385 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068031588 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063832047 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076139827 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063287623 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066657637 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068229894 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06599491 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064263881 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072291402 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062594537 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077909082 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077958669 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070887318 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067141399 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064475848 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07742185 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070535679 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073204674 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072342958 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075185873 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080991846 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068094493 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07210498 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080602436 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065145282 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062789585 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077233245 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063640053 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064015677 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064719338 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063873534 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072896145 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07278538 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075455129 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062094982 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072658628 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06319552 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067063267 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062685592 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073278761 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071997104 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068676347 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076792574 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064727693 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064595441 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072197097 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063718175 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064844139 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065022966 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072029353 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064881754 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070387523 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066641866 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070061147 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066707469 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062496792 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070273057 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064400368 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070087245 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073293206 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064424326 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070177463 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070529328 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064011097 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070023813 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068102359 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.197220914 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074104496 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073472292 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072028455 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073366036 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064529912 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07870275 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065857745 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078888365 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070672828 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062974594 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07121103 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072483444 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070821752 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066170992 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066148802 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070814217 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064651962 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072557395 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077754159 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066646639 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081619629 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076739025 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071330027 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07224421 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071011652 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071134957 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067818801 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06950941 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065829481 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070738979 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065664281 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07369535 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072256601 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071298619 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072081579 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066011958 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071026534 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066333476 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062987305 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067808413 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068232875 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064806701 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078376432 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065532411 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068055627 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064457686 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066120632 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06505826 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062617038 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073058065 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073600663 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066347726 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07706783 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068602043 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072396888 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081676143 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063540783 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064358892 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063772452 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067505043 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078599539 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065757274 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079886692 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071165372 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068396528 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062931362 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06606797 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06425356 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062834653 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063477302 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073905158 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068240102 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064484813 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065489342 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072118706 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066097421 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078496 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064937453 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069826864 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065838636 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062801761 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068023147 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067734383 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072691401 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065857054 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.0667509 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062973435 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064979576 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069525899 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071803788 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064839336 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071505635 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077553948 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065233189 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072181863 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067584197 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063218827 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072359194 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065044986 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065045095 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067544236 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072938579 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072633052 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066069309 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080134685 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067990079 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071870366 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065611967 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063898382 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065122848 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06530141 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064959155 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068168446 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066455084 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078123777 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062878194 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071128626 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069650674 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068234145 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075218217 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065403998 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070223745 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070447877 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066001286 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071114364 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077359805 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067568671 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071585616 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064325578 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069513836 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073946799 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066806381 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075351419 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070261582 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064435457 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070065632 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065422894 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063777321 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063759513 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063529509 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074850328 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064943246 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066859424 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066254385 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.195865969 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069492961 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069079282 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07991566 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073365212 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073710641 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063701886 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06350561 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066543551 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067192256 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07188755 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072869816 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075483781 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072120762 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068502723 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064646885 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080362523 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074885077 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073115421 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066976735 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073426028 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065680608 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072692904 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070382733 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071126115 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066273717 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073266773 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071661878 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068647519 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076594755 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073351801 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066401102 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071947588 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071470877 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070710409 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063309898 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065716422 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071707462 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074439944 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07289441 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065258187 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081409691 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06747596 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071066353 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067826219 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064655672 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07407636 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064191881 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071875521 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066566409 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066236492 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064267598 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068170076 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066957336 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072273981 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068063032 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06412803 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08167832 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080519351 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072464099 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065822275 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064894946 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064282055 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063931199 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067939828 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066293978 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071747463 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080897295 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067997246 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067812224 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064558976 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065946805 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073342454 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073395437 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063225049 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064112112 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067973237 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071718197 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076965244 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064704416 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065169472 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073184568 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072516991 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063718332 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068059073 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062567703 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073035597 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082410262 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065765417 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071719956 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075499385 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07889334 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066065684 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063892617 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066279068 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071625713 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070576928 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066132654 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066500846 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085464827 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073206363 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067782502 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064566669 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072576812 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067931949 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079531496 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066537224 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066041736 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076882257 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072187251 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07272607 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075895225 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076728113 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071726071 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071829503 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06490617 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069824412 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063751007 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067065479 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065417832 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06514084 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068942748 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071676831 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069080627 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080690238 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078587467 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066684465 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061490451 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067202622 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067343806 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063050626 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065268635 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063311033 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063282744 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062861712 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063375904 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070616088 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073085491 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06861726 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065114197 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064316692 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061689378 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073852634 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071446704 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070306892 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061869104 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.198735886 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065909471 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075478083 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069172885 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068344712 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073259242 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072357214 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072019097 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064544941 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078084092 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065114294 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072449132 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068454407 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065657966 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06667847 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073600009 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069747186 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066927007 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072866836 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072877708 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067077068 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063711057 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063396774 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075395776 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063787709 seconds)
  done (took 43.291834783 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100075367 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064555815 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063750223 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064049283 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073616407 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065438181 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064287091 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065607165 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065564665 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067464648 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064178525 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064955705 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071650064 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080141837 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073980869 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068603251 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063883868 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065020161 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064237194 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065183461 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072670843 seconds)
  done (took 2.695474861 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069372197 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07806797 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07688799 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081312876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072869712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069234568 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077674952 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069279934 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094623798 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074339862 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07728801 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06884695 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074327537 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074162508 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074206282 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069146663 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077118186 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073058248 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068799113 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076803268 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069342585 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076852665 seconds)
  done (took 2.878833676 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064269353 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063161699 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071306521 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062494371 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064071047 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062623323 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067661897 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063178418 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067739356 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067847752 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067759292 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067220103 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072204043 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063160923 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068015056 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06287983 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109043516 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068324607 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065153955 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065417409 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063307977 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071806975 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063245014 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063586867 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067077781 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067456927 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065102166 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063144156 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064592887 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06666821 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064627942 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062822149 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071530819 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070649875 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066782135 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066838303 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06459871 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064607788 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063976824 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063234907 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073276933 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063594458 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065355014 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071406011 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063424201 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062776868 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071312393 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064821999 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062604911 seconds)
  done (took 4.53307579 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074385811 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111763352 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069596545 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092316195 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07808228 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070673683 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069469595 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093841371 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065134402 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065848245 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079350749 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079813434 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067310298 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06894912 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072002311 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067027217 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067839839 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066187558 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070559908 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066845352 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07033927 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071468952 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078026255 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079218309 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071735123 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065929293 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066344263 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068382173 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078145262 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070985426 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06861471 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068771081 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078192987 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071762075 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066246277 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066170072 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079216453 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066711248 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06621427 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064705464 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066341625 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068234941 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.0710831 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079817383 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066942783 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071675015 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066571249 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064297458 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078688861 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066814618 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071308644 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079529176 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067660838 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067058131 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068391419 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078278034 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066709346 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065316099 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066925116 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078078677 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065066769 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068201704 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079472391 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066271873 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070343863 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079234134 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07165293 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067636601 seconds)
  done (took 6.279429242 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071795679 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094290309 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0810013 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080659373 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074925937 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075342072 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074955203 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075015986 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074611974 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078794582 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074744348 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116883239 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071046501 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076875456 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075101635 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07480232 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074837895 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074774005 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074759656 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074670509 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075017802 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08091618 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074867579 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080874817 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077979441 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07052301 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07440698 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074901785 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081255817 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074914616 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077877341 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074879047 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074784227 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081526921 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.0782049 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075346324 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064296916 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074395452 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074795208 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074548738 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070900289 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081490239 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074318102 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07059063 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075000251 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074520534 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081436985 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078014276 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077015112 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078430524 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074554323 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081019957 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074577902 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074733878 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08108322 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083855593 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080831134 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081308468 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074338231 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080944787 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08064038 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083590261 seconds)
  done (took 6.074973523 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077173658 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071546061 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083061952 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063066978 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063068549 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074022293 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063318712 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065681719 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071663554 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071868019 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073791508 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073764073 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076217323 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074290512 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073496638 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076513671 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073983647 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073806762 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071733171 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073981288 seconds)
  done (took 2.722524346 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075656322 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082514933 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068691894 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073198967 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068655297 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073903797 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068050527 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069253099 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06927555 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069122182 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074859365 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074763605 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069902535 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073385825 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074663403 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073585257 seconds)
  done (took 2.421731223 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083161025 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071783727 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07832172 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064967966 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068791962 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06407658 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064863103 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062955687 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063958951 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077470254 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064651512 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07594744 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064906119 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063635696 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063941746 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070061432 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063778749 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064908715 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064393227 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078482545 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071939383 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065555518 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068386759 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065011353 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069961707 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072252699 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066269705 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068078377 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064836774 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06490353 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071116043 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071814453 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06450718 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065071338 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063660198 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064724994 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064541504 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064848697 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088297965 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064646304 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062687298 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070136217 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064992273 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065444421 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063591415 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065276545 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06377627 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070781944 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064641191 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070085697 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06450041 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067603861 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065053931 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072062268 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067542769 seconds)
  done (took 4.99647824 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078437739 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068967302 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062981464 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062755489 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068724254 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069851181 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068685353 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068844803 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069452503 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063224668 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069767061 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06850787 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069528044 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069503324 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070209384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068952749 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063217863 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068925426 seconds)
  done (took 2.50811885 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07203475 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067745131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073610249 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068086544 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067524182 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067646945 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063517142 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063302842 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06322613 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068329032 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068029952 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067880618 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063386633 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067691713 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06795497 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067989949 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067738406 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06316082 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067901213 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063557708 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067526425 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063401366 seconds)
  done (took 2.738423186 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094680452 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08501559 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142399498 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.0807638 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08738424 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073232532 seconds)
  done (took 1.832536719 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091608458 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100692871 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067970451 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068280312 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074020525 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071302108 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071700483 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072025358 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076403963 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077070527 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072002351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077117046 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076524473 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07882529 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074334741 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076965738 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071922821 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072479908 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06829182 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081918478 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072137297 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076751034 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07256452 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071653415 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071915207 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078367203 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076913649 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076925771 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071886032 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076725291 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074323348 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07283909 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076854001 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077027939 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068689427 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076462776 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071814179 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081523323 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074264649 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078328996 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068411983 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074358411 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076449362 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075972079 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076615358 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071958411 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076293489 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071648411 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072030224 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083191234 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074649764 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078385975 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074590964 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076667549 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07664541 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082972375 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076976124 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078107521 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074356012 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07667647 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078291034 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074348676 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077994176 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076873534 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074100349 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077962305 seconds)
  done (took 6.266429463 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102607078 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067713558 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072358129 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076775633 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078447309 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072380846 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072363092 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072172876 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072883028 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069383035 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107507832 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072675558 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078740031 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07928673 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072618555 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072249881 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072437129 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078689013 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069437413 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083661789 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07237784 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078310673 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078508137 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078281291 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077260234 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074323115 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072093903 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072077896 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072179188 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072417362 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076437252 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072217976 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078399785 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06894414 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078694701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072358593 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07256499 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076584218 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072053926 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074762623 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078646513 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082542735 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072118295 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072197874 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077450455 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07198345 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072089032 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068945805 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071972055 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068984404 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076889571 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077014054 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076902559 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07792736 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071993442 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071771171 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071838263 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072073805 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07219714 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074362284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080185677 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072112474 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083680945 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072714649 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071961931 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07835326 seconds)
  done (took 6.263690334 seconds)
done (took 128.20432526 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208444384 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184979888 seconds)
  done (took 1.650442653 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073132856 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106021799 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084874624 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136422742 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070947322 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106789529 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1036159 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082685078 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071683946 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073455067 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072769335 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07588273 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138515804 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070910376 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07219583 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075544317 seconds)
  done (took 2.68973324 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103347046 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170850798 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110353466 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071220557 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106144114 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078942861 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071152319 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084054772 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078013199 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072734209 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079026808 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080106485 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072241668 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077347324 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077425974 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079409696 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072364523 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078850368 seconds)
  done (took 2.846753878 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102008281 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09667942 seconds)
  done (took 1.486092205 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.174561915 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.132779732 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202349684 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344510992 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158174758 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.421980477 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.141501451 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138734066 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114110736 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134683144 seconds)
  done (took 3.244070195 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103630288 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.16955725 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297020428 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123347331 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077850638 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092995138 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125092212 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083836819 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085096091 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08539205 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085212015 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080828695 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105264119 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078393036 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077253329 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079994007 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108230594 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076438402 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07769323 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080735585 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108118558 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071732409 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078321558 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076637493 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082996269 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082977471 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072500567 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070909973 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079866218 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077116747 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081368939 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09009685 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082703106 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107661746 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075775639 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108654087 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080272293 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078487035 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077231172 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078423476 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082239501 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08181422 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079955138 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080082776 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072415154 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08025426 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072573559 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071086328 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082055612 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072596477 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081889412 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081205847 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107089175 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070564432 seconds)
  done (took 6.175617658 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107046472 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10557991 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070166642 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11294999 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106032447 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072190574 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107663226 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100771437 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110349279 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072891344 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070657545 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072807767 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081363101 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084728011 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116842613 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107029102 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072287949 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070473643 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110305715 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109997187 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07177169 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103965124 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099743108 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109941492 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070382577 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072157145 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07095633 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072198981 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078010608 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079293646 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071744301 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08098014 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090013395 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077918102 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070237417 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071013803 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07060113 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080050993 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080632683 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080185873 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078274988 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069582203 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070049628 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071766648 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071120744 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07013425 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079113488 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080833791 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07892573 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070556989 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071862012 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.07023787 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071125647 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080258642 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077978409 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081475409 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080672551 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069992683 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069980545 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073604205 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081443435 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080776343 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080325737 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07092747 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080772699 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070962455 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082668247 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085348412 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07067122 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07181849 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070483508 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070741761 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0713264 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078195539 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078028896 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072005093 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070386934 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070402292 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080288499 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078567441 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070405699 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077245795 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069392711 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070159852 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071617118 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071738955 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077609333 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08026802 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071854223 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070232294 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070286747 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070513167 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069442096 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078091734 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079993107 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079913788 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078756776 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071426425 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078887819 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078260933 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071436887 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078754016 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07102505 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07155148 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071380203 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078174926 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076928413 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079224413 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069977669 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069963362 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077302145 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07964377 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067621006 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076091119 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078506373 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077124897 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068870183 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079825188 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070046115 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079501559 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067274384 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07718025 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202343307 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079088108 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072496077 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070858558 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071610906 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080449905 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072639871 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07073729 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072372467 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071737874 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079597258 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083593853 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072740954 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079744532 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078949623 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072608698 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079089267 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071223132 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080032458 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071320562 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071780979 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07047717 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082547599 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07120813 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070861477 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070971498 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081445259 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068853468 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078383156 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075930102 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067992311 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081002949 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078624258 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075715601 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081596008 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072495767 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07040649 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071404768 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070595126 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078295739 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079917527 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07245587 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070889818 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078554271 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082026768 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070485661 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079479277 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079401659 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079596554 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071553136 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071151376 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082230573 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082785191 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079474113 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079094309 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080340052 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069573659 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078635746 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079529069 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071183326 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086450199 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071850508 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084203634 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07990998 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07848739 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080382604 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081374687 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081757688 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081888252 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083584237 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070463939 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071317833 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079520659 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070959626 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070609806 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078932824 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072132594 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072169754 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085446782 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069572389 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081292578 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070371648 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080294968 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070351879 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07213455 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084710248 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071373856 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072132566 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079909686 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070824215 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078270336 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081906555 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078842563 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069006188 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071809137 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080225695 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080188627 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070591476 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070638298 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071828932 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078279326 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077574527 seconds)
  done (took 18.774720236 seconds)
done (took 38.161043011 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205074306 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154141691 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182871928 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115447708 seconds)
  done (took 2.041825383 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107666539 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099852874 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091062375 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067621676 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097281459 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067799355 seconds)
  done (took 1.847315422 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284828197 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197057357 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178459305 seconds)
  done (took 1.976455527 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208606659 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194789357 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47016067 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287723556 seconds)
  done (took 2.575486827 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141051469 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085195919 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066471512 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085306278 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.12696953 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.152591583 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095899025 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120781057 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078169074 seconds)
  done (took 2.323893606 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150486439 seconds)
done (took 12.26425395 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.099710994 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.136220102 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.213267806 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077781616 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075442718 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075100213 seconds)
    (7/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089938512 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071060406 seconds)
    (9/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.209480125 seconds)
    (10/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077801687 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103259408 seconds)
    (12/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.243374464 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.187197263 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110424192 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079100644 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185226515 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.121194886 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077372823 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.43501043 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07759232 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146990274 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.163070275 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080592507 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077174709 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.160341353 seconds)
    (26/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.16903938 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.208283723 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.205152637 seconds)
    (29/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073494369 seconds)
    (30/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.182775798 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138242277 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12897658 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082209258 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077526571 seconds)
    (35/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12137683 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086653612 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081835381 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.117342779 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076955998 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068208611 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097413413 seconds)
    (42/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179682861 seconds)
    (43/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.130173515 seconds)
    (44/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.079980361 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125537 seconds)
    (46/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.093452393 seconds)
    (47/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076989609 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075971244 seconds)
    (49/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.196326613 seconds)
    (50/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.14218349 seconds)
    (51/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.182877328 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.208341563 seconds)
    (53/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066950657 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.215292975 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095111334 seconds)
    (56/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078448215 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090020929 seconds)
    (58/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086223787 seconds)
    (59/309) benchmarking ("sort", Bool, false)...
    done (took 0.147920501 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075729209 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069324579 seconds)
    (62/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.127517695 seconds)
    (63/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.178968755 seconds)
    (64/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07347904 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077003215 seconds)
    (66/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086461562 seconds)
    (67/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068272173 seconds)
    (68/309) benchmarking ("sort", Int64, false)...
    done (took 0.069000014 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140086327 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085461705 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.242335086 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171420963 seconds)
    (73/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.217121615 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067313389 seconds)
    (75/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06633176 seconds)
    (76/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075976968 seconds)
    (77/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193205248 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074640991 seconds)
    (79/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.150998095 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097544805 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.228260669 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076367513 seconds)
    (83/309) benchmarking ("sort", Float32, false)...
    done (took 0.132701536 seconds)
    (84/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066042869 seconds)
    (85/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079990734 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.238246484 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090529989 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06696 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065925791 seconds)
    (90/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073038059 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.326112479 seconds)
    (92/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.082734903 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.0944761 seconds)
    (94/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.13863881 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.072934387 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076421139 seconds)
    (97/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078651025 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.226764875 seconds)
    (99/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07332514 seconds)
    (100/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.069568076 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068774985 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103293248 seconds)
    (103/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069396225 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076979819 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.086205339 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072266449 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075195399 seconds)
    (108/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.141108395 seconds)
    (109/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068681679 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068928091 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.0680935 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141065474 seconds)
    (113/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.147283551 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072106035 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075155413 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07861622 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126260909 seconds)
    (118/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.129968356 seconds)
    (119/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.220805507 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068909575 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.06956176 seconds)
    (122/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068725735 seconds)
    (123/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.132176497 seconds)
    (124/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.080656603 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091751362 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.08563666 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122151172 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076081801 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076965062 seconds)
    (130/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074851737 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068103481 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112873267 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.080097358 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171112462 seconds)
    (135/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.144264936 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.108699458 seconds)
    (137/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076905609 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.234797324 seconds)
    (139/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.098750048 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.225608204 seconds)
    (141/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069409041 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078901336 seconds)
    (143/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.069290927 seconds)
    (144/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077997149 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069441719 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185677941 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076807085 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095149368 seconds)
    (149/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067229226 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.178934102 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075848761 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085039769 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090814485 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093780074 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090410032 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184855984 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076440578 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081725665 seconds)
    (159/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177128183 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068302508 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.081053126 seconds)
    (162/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17454148 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135722632 seconds)
    (164/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076716135 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093774953 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090464107 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06668131 seconds)
    (168/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078074237 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067587641 seconds)
    (170/309) benchmarking ("sort", Int8, false)...
    done (took 0.148555999 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067486279 seconds)
    (172/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.172785705 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088587182 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071384597 seconds)
    (175/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070382883 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.172250141 seconds)
    (177/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080643827 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14305384 seconds)
    (179/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068705491 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090467964 seconds)
    (181/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075994461 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116893237 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071330776 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078248416 seconds)
    (185/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078687859 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074803082 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069255363 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068729419 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17585656 seconds)
    (190/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079985772 seconds)
    (191/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078620361 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067303148 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090985305 seconds)
    (194/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080553513 seconds)
    (195/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068035523 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069558536 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067733623 seconds)
    (198/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077516653 seconds)
    (199/309) benchmarking ("sort", Float64, false)...
    done (took 0.132088542 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067396111 seconds)
    (201/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075633861 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.196642134 seconds)
    (203/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070743957 seconds)
    (204/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067220317 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069282737 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119367116 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074716855 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122785815 seconds)
    (209/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077983602 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.176281669 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067201401 seconds)
    (212/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.357680208 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.072212534 seconds)
    (214/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.070458457 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077166472 seconds)
    (216/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06988048 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092140864 seconds)
    (218/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.07081276 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.179076645 seconds)
    (220/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071432594 seconds)
    (221/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069338489 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078660071 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.0763276 seconds)
    (224/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.131415069 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139569091 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.071726406 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091362271 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068110232 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.069668753 seconds)
    (230/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068093478 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140809552 seconds)
    (232/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123516836 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.145178887 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076609117 seconds)
    (235/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076698207 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071615369 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069266432 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122880732 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067758758 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068396685 seconds)
    (241/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076542397 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070108815 seconds)
    (243/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.221186301 seconds)
    (244/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068901604 seconds)
    (245/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091120693 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08834476 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130564319 seconds)
    (248/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076519684 seconds)
    (249/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070451246 seconds)
    (250/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067790349 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079232578 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069318548 seconds)
    (253/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07109636 seconds)
    (254/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070095051 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070528759 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068587688 seconds)
    (257/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075562951 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068710335 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069510521 seconds)
    (260/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070186689 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176396786 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06855936 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070500242 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068917472 seconds)
    (265/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.069511608 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068118604 seconds)
    (267/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171870051 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075205227 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068165347 seconds)
    (270/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.081827369 seconds)
    (271/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068049567 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.090652969 seconds)
    (273/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.069505264 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068817855 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068044799 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077050858 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069066338 seconds)
    (278/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068861534 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074542231 seconds)
    (280/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.069207232 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127012713 seconds)
    (282/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068462972 seconds)
    (283/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068556336 seconds)
    (284/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072524341 seconds)
    (285/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068407909 seconds)
    (286/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.081223676 seconds)
    (287/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.068732919 seconds)
    (288/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095065477 seconds)
    (289/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18464523 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077015016 seconds)
    (291/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069695201 seconds)
    (292/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068703428 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135723568 seconds)
    (294/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.068725905 seconds)
    (295/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069586872 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092751914 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067671471 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067310146 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074677087 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068123352 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092556979 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06857846 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069046584 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067850027 seconds)
    (305/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067253787 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067629209 seconds)
    (307/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069427845 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132241768 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069118998 seconds)
  done (took 33.729729851 seconds)
done (took 35.06163965 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087150651 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100899162 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075726831 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095721828 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083524372 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098795624 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076265314 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08133561 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083752555 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082535098 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081840158 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075287222 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077217337 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077459571 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075641005 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10019741 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082309229 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076520762 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076174326 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067708758 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076448998 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068299363 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067990985 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07520461 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079679313 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075884051 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077767641 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077540476 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068987676 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068647737 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073063646 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077340569 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068010149 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080919302 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077666822 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077155107 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07833124 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080629947 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067767167 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068559103 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078248229 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068268326 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076145326 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074428218 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072924739 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074717337 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076384862 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080562361 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100048103 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073366372 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078425505 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07913259 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080089393 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07434162 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073848638 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076342775 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074502133 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100045944 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076669373 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073441609 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078233287 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077203067 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074342422 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076392089 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076027848 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078688383 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080594496 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074541595 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078687391 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075298576 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067862497 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076245297 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072864457 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068560425 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079569874 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080792358 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067659357 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072239431 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07836884 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076526181 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068312887 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073506311 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067558254 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072743726 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073321172 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074569577 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072872681 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0756238 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067994077 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076698768 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075238722 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075558439 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06750323 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081193078 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067716349 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07427101 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068219622 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068306636 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06768911 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072873344 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067672049 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073504073 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077261748 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067868693 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072777449 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081058077 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067660056 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074720644 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067009401 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067809295 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079616792 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078193564 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06745576 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072538988 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066874674 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073119825 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067110097 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067618133 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067400309 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067414581 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072469252 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067429623 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072748005 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072642891 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079818515 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067114854 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072478563 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072070926 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067544496 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073536606 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067085083 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066951154 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066909718 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080605272 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072165648 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067084123 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072140456 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072573267 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075238239 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06652761 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075303799 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072333397 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070850612 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073043644 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066293214 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07803679 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071827346 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071455425 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066560416 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066775221 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0659786 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066634965 seconds)
done (took 12.793459938 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06979697 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117699755 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09577745 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096039361 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085268065 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06952064 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076569116 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.094646515 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070349275 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.09967774 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090941946 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090241551 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11225694 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068306663 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068842662 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069582987 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069743389 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081338865 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.096581988 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091149878 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108769748 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068934292 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.088991802 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090003882 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085756007 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090953118 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069900499 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069574604 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071689408 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092913838 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094669473 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071727741 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069970453 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093246585 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088008836 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083148821 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069487836 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.077851891 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070056975 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06835594 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070353046 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090483329 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077899749 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078073642 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07000736 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076751665 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069887147 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085541288 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090245721 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078136203 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083307751 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.092244158 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073204129 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085692214 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067997058 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085162889 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079144656 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069618681 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069807419 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07393415 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068960785 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07103549 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080828645 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078607557 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073983844 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084398128 seconds)
  done (took 6.738817507 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084802149 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096478269 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086273465 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085943301 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067956958 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06935489 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071403811 seconds)
  done (took 1.981515007 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066883124 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086650705 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093283278 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09351398 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082925199 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093392501 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077045773 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068988589 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098705215 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068366318 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089542164 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100042332 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073026532 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.080782746 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09494097 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071100762 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093691512 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069449281 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069735597 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093825807 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07410033 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09672431 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080739602 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069776001 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082461799 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069953524 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102327443 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077434949 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070571728 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071490971 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070346997 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.096710796 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081861462 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083311424 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07071049 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084506226 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082556654 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072772304 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079684778 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078633339 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08211 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070173347 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067863408 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070589471 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072311578 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080539395 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067980633 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070266754 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070233241 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088768697 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068669445 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08170128 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072791529 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076234209 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074485516 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074951418 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078154091 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070444263 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089284206 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070122084 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086742718 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086242629 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082652781 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085614206 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069315618 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081542074 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082635354 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070097629 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070908126 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070671794 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085999853 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072748658 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071457218 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081204204 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068609113 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094319539 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093451911 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068432028 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083449777 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069586177 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070955802 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.080716136 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093660227 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075279449 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070089239 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073422527 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070994843 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071899397 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06757274 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072712263 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070017792 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074667162 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070233884 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072769146 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071508747 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085652277 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068330942 seconds)
  done (took 9.001604352 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069090951 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068542691 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071745931 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070441717 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070006781 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070103483 seconds)
  done (took 1.864607361 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090288326 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069281949 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082722914 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070058868 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107056423 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08594634 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086031404 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080651154 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084595738 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081971713 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086573161 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089604359 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091130386 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073017923 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086090264 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.0710712 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086080192 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074656484 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081071776 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072922431 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084297177 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072849069 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073079232 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089193843 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074432461 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071275404 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080136691 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081516954 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08108968 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080003186 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07238938 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073900995 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077233538 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080001769 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086305464 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077674407 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070139375 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076903881 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072984445 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07413153 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088347073 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072410557 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074967078 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076735315 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080135558 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077251134 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076587264 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078971405 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085850862 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076948497 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076940615 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070838887 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073980184 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076834475 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077354621 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079786636 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076852904 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085992178 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07234997 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077524129 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070155718 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073854409 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079381523 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073570486 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077800433 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076771165 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077789357 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072392554 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072449578 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069938035 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076526578 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070636311 seconds)
  done (took 7.063136503 seconds)
done (took 28.091647114 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.51792037 seconds)
  done (took 1.913452336 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.618785879 seconds)
  done (took 2.04445044 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.498170764 seconds)
  done (took 7.920331398 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.379760807 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.453952014 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.744571806 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137314753 seconds)
  done (took 3.174093388 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708595011 seconds)
  done (took 2.144056889 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235004164 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229890437 seconds)
  done (took 1.913326904 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.34700044 seconds)
  done (took 1.774471032 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.071134061 seconds)
  done (took 2.500367301 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.233356179 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163947359 seconds)
  done (took 1.82826256 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.447627427 seconds)
  done (took 1.880141674 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.225970064 seconds)
  done (took 5.66048346 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224634857 seconds)
  done (took 1.691502715 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23330985 seconds)
  done (took 1.665494708 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.740098663 seconds)
  done (took 3.172312312 seconds)
done (took 40.719505408 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082475709 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084729439 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086098234 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082463014 seconds)
  done (took 1.749120331 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074290575 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070541431 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076676348 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072380301 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076701738 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072918475 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074059091 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074855506 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072330834 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072701516 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072655722 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07237976 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075742295 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074750703 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071413051 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075813355 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07662976 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072882658 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07562726 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072298768 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070928685 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075118407 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075792811 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071581533 seconds)
  done (took 3.206975847 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077639098 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073711865 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07764071 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073321083 seconds)
  done (took 1.74316504 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076455504 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087390902 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085224518 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076696749 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088470344 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084521037 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067896252 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068287593 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069769964 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078848701 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068033365 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094934914 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08803883 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077910475 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079638521 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065302838 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067489791 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.0873569 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079283833 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079763371 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070294133 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078703663 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068182517 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088939623 seconds)
  done (took 3.314670944 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080243347 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065932587 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08205659 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093623003 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095351187 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067773374 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082627245 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096116121 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138486324 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068455226 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074133407 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067861281 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.113545962 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.071492829 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082001314 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110566814 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115552857 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071483621 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103575032 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068243386 seconds)
  done (took 3.197609023 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083188644 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071642982 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072141375 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067499573 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078262462 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075530447 seconds)
  done (took 1.898556034 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068211169 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070190883 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069156476 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068596312 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074095347 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069408246 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067817777 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070169257 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069963262 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070099996 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068657749 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068596607 seconds)
  done (took 2.280544819 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.189930578 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070525926 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068704116 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066085284 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071794708 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068270743 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083661878 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069612971 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096410104 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068620302 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069074793 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071446477 seconds)
  done (took 2.442064531 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189029443 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073353789 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221314861 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145925601 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104252054 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112161706 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113823146 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110170004 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.135228036 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098342009 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157048618 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162538659 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105888888 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131071456 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089722231 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.122968258 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146276931 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158135463 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1014227 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15683303 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136041405 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12483485 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144421952 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099363155 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10407799 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115312276 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07392389 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079827789 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159860588 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123727278 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13694888 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107010085 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092280769 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167106213 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16286446 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133671386 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144652542 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08390795 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.120992399 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.12985206 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192865228 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088778033 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14949511 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103075695 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079877971 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12556599 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111413815 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116132752 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10123556 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088029022 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275167653 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171336445 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129036309 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085283242 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117447424 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107664698 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110776496 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116631009 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170261577 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151329844 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121685987 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071516215 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109668482 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144551881 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127156361 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10689614 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119960507 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092198824 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126436349 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15416787 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120756188 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135997893 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115384031 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087314495 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115998898 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132848799 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123070555 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163217678 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120264561 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073100383 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116916971 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097936654 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080262016 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143707714 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075685772 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165761628 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098376812 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.123639734 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128045298 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107744294 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107390849 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156289863 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135363519 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102489593 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084623666 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101930252 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117580982 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137442604 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086092649 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105501879 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110084954 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079083558 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128546583 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074216882 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116727803 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094577146 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115098987 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120335299 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078308049 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116937866 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246510664 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102424644 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12370049 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151330935 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088028037 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08125496 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159374276 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118273932 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102677057 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136772629 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151483012 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120740072 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096645406 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139339127 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165495794 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090157193 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154475496 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101255358 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083654889 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105623144 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119989187 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10887296 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121430963 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080812158 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117953579 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156739695 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074836418 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096359674 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129374799 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081576239 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080576838 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103851757 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102734753 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096381185 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101276132 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102659059 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132426583 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119518409 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10407498 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12122194 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098835587 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158671445 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0869427 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101582515 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103235112 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072538293 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127838294 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14893809 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079062765 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151182075 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117080499 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112104382 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115065454 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08273421 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130130348 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078544277 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072155806 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132019389 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109901895 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103956278 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.139779579 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256791487 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119949384 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116931662 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127492044 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125016203 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124741744 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107235091 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088349715 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112814704 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125328238 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072855128 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091644118 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082075256 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101259872 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094017211 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083721718 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133819914 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117433285 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110167024 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11268656 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09514355 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143773434 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078105181 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120382825 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119307772 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094690038 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148349958 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146227226 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129105109 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100266448 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131791805 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073385726 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07508072 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088855065 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120816186 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08400729 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08404814 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111662773 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142705534 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12215779 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13193086 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120985919 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114256893 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151454673 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073095042 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118504012 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138835749 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117775652 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104011341 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090140302 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09530443 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138192827 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102656114 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169587978 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108097841 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119946228 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149352743 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099702137 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079039438 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101536705 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125145974 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098276568 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.283681873 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096864195 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085161902 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105070132 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078489126 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100508961 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121631766 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113271536 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129348184 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.109430202 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126714184 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077957243 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108616349 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117878004 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118302578 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08390066 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113475731 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159092718 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096213838 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113999409 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143575955 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079195893 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137139477 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164535582 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138567826 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084841255 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103869257 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119708649 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123052316 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115219427 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133836393 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102127855 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133909775 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109622669 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084671144 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086144318 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095008425 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101393962 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.111427523 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103570154 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112627076 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095435216 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125974759 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102072081 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110339328 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115737261 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099213558 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095478085 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095486483 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166293506 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115171608 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158162085 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097956086 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135205821 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152844739 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07556405 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079705179 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079837592 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130132532 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083507703 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123622945 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.110611316 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258844063 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116641481 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129545013 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093231084 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069260346 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104952442 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12424543 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11575442 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092295916 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.098704265 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148850107 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115283454 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077788718 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108785713 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109841404 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102657996 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16469462 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081394529 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106525667 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076942288 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079660031 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122206081 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144054152 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082830072 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103156481 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117485876 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109847115 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123445284 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097157724 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108803204 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124723477 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139242594 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12081674 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089790232 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109355618 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12459806 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146517956 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102879446 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099667108 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164492836 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147603561 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153208672 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087779783 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11182621 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111839056 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107846971 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13136726 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082492326 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151612767 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079662038 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12738515 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097633717 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084874746 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119219656 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106670603 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084077553 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132561594 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109230294 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079382965 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078512229 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25679681 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113013476 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101258998 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074812031 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132927516 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073868684 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13094359 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159833825 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080385647 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103461261 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095227555 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082781383 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102567698 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100436472 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085514183 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.0984326 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160184127 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087202713 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139892637 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127984037 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108491751 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13156668 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102968231 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642517186 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08005311 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146107311 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114037073 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167827744 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097890065 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116091668 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108770733 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118220351 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136620777 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101229326 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178399077 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125923858 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114819075 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079042762 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100663812 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102193753 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088921026 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104940705 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111414554 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111150212 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094320185 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115594925 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118785654 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082628085 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094607185 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147147333 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113824747 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136109 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130399124 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083537295 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114716614 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130211515 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079322176 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113647752 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139669743 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100918387 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097490385 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080773565 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096862423 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160019915 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071913923 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145174919 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113776697 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108367774 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108173499 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104550617 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120565243 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094487354 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108484525 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08431487 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.133292048 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10271367 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076942699 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073227146 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096296656 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098740098 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.091321684 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089929922 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.089319001 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131129683 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070796621 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093546186 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105780046 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126310544 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146322838 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.098912844 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077496926 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105116621 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106240022 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.105203013 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109764809 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076691423 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074731026 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07392787 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.095784355 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112640028 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103799645 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10848375 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098831138 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1387538 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.078608181 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.217289008 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089582148 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095951341 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.085653311 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077000277 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091676288 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08908419 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093997341 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101791372 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149370739 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.089684535 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.085566556 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08532306 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072026416 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08054498 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114580301 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09917976 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107736166 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096704109 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.078377175 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.353711369 seconds)
  done (took 57.059977982 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121689394 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086197801 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102972028 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150200598 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125480296 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204252094 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153797028 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192253397 seconds)
  done (took 2.720408741 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071535258 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098367281 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107811373 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086656659 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069564047 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071711725 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234599631 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087872101 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071103353 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095719336 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081436345 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071094743 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.461838256 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071197856 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072420769 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079424106 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069316201 seconds)
  done (took 3.466151969 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390406524 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62911457 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351290134 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079494317 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.006568634 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092837461 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.204804475 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142489049 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082760087 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541069733 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369424328 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133604418 seconds)
  done (took 18.596383842 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082392188 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077814553 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093575728 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094016758 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080739156 seconds)
  done (took 1.997253717 seconds)
done (took 105.128019966 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082202159 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.429795884 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073488526 seconds)
  done (took 2.096747865 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090912678 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089326342 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091994045 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090432042 seconds)
  done (took 1.941501657 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075226456 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077421078 seconds)
  done (took 1.725377419 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230837171 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.1809605 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101461861 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083447601 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080549318 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082665743 seconds)
  done (took 1.823740679 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07280298 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072713168 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073065436 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076213839 seconds)
  done (took 1.863086299 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068869699 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06674445 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.072168777 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074613727 seconds)
  done (took 1.851187219 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084002904 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085283851 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08236812 seconds)
  done (took 1.824023485 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101329386 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090789343 seconds)
  done (took 1.765363113 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082051485 seconds)
  done (took 1.656018493 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088757885 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09908436 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131600273 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114846285 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13837247 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117146367 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088459499 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089104736 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082321409 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089698738 seconds)
  done (took 2.611949272 seconds)
done (took 21.32359834 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079148341 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371694976 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363477327 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095087139 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671690695 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360360389 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970695803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097279609 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145860565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071765817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089168761 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651966245 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.966111867 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325033307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.951207348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328561632 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652962699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072639191 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071652151 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072364196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95860052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07261858 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071577893 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07223765 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652027887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375953249 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072535395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329177293 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071767641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074004893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358727926 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072706171 seconds)
  done (took 16.143398337 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071061044 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122065776 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076597616 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089252825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074716448 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073239853 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075214629 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073164277 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124955991 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071821986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088739388 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07242022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075386692 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072570517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092228099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072015274 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072547636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073107851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072245798 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072714088 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091471663 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071852163 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074432847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071984105 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072152913 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084263665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072497741 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071972593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072565206 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074532428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075515036 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073016637 seconds)
  done (took 4.110587333 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116803544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130168403 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077544174 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110557922 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116249682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073837034 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151093977 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09760479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130927418 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071731255 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089921413 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072011159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107526365 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072832194 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091570848 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072487728 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072925206 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072316644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072394955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071328116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089551049 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071486564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072141558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072753165 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072442528 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085636947 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0712611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071474518 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070922461 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07323762 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075643258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073308412 seconds)
  done (took 4.358664212 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070983283 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074040014 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08398792 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084359079 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070173112 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.0728691 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074018218 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069860926 seconds)
  done (took 2.194650005 seconds)
done (took 28.390322478 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078347614 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068551476 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074316344 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089821104 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076837957 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081807538 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068094572 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078240884 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074982597 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075619787 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07806875 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071741245 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074237632 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069210492 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076626085 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070100017 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085507928 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074413299 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084761713 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084665513 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073322924 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075711737 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078487038 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083870225 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084080269 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084044413 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079476002 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07584047 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070682829 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073547056 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073702628 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082963739 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.08391392 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084179868 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069715955 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070049446 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074345543 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071887353 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085223038 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079355075 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072400946 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079238518 seconds)
  done (took 4.806180721 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084724292 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092250187 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085970184 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08299953 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.093410677 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085762102 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090250379 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080969924 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.081159612 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089915256 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077797731 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.084739418 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081901745 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075764714 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.081974313 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.078761837 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.084014915 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077904477 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.081174965 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081823081 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091591123 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075872382 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090480323 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.083131838 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078740929 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084174172 seconds)
  done (took 3.780745858 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074215632 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088349781 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095285643 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147714893 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114678341 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083123015 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084542063 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09515729 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099679842 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070768281 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075732474 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095467564 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096909935 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077084214 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071178429 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087530919 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086860366 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073188732 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077775231 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099723286 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092251502 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088572225 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097830436 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08822472 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070674415 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073858198 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076086842 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090632945 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07421059 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083052017 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075266688 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075553788 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073258888 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082681251 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073856879 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071295638 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097478769 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083519262 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08486038 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072203494 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.082130915 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072411346 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097386288 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132849009 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070269403 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075096326 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074649619 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082584739 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069874731 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098848598 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082705791 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070645197 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07168051 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06949116 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069599607 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072836952 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072254026 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073222913 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080442495 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077224224 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092809087 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075832045 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088067987 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069787754 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081098302 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070149244 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071861957 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069515208 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099386855 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072521891 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11606498 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071585772 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069316769 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081775546 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081339156 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076991126 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070339301 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089379099 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082495476 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075297208 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079420167 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074253747 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074705565 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101966216 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071174686 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07046612 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069694343 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074786007 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074114963 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0713394 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083755738 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070203641 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075052491 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089579537 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070276433 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071940424 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074600629 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073523196 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070501737 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081896498 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075092577 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071829449 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081179165 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071226444 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074481786 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084270319 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077881404 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069940113 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073104147 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07466059 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072258648 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072490402 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074372312 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.0726887 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078220542 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07743849 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076750827 seconds)
  done (took 11.02845168 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163606423 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161293107 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073864473 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14967436 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080011838 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083061129 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156321055 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099096409 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071198184 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07288453 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072740408 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113422953 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109153665 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121974997 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084587302 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072092729 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095068663 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118902688 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157811946 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.1518227 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094240191 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080608164 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074083922 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07300812 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073078548 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081177401 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090483204 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080706221 seconds)
  done (took 4.490110111 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077742039 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10327675 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073796511 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092593406 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089542522 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071842036 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073144412 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072834067 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087914095 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080638933 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072197835 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077679788 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07582732 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074550004 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072617356 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078256775 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07882607 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070721033 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075242428 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077609549 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081600002 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095710999 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075489044 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071406461 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074213268 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071056481 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.079458984 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08648797 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071403045 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.106925917 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068964137 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076795874 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086023169 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071844622 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070973239 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071488312 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071434496 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071460883 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072807731 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070518373 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070016466 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074853421 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070363991 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079258947 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084566017 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073196725 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073332613 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074200971 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07433412 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069053322 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.0740242 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07399975 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074394979 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079066242 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07620959 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074452422 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072450196 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099580327 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077561764 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070804263 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070295372 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069679014 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073594002 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080826689 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087196275 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074375422 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070204895 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071113141 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.08401761 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084474913 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070688066 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075669851 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069149161 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072890844 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07363748 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073769296 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07278278 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070107804 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07093452 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074782299 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.072016831 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070941583 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070239805 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074744879 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069751644 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070024568 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071639117 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073053168 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079970137 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070477264 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075560732 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072300587 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0703569 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074219066 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077106465 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074518781 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08245784 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08210813 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071775603 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069780195 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085709724 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074261881 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070870926 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077299303 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07635995 seconds)
  done (took 9.608926373 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091364875 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071530362 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087742052 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095472199 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081521792 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077437281 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081266152 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071235434 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087585508 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076209424 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079063315 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070397419 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082415228 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080586284 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071708922 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082177976 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074613874 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089548805 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086051897 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069788821 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079976946 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083952137 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.083560799 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086155357 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085215797 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086360355 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.083444588 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082000463 seconds)
  done (took 3.919442773 seconds)
done (took 39.223286664 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.693820355 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.844346357 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.661861739 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.863442271 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.811722812 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.684541586 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.751769696 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.655302643 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.920963442 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.699597376 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.890070772 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.897613427 seconds)
done (took 64.110564404 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.667808129 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.802647666 seconds)
    (2/2) benchmarking "String"...
    done (took 1.903581883 seconds)
  done (took 5.37095034 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.921978598 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.388374378 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.88735399 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.645800374 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.655696829 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.914877069 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.439951458 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.110650539 seconds)
  done (took 29.632409341 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.783683981 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.875612035 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.334914744 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.373039731 seconds)
  done (took 15.000126737 seconds)
done (took 61.27783252 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.671521749 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.695186344 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.650367388 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.644870861 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.73870657 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.65973316 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.778994915 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.644934638 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.646486632 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.655477252 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.647048707 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.120541393 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.653193718 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.759903394 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.648623878 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.647767191 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.675473426 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.138213083 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.79529646 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.658069849 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.650939071 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.660827669 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.645198599 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.644138204 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.663519182 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.64137434 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.010903452 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.652445256 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.479631005 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.650096205 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.69585107 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.027708598 seconds)
  done (took 199.542165755 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.643945979 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.45492233 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.554978653 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.687873856 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.913738533 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.81804867 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.746154113 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.994153062 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.645827833 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.649593493 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.79686629 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.643643892 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.828384034 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.585072239 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.682513436 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.678395358 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.784027562 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.822773243 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.683788406 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.806327022 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.657775468 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.693218474 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.608422135 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.7728044 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.648520251 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.724669216 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.644991822 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.648509699 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.827083965 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.741460587 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.677692187 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.655184766 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.841496692 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.510267408 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.662029259 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.663653131 seconds)
  done (took 163.982670512 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.821930615 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.641778533 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.642076701 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.643108162 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.647679963 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.64256715 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.763866403 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768199871 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.297926236 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.097885306 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.699836601 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.642860514 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.42027468 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.645472577 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.708418925 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.654001547 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.643496847 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.656763395 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.668140415 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.647304276 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.643897914 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.766018517 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.659152162 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.646558783 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.653013407 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.643592208 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.649296761 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.033319778 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.642604052 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.876429683 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.649561448 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.649119876 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.883975358 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.644070824 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.645103844 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.469054616 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.701928606 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.725121053 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.645190728 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.649618073 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.643302519 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.644915997 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.862160958 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.644309367 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.646009821 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.643970515 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.6451201 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.753375755 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.646788488 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.765588779 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.647384301 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.126034735 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.647986205 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.646523306 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.107757375 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.223135739 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.648866968 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.647151479 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.643437156 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.645381124 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.650270563 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.048595614 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.71825726 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.646193122 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.64519396 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.648949507 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.644790905 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.644359747 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.645074769 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.806354695 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.661011125 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.767299054 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.806649349 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.771688275 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.649771118 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.709681301 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.737359051 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.644926947 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.64471609 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.644936729 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.647337059 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.645437641 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.726530166 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.645316851 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.727392826 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.655952027 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.647888508 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.699907886 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.714967903 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.646575045 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.465072786 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.648932926 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.645908882 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.882980969 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.710103644 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.646563276 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.646922984 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.726821809 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.767455902 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.364460302 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.65166117 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.646861985 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.965448372 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.717782738 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.648193781 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.763864001 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.650476652 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.726929503 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.654310646 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.650213749 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.683008689 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.648256618 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.658009223 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.646194363 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.020190018 seconds)
  done (took 386.017459538 seconds)
done (took 753.01309075 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.259775529 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.221192885 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.311751515 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.238455266 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.214870282 seconds)
  done (took 12.831782966 seconds)
done (took 14.421982537 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.723801068 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.728760077 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.664884268 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.729067603 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.661619813 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.727297956 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.70875706 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.669734598 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.69540618 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.668313301 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.69537975 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.667992468 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.654419399 seconds)
  done (took 23.581482725 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.878309497 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.886437147 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.714500705 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.880510589 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.691714275 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.873340511 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.807096869 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.797810035 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.78605674 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.658979133 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.659339532 seconds)
  done (took 21.223014157 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.877362234 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.889886604 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.720916322 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.881450149 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.694514006 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.90176299 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.806268134 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.799309716 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.795745991 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.66151957 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.656510108 seconds)
  done (took 21.275169594 seconds)
done (took 67.667185035 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.65246783 seconds)
  done (took 3.241608029 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.671662216 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.830149945 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.65177653 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.651690895 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.651559155 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.652969674 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.652688317 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.652314138 seconds)
  done (took 15.004066804 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.651592045 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.651770475 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.65178684 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.652557932 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.653359364 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.652480659 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.652274222 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.650886134 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.652087524 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.652322309 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.654118652 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.652601803 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.652452488 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.652138083 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.653167832 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.65296319 seconds)
  done (took 28.028977539 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.65356694 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.652220238 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.651321445 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.652299118 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.652274456 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.65210221 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.654476057 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.65272612 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.652767749 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.653419691 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.652579337 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.655702317 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.654187629 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.65398829 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.653271205 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.653131552 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.653526365 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.655255433 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.658179671 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.652027494 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.652486677 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.652507977 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.655918374 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.655418269 seconds)
  done (took 41.277801334 seconds)
done (took 89.142531033 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.383003784 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.27637149 seconds)
  done (took 9.249861788 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.656679397 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.652861648 seconds)
  done (took 4.969038251 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.654674312 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.652829599 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.653876435 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.653465953 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.653632148 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.654499548 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.655884926 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.65561955 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.656103627 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.655374364 seconds)
  done (took 18.136544203 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.655068599 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.654515122 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.65670265 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.654223664 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.653852525 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.655379925 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.655000094 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.655617263 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.65521672 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.655893659 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.653488752 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.655303195 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.655316677 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.654914001 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.655319517 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.655460694 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.65409324 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.655526456 seconds)
  done (took 31.38251496 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.655423985 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.656592218 seconds)
  done (took 4.903479917 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.654318961 seconds)
    (2/7) benchmarking "second"...
    done (took 1.65437223 seconds)
    (3/7) benchmarking "month"...
    done (took 1.654030833 seconds)
    (4/7) benchmarking "year"...
    done (took 1.654567009 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.658339592 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.655462597 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.654872358 seconds)
  done (took 13.176763211 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.65567355 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.806104867 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.869468007 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.264915241 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.656509403 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.657719758 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.56583957 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.66127191 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.660981116 seconds)
  done (took 18.390641645 seconds)
done (took 101.800119872 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.512940703 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.654151755 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.92929758 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.717283453 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.678714496 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.993216188 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.693485142 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.949884809 seconds)
done (took 41.723367904 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.667746014 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.386657545 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.647795259 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.69120258 seconds)
  done (took 15.319407237 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.660549856 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.064211937 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.691872348 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.52011333 seconds)
  done (took 21.607555938 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.021772424 seconds)
    (2/2) benchmarking "read"...
    done (took 2.010165876 seconds)
  done (took 5.633950004 seconds)
done (took 50.823821362 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.661268421 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.658872341 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.659622017 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.659829585 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.660090265 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.660736182 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.663625551 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.661530926 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.660854911 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.66107285 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.660473316 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.659773148 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.661775913 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.662853433 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.660895294 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.660440666 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.660609016 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.660024829 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.660818464 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.660854948 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.660937365 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.661945748 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.660498561 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.661301969 seconds)
  done (took 41.458832875 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.661986204 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.661803351 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.66161978 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.660300421 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.661506844 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.66139956 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.663168242 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.662337555 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.661947706 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.661474245 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.662296681 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.663063243 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.66014711 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.661648034 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.660619103 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.662153091 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.662436048 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.662811148 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.662321612 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.663217417 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.662843047 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.662839304 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.663406594 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.663125196 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.663761569 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.663424021 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.662386608 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.663005192 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.66345482 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.664473232 seconds)
  done (took 51.470367142 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.66691564 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.672126631 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.664296538 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.664412732 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.663944347 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.664154059 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.663220353 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.663520097 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.664045854 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.663452676 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.663347867 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.664207818 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.663769413 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.663781495 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.664215146 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.663433579 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.664070863 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.66530753 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.664182365 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.663957632 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.664341581 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.664207973 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.664615205 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.664428952 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.664145943 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.665204383 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.664037716 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.664921163 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.664813258 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.66512974 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.664811751 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.664235319 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.664650795 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.665441602 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.66397015 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.665712375 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.667242034 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.672205786 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.664830577 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.664197624 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.665533245 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.665023532 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.664786083 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.665069927 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.665026245 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.664719269 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.665446917 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.666380432 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.666580788 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.66502271 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.665424187 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.665100085 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.666360882 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.666043413 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.666427694 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.666697068 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.666573162 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.666347562 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.665621187 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.665962229 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.666779374 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.666349742 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.66729327 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.667090355 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.667152507 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.666451311 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.66814521 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.667395925 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.666598181 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.667385371 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.666346345 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.667135194 seconds)
  done (took 121.51442178 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.667767699 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.667731719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.666964894 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.667690071 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.667183796 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.666768776 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.667089865 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.666963397 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.666260942 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.668208153 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.667842738 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.668992119 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.666237967 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.667437061 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.666749589 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.668370759 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.666893185 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.667399178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.667461267 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.667754132 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.667369845 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.668250387 seconds)
  done (took 38.287591639 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.667548578 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.667369906 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.669676817 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.668368587 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.669594308 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.669685971 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.670317889 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.668926932 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.669945038 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.669207493 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.671518083 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.668659979 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.670882969 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.669252206 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.670784439 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.669599485 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.670072645 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.669058955 seconds)
  done (took 31.655115722 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.669937592 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.670244478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.669870594 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.668595557 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.671163852 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.671521797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.671891827 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.669993775 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.671648117 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.670576977 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.670614591 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.670313294 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.671245686 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.670128709 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.67091867 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.670922264 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.671347148 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.670428037 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.670996086 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.669821053 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.672302384 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.673256405 seconds)
  done (took 38.364092185 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.676427384 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.67118937 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.670802176 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.671417493 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.672363566 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.67189152 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.671178093 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.671582609 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.671843677 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.671217141 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.66964033 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.671714846 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.671841387 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.671485741 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.670969743 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.67183706 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.672386083 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.67252514 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.67591552 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.670592256 seconds)
  done (took 35.042025604 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.67250918 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.672535216 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.675460705 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.672778744 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.673261955 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.672677147 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.673118771 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.671343134 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.672975143 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.673698096 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.672175878 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.673198467 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.673033675 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.673951788 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.673402836 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.676945787 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.672911279 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.673470555 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.67327713 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.674273247 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.674364006 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.674517307 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.673042611 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.674765385 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.674013525 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.675203459 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.674449452 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.673300089 seconds)
  done (took 48.468285801 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.673849647 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.673311225 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.672999367 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.673904689 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.673980983 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.674668065 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.673100228 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.673973468 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.67439132 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.67396646 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.67355727 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.673682042 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.673744359 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.674035067 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.67506912 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.673873137 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.674215018 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.674575253 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673775901 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.674150729 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.675803474 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.674788803 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.67834392 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.674339944 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.674888924 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.674393293 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.676297483 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.675730626 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.674651423 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.675574357 seconds)
  done (took 51.842575115 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.695697724 seconds)
    (2/2) benchmarking "in"...
    done (took 1.69550112 seconds)
  done (took 5.001847208 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.675732816 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.674463605 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.675006718 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.675304836 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.674967976 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.675075752 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.679254414 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.675214976 seconds)
  done (took 15.014622117 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.678089355 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.676742434 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.676075534 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.674956088 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.676466547 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.676115755 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.684085113 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.677437783 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.679109994 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.676212332 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.683831292 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.683108946 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.68086464 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.678483587 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.677925014 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.682506396 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.677479487 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.676510482 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.675958869 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.678368229 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.677365742 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.681387685 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.681047942 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.67682161 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.678769565 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.688538264 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.68255551 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.676638213 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.679273431 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.681581462 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.679100955 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.677724184 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.680469061 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.679899475 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.677738758 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.678239945 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.68711953 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.681024611 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.684299818 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.67780185 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.67679839 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.676498687 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.680196516 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.682185756 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.679895493 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.67914298 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.677357205 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.677475739 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.678352105 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.68307459 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.687406034 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.68197755 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.677482626 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.684288291 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.681547755 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.690127808 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.680345717 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.68215558 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.687805373 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.689026879 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.690321394 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.688015981 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.680666636 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.680120371 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.689173469 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.707514029 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.688216545 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.678811047 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.6796205 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.680272973 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.687160133 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.691199486 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.691692608 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.679875369 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.680254775 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.678725135 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.680772122 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.678941885 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.68842593 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.684911645 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.679785604 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.680636027 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.690843324 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.706795899 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.682713959 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.679198598 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.682109161 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.681201532 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.681175921 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.692710869 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.679504356 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.679231863 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.681034972 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.681375942 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.681718806 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.679419238 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.679258333 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.682890932 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.679948487 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.681091476 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.681239357 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.684983405 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.691835152 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.680760791 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.682420326 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.688590085 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.681600879 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.681475371 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.688459599 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.680290884 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.681961274 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.68113477 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.687721403 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.680224162 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.685794713 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.689268738 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.680828637 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.684033162 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.681639072 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.6814161 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.691806126 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.708314632 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.682135201 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.680921123 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.687371276 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.692347984 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.681289107 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.686862768 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.681447694 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.682899474 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.68065963 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.684996512 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.682004008 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.685779603 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.682666429 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.685460126 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.683901258 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.682421083 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.68406662 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.686246862 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.686007763 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.685370848 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.68537261 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.687764554 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.683381524 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.686044118 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.693064091 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.681559539 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.686037748 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.685695448 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.683177121 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.683115811 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.685164084 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.683060121 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.683538378 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.682022493 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.684628302 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.684190476 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.684299594 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.683121295 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.682918692 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.685460685 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.688800448 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.682753144 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.68829656 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.686405144 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.682557601 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.6839771 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.683643936 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.684775749 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.683183437 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.683674246 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.688172828 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.692316574 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.685829193 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.684633281 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.689064207 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.6853005 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.68435323 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.684395195 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.688785463 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.694216019 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.684036465 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.692381007 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.685511414 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.684362563 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.684649361 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.687633491 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.685834826 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.685524213 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.68958356 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.693448999 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.697397941 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.696102278 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.686941131 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.688891386 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.687339992 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.689861929 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.691582547 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.685269157 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.687068924 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.685739756 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.688450337 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.685134154 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.690049024 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.686113293 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.686107516 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.685522506 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.684292955 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.686614252 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.686534514 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.690828333 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.688562057 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.685783395 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.686128045 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.686280277 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.687334742 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.685616041 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.686847916 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.68620623 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.686646576 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.686372972 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.69405163 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.686509166 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.690395032 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.689958917 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.689735782 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.686717359 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.687568474 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.691281173 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.689731413 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.693198666 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.688013963 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.690214382 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.695542397 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.689093531 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.688131027 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.691349353 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.688033975 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.687147638 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.690885872 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.694711943 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.68707098 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.687994212 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.688522109 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.689720734 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.687555773 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.697147225 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.686986961 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.689470697 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.687071434 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.689222057 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.688240344 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.692456608 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.690355639 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.689578602 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.691633246 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.687388327 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.688632281 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.691454363 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.686894343 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.68835281 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.689228863 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.691989617 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.697407254 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.694875515 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.68959393 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.690918012 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.689519749 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.69248274 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.692151285 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.690453567 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.689548088 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.701744922 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.699975432 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.69698385 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.694275652 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.688546849 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.695942042 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.692157088 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.694408539 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.691775816 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.692481831 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.690749734 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.690132468 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.688515668 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.69160935 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.689288933 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.692150948 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.690862854 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.692341425 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.689564536 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.690918269 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.691543363 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.689278924 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.689794229 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.689913335 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.689312368 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.694269368 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.694002771 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.691654516 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.690948735 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.697437312 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.692692424 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.69315455 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.691443959 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.691539357 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.691240436 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.691514173 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.689826852 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.694744477 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.699709709 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.694596474 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.70348246 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.693862888 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.701681306 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.690699963 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.696569293 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.703047259 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.690756768 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.690633525 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.692980077 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.69088171 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.699785615 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.692334382 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.692234957 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.69533853 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.691142837 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.692096161 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.68971447 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.691791499 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.690855342 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.693577313 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.7016486 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.694913987 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.698994604 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.695229122 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.690695132 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.690436473 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.691348872 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.693262046 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.696354898 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.692341178 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.692888886 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.693835928 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.693276311 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.69135973 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.692446124 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.691394073 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.691822551 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.691120883 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.701422207 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.694129564 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.698065656 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.692113812 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.700423629 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.693065526 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.701080892 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.693412298 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.692646501 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.692747332 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.691994734 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.695729236 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.693764833 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.694821298 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.693048561 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.69505455 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.69816162 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.693419928 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.694964204 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.695107571 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.69637929 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.694896651 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.70428752 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.717108025 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.698912749 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.696009313 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.693918127 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.696895486 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.697145549 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.695276431 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.693772509 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.697627209 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.704886834 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.702734547 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.696344888 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.694904867 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.69673315 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.694389322 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.694009109 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.693794326 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.693043912 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.692939178 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.695165207 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.694436143 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.698779715 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.693763047 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.695817867 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.698332648 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.696843236 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.706148106 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.695713105 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.696720802 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.694870907 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.694397066 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.697464371 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.697034256 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.696632642 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.697295499 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.693872463 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.698153602 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.704041216 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.70413041 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.698293234 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.69676926 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.694820092 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.698446302 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.697539702 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.696090444 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.69424763 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.693989855 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.698737777 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.69611473 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.69667456 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.696933856 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.695099301 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.695988806 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.695673431 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.701510436 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.706662983 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.698333651 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.696537024 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.694803477 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.697094376 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.696701078 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.698141346 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.706224351 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.7026919 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.710412391 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.705078022 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.700449729 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.697827455 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.703367347 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.70662365 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.696544245 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.699146074 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.69517046 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.700369802 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.697715731 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.701451801 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.696284615 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.705302963 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.6986276 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.695959211 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.7066123 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.700425084 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.697621995 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.700073334 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.704105638 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.700289369 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.698534347 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.698415373 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.699032718 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.706370389 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.701142985 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.697500358 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.701714492 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.69676635 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.700254253 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.703561834 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.697388892 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.701316106 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.698305676 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.699877362 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.698858343 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.697491331 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.697638873 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.699977688 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.698561761 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.702822373 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.705320013 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.697210044 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.702212527 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.700550859 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.699754856 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.698593766 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.698371759 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.699599348 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.699435365 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.699319362 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.698754747 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.70093143 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.70421248 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.699952545 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.699788224 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.702913652 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.699349438 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.706249879 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.711827268 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.707076744 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.699398651 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.699458571 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.699598397 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.703297108 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.701130989 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.701126415 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.701868378 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.702155677 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.698712001 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.699353711 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.700386946 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.705453116 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.717937004 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.703240203 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.7024063 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.70222611 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.705814656 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.699928182 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.699582516 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.700784981 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.702077915 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.703971926 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.708530446 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.700369958 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.708798165 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.702857355 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.700320836 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.70343858 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.705184319 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.708581281 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.706612277 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.70225703 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.700054228 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.704994599 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.718273275 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.701082899 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.711300047 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.73385895 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.702873571 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.703547309 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.702785382 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.703497816 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.702274165 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.703315225 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.701692987 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.703641554 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.701716322 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.702561762 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.705013356 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.70890399 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.7047388 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.702599762 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.702070437 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.70264067 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.703352213 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.702305495 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.701922597 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.702219807 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.702479105 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.705155845 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.702905644 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.704631328 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.713854451 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.713131038 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.702456988 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.702452789 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.70397814 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.707795347 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.707004755 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.714756466 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.710348459 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.70301409 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.702852295 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.704143368 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.700417714 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.701251009 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.703176742 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.702179173 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.702601046 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.700898446 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.713291101 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.708814057 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.706695485 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.703339207 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.702554557 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.700798747 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.704195322 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.701105651 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.701055864 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.704016444 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.701660423 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.705486309 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.701033728 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.701070847 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.704491976 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.708398249 seconds)
  done (took 1010.461946349 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.701406638 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.701825257 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.702696403 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.701575431 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.704144344 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.702908116 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.70321525 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.702759301 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.702949958 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.702073686 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.703117346 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.701685883 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.702655698 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.703155781 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.702520011 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.702806814 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.702000723 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.702564668 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.702313995 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.702378755 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.703053649 seconds)
  done (took 37.391364039 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.70478325 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.701853363 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.703238103 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.702183326 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.702856389 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.702688639 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.703919056 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.702539249 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.703421539 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703759002 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.703475682 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.702043237 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.70258273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.702714633 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.703389529 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.702851076 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.703107073 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.70488662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.703062291 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.702562061 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.704803145 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.703105712 seconds)
  done (took 39.108921836 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.703772545 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.704568131 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.705397406 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.703345813 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.703911375 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.703362564 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.705006108 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.703399971 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.70368415 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.705487696 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.705312562 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.706423206 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.718689155 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.711446515 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.707310692 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.703766126 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.850741799 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.704567064 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.706564714 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.704105766 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.704419441 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.710549859 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.704727645 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.704545108 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.704423709 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.705230608 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.70596266 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.705755506 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.705410706 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.707666995 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.70860896 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.704878151 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.707128594 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.708575406 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.705891189 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.707207061 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.708437347 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.706286387 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.706304387 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.705524944 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.715487864 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.726777318 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.705466006 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.713340967 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.705425136 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.705599973 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.710365967 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.71576171 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.705738934 seconds)
  done (took 85.433828229 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.7057286 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.705550587 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.705928281 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.706048061 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.705168583 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.706460127 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.70675245 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.706330261 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.706850953 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.705701642 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.706421974 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.705620651 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.706326234 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.70653103 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.706591957 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.707497924 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.706713588 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.706828211 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.706317042 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.706717631 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.706554303 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.707169188 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.707437452 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.70727579 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.706763189 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.707059138 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.707889532 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.706959161 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.707737918 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.708138897 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.707027468 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.707910756 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.709727218 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.707402289 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.707784731 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.708213116 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.708473901 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.707685716 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.70756752 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.707305162 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.708081082 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.70801686 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.708165919 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.707958233 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.707323922 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.708309583 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.708382222 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.707142302 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.707856107 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.708024159 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.709657534 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.708876147 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.708162163 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.708130875 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.709066561 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.707955021 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.708467282 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.707088928 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.708292441 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.708626842 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.708589048 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.70917755 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.710470263 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.70850147 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.709346418 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.708652361 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.708689784 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.709282293 seconds)
  done (took 117.758599384 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.709362701 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.710382519 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.709464013 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.709249583 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.710262794 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.709413204 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.709775565 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.711020752 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.710134221 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.709256688 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.70981211 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.709895 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.709611013 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.709680521 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.710538162 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.711013599 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.71117013 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.710451188 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.711169951 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.711517168 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.710740441 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.711444747 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.711725004 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.711071203 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.711824447 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.711683769 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.711518195 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.710856649 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.711633202 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.710933776 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.711114059 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.711663817 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.711538769 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.711188771 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.71196834 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.711778919 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.711455468 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.711310251 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.711261799 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.711602517 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.711042003 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.71058263 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.712315839 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.711212262 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.711443906 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.711472732 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.712499489 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.712157427 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.711346579 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.711331723 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.712328064 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.712954833 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.711933081 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.712499477 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.711422974 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.712035634 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.712074417 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.711960603 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.711730581 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.712382966 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.712982089 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.71175939 seconds)
  done (took 107.739496542 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711668954 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.711527282 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.712415175 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.711690996 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.711460487 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.712663139 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.71467322 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.711929844 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.711535021 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.711639449 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712619471 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713011068 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713780849 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712793183 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.712931914 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714069233 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.712222463 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.712874211 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.712426177 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.712203194 seconds)
  done (took 35.896844712 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.714365151 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.715656588 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.71496577 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.713940147 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.713426462 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.713848572 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.713559657 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712657444 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71422798 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713517296 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.715866166 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.714420558 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712562286 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.713487789 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.71282545 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.714084761 seconds)
  done (took 29.072310036 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.713716791 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.713426402 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.713317738 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.714577421 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.713564505 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.713529935 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.713323457 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.714073005 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.714120419 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.714211747 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.713697663 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.714251058 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.714305397 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.713920964 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.71387099 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.7139853 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.7142655 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.713701832 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.715006759 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.714568096 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.714689799 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.714919594 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.714532008 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.715852979 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.714485649 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.715207059 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.714504278 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.714870143 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.714590839 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.715838857 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.714764117 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.716113113 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.714812031 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.714307967 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.715859016 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.715955941 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.715046734 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.715346411 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.7179257 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.71569185 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.715371433 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.71578006 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.715962749 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.716415019 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.716034419 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.716788725 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.715253062 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.716755189 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.715991992 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.715764062 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.715522017 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.717181575 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.716425245 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.716673297 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.716426201 seconds)
  done (took 95.977313116 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.716120975 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.71577329 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.716752845 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.716026811 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.715855833 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.716620797 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.715305056 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.715767549 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716839262 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.716413858 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.716933517 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.716145292 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.716432321 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.716366982 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.717484668 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.716595813 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.717002354 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.721155706 seconds)
  done (took 32.551679411 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.71842317 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.717376406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.717895381 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.716682208 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.716699732 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.717362421 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716791813 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.716481125 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.717059975 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.720680142 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.717861949 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.717949436 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717229802 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.717354281 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.718705277 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71889262 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.720004972 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.717255327 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.717430743 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.718394171 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.718028437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.717144647 seconds)
  done (took 39.445190873 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.717987885 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.716733096 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.732572818 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.738229966 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.738124817 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.75020127 seconds)
  done (took 12.046361197 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718431933 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718810043 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.718713594 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720375134 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71965381 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719048636 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717904779 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719087127 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718116498 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719150822 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718677777 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719493738 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718739002 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718686574 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719229063 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719532342 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718111801 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719730657 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71985129 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718490475 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720076658 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721536719 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719581696 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718834734 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719725145 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719498567 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719505555 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719892484 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719132668 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719443704 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720312693 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719641279 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719590568 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720152832 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720324245 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720153397 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720355422 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719916746 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721764481 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720794891 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.720522835 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719657763 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719861975 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720937785 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721379131 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719844188 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721084546 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720056223 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721121914 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720967067 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721101772 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720282085 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720394375 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721649687 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722139626 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721087723 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72502562 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721461924 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720588898 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72142572 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72217008 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721342068 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721143448 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721059554 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721498575 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720754126 seconds)
  done (took 115.183818768 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722156477 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.721445443 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721334655 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721865385 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72231312 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72175536 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723602659 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721834427 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722960979 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722486458 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721908939 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721842655 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721401494 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721893809 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722297251 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722161053 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721441013 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722233382 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722734319 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722535646 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72354125 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723188989 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722727241 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722562293 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725058622 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722147568 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722179567 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722509458 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722231533 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723311484 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723871868 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722172014 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723310266 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.722596083 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728543117 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723005724 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722622828 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723552114 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723936474 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723897735 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72409175 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726291538 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723752786 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723132383 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72438779 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72381181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723105371 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.724481011 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723827517 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724072265 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724742634 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.724059739 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72505235 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723760741 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724169441 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724992646 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724543537 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723929764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724555714 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725979616 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724661114 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723939906 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724985594 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724175054 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724140325 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724337724 seconds)
  done (took 115.399732037 seconds)
done (took 2353.18946634 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.739883267 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.766265238 seconds)
  done (took 15.165433711 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.888238234 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.84161137 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.726967553 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.729088792 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.72734444 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.750537594 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.743747731 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.72682639 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.729033056 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.72709317 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.727295038 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.91201744 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.78771587 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.727802515 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.727852908 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.82025005 seconds)
  done (took 49.957896362 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.730239475 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.732361374 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.740888223 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.733485868 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.730339282 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.743939493 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.761305335 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.73538677 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.764610596 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.741574828 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.7997583 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.741735826 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.73046195 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.779647884 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.742966377 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.745303817 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.82260816 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.806064811 seconds)
  done (took 33.243388295 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.808083721 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.735952811 seconds)
  done (took 10.212456983 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.745343592 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.730035848 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.786317461 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.747602741 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.741289534 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.727228107 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.74994613 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.756086255 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.736408841 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.749444891 seconds)
  done (took 69.133529461 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.736590775 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.735034889 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.733274608 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.730182386 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.728577525 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.730884209 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.729126198 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.732859779 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.385643147 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.7664144 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.737945726 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.736296776 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.730723378 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.731567899 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.729718069 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.7533594 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.847445207 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.728448652 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.729917475 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.737581063 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.731075745 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.780918485 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.743653087 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.732926447 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.760525752 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.386933528 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.739564598 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.736837561 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.846954572 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.729722158 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.733901807 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.916985924 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.733672386 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.186770898 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.998995961 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.737608425 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.744614485 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.739400256 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.729963667 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.844152932 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.733421323 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.737734211 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.668846138 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.991784762 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.837771556 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.777169642 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.036795277 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.748715852 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.732127098 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.75924583 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.735739744 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.732886143 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.746317127 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.245682739 seconds)
  done (took 125.173781694 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.730621176 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.076153513 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.895579358 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.732447643 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011837879 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.938377904 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.731419468 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.775303677 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.733331094 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956359943 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.991036967 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.834767655 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.731375985 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.730158508 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.729131596 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.731047295 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.882342869 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.801113768 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.733898727 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.73006684 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.757610173 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968666086 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.852091349 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.73293146 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.756813532 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.940578073 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.852538764 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.831443408 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.508514789 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.728917854 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.791325113 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.733084379 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.730697384 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.729903061 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.884672572 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.824020214 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.812033576 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.733365811 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.730774725 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.729436294 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.478449552 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.93040328 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.825854033 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.86008805 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.982868433 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.934049305 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.509821241 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.729787497 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.463338675 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.893034286 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.958656801 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.958265363 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.852790471 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.734310455 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.258192225 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.730395063 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.729899328 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.979355379 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.952352081 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.827851202 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.734188295 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.731727229 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.730914716 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.018971104 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.735097661 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.825885584 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.734310093 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.73423502 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.827409796 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.829336052 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.962013717 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943879868 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.76248185 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.072526058 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.242096185 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.97722341 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.797465805 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980676116 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.733704347 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.732603548 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810045692 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.575273927 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.984365685 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.012632528 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.975939557 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.766979095 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.451502094 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.732692802 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.955956654 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.953338997 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.990846561 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.976353372 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.970069208 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.067151466 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.733628788 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.73341551 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.956679745 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.856583649 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.736635221 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.080606408 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962096497 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.257825018 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.758618141 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.0351324 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.864039643 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.736295125 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.36009053 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.734423652 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.961610459 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.773299309 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.735709876 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.734666558 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.95100268 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.719137411 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.735549851 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.693539839 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.794732819 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.737795814 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964293325 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.736717575 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.001121377 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.737486676 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.969304069 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.157716851 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.764381057 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.962275852 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.981440809 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.738950818 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.972369988 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.976793792 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.849018096 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.01020516 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.633148044 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.736157034 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019516071 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.737976412 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.734764214 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.903296132 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.738933978 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.876493604 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.73871471 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.025781238 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75540154 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964676793 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.738016523 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.987950486 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.769957098 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.788284168 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.739663889 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.865426873 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.739466654 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.562329959 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.891010652 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.7371996 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.737891243 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.532645304 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.736289189 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.328709676 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.963160781 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.756675506 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806696862 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.39499034 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.735729389 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.815486503 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.75835527 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.118540741 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.736067783 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.988275215 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.738653573 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.734827899 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.735480442 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.021939663 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.972578161 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.740920695 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.735736505 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.640022822 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.738704738 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.736025793 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.916347659 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.085021459 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.737382648 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.937382651 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.741480015 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.863652532 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.739211567 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.812864545 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.074360586 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.736513241 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.738762075 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.737065097 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.736731521 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.738341519 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.998220912 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.76209082 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.24254227 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.874969619 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009011026 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.045334652 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.976859662 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.779768662 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.740479795 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990333272 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.741204282 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.799580425 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.743664478 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.757435791 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964192875 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.742734288 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.946759794 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.007775202 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.582989999 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.785430137 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.742159554 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.739856255 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.738139551 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.883130095 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.820223327 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.741323067 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.739759777 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.853772465 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.85934719 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.945351121 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.740378056 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.77427337 seconds)
  done (took 873.719396184 seconds)
done (took 1178.267372728 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.738520595 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.742252062 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.742902652 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.743740609 seconds)
  done (took 28.6408889 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.742428084 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.740536343 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.740929148 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.740588795 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.74140496 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.741669772 seconds)
  done (took 12.120284148 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.738243086 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.742799429 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.74422297 seconds)
  done (took 20.899724828 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.812756641 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.1233392 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.877239164 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.156227072 seconds)
  done (took 9.643070779 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.741947266 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.74173983 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.741541747 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.742791813 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.743865104 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.744510484 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.742848464 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.742634766 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.744545232 seconds)
  done (took 17.362347433 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.849846841 seconds)
done (took 94.191076475 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.831260651 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.739146246 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.381767791 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.82180362 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.836969962 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.80571455 seconds)
    (7/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.891201621 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.838461138 seconds)
    (9/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.929707654 seconds)
    (10/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.827388536 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.026789726 seconds)
    (12/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.911086062 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.745032064 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.742042617 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.852574445 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.741713598 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.74009979 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.577944448 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.109679959 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.876568502 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.741557812 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.819550438 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.746289392 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.763080227 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.872136003 seconds)
    (26/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.819426302 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.050424211 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.747049225 seconds)
    (29/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.966613465 seconds)
    (30/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.973421104 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.875500213 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.872803405 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.909558096 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.763762312 seconds)
    (35/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.604170266 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.833577955 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.746132183 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.696081957 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.74570777 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.674285285 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.703742423 seconds)
    (42/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.192179897 seconds)
    (43/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.035398513 seconds)
    (44/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.875534879 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.745635817 seconds)
    (46/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 3.713483481 seconds)
    (47/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.754378996 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.911477669 seconds)
    (49/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.110099691 seconds)
    (50/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.925210165 seconds)
    (51/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.917395988 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.121329238 seconds)
    (53/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.851058454 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.052879763 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.41484299 seconds)
    (56/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.756581246 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.862773025 seconds)
    (58/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.834263439 seconds)
    (59/309) benchmarking ("sort", Bool, false)...
    done (took 1.963898146 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.983038809 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.744249095 seconds)
    (62/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.09167489 seconds)
    (63/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.912669099 seconds)
    (64/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.829505898 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.745960463 seconds)
    (66/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.113848849 seconds)
    (67/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.87654885 seconds)
    (68/309) benchmarking ("sort", Int64, false)...
    done (took 5.401616954 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.879790964 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.991586018 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.534094418 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.845148739 seconds)
    (73/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.745703786 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.633015447 seconds)
    (75/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.75043663 seconds)
    (76/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.759462573 seconds)
    (77/309) benchmarking ("sort", BigInt, false)...
    done (took 6.743004151 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.062892954 seconds)
    (79/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.637365472 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.783854621 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.743466776 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.804368838 seconds)
    (83/309) benchmarking ("sort", Float32, false)...
    done (took 5.429536497 seconds)
    (84/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.841728444 seconds)
    (85/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.392752312 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.748268925 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.138511165 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.745753077 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.42212294 seconds)
    (90/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.767211923 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.744230514 seconds)
    (92/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.765130972 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.754086536 seconds)
    (94/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.744881396 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.931716747 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.95251407 seconds)
    (97/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.769718223 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.084724959 seconds)
    (99/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.816192953 seconds)
    (100/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.106766068 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.750201152 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.631904071 seconds)
    (103/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.826740162 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.833126113 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.745896431 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.911490148 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.930173774 seconds)
    (108/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.883449467 seconds)
    (109/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.196665542 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.492536454 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.091588307 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.749950493 seconds)
    (113/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.253122843 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.06844479 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.768302228 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.873625454 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.749314894 seconds)
    (118/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.944568617 seconds)
    (119/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.108458223 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.753521789 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.751054855 seconds)
    (122/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.643775989 seconds)
    (123/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.036005013 seconds)
    (124/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.886638194 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.756254079 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.782516382 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.883504697 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.949420019 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.769509971 seconds)
    (130/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.751884526 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.139667965 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.878942107 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.98341018 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.867190081 seconds)
    (135/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.002559613 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.385627865 seconds)
    (137/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.780479559 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.748067427 seconds)
    (139/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.662285307 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.192182412 seconds)
    (141/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.752961729 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.840122883 seconds)
    (143/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.489365596 seconds)
    (144/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.760195086 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.747369595 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.845997639 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.999457456 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.381950701 seconds)
    (149/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.835902507 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.945254394 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.005625751 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.553185115 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.660610766 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.534439088 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.852545476 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.751940802 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.774680099 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.296703809 seconds)
    (159/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.877050228 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.915084878 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.758589885 seconds)
    (162/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.643373677 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.754857057 seconds)
    (164/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.749176409 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 8.220524974 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.743816222 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.772777069 seconds)
    (168/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.87959014 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.365460061 seconds)
    (170/309) benchmarking ("sort", Int8, false)...
    done (took 4.649608117 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.146004379 seconds)
    (172/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.993460323 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.858356204 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.017227581 seconds)
    (175/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.846074839 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.854426403 seconds)
    (177/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.438034849 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.753780247 seconds)
    (179/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.935563074 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.146098156 seconds)
    (181/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.774538537 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.885160851 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.809004596 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.748572999 seconds)
    (185/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.145050121 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.880620363 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.74999295 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.854798608 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.012115116 seconds)
    (190/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.00503451 seconds)
    (191/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.755733746 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.196916124 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.066555973 seconds)
    (194/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.243836129 seconds)
    (195/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.1360024 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.755181612 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.974568914 seconds)
    (198/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.204330826 seconds)
    (199/309) benchmarking ("sort", Float64, false)...
    done (took 5.520665787 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.933829449 seconds)
    (201/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.778117841 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.074733225 seconds)
    (203/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.824659741 seconds)
    (204/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.832370788 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.752895219 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.948261269 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.916810563 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.891318406 seconds)
    (209/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.208217787 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.972338969 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.067702379 seconds)
    (212/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.071889751 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.719309601 seconds)
    (214/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.943124148 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.985218408 seconds)
    (216/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.129042759 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.722562596 seconds)
    (218/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.867159658 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.00403815 seconds)
    (220/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.755559754 seconds)
    (221/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.455697567 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.404481011 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.948297193 seconds)
    (224/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.85887106 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.754628285 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.977484001 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.652963991 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.070150203 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.130843243 seconds)
    (230/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.758170902 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.871713752 seconds)
    (232/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.751538441 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.753346711 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.078665375 seconds)
    (235/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.795802366 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.971335387 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.970745765 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.762545502 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.510301412 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.928540553 seconds)
    (241/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.785741491 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.015069771 seconds)
    (243/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.756626956 seconds)
    (244/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.257457387 seconds)
    (245/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.077287679 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.703560248 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.866067751 seconds)
    (248/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.774850978 seconds)
    (249/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.752334525 seconds)
    (250/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.181438563 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.757865403 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.045453144 seconds)
    (253/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.853366984 seconds)
    (254/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.134087221 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.757818539 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.568731202 seconds)
    (257/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.756823476 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.858671948 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.071571544 seconds)
    (260/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.5414356 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.931758455 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.430059885 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.756065764 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.253576601 seconds)
    (265/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.861062937 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.892724993 seconds)
    (267/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.028202698 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.772210152 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.982818642 seconds)
    (270/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.004446344 seconds)
    (271/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.85801063 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.077541113 seconds)
    (273/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.844930613 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.949209375 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.077104877 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.104550491 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.754047096 seconds)
    (278/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.950986805 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.776687166 seconds)
    (280/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.997923507 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.893165327 seconds)
    (282/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.900688974 seconds)
    (283/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.762259754 seconds)
    (284/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.00454258 seconds)
    (285/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.756285376 seconds)
    (286/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.06364813 seconds)
    (287/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.695993881 seconds)
    (288/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.787220532 seconds)
    (289/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.756065353 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.509438351 seconds)
    (291/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.757175854 seconds)
    (292/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.978194523 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.755495999 seconds)
    (294/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.870811765 seconds)
    (295/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.759181702 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.737999 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.061873921 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.156999242 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.790570421 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.069372569 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.778174583 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.755669796 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.728135655 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.849443 seconds)
    (305/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.844071149 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.965236238 seconds)
    (307/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.094355411 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.801449257 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.052917886 seconds)
  done (took 970.700602162 seconds)
done (took 972.441766709 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.783422364 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.776729133 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.759603048 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.782051832 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.872828443 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.806180426 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.77361205 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.764105955 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.810731055 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.81161372 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.759903365 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.804686934 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.763015663 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.762939072 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.764023067 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.777734564 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.066731932 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.791082719 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.780303992 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.773674295 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.779421979 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.760067611 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.811450832 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.805917054 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.765041287 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.766207962 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.765595487 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.78112949 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.874696773 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.764933598 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.767761983 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.775452372 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.070642025 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.788015871 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.760128035 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.782169001 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.775293799 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.774417196 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.767136299 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.795769722 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.154356233 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.798574914 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.762846388 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.763003772 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.763058583 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.769712467 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.763587032 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.772302191 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.778855826 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.778289636 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.147985057 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.815270038 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.766215409 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.762609688 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.776283628 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.764413056 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.767821225 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.779632903 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.78346192 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.7799589 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.055305024 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.798066661 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.767086551 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.781780598 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.772943541 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.184054506 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.799942196 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.770835835 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.155868778 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.808357708 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.184254495 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.812066569 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.767387421 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.778404002 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.799225544 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.070643916 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.790708174 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.763406802 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.772652145 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.762996862 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.778766664 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.780046243 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.7702001 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.764472772 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.781669743 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.810432804 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.778282621 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.765398466 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.775235622 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.783788618 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.774934454 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.778379697 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.769599668 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.762412103 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.777270777 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.769563989 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.767371293 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.770433818 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.769785692 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.778165522 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.154737611 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.81988225 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.763224445 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.762984719 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.765682057 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.780896311 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.155237614 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.80465602 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.789568122 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.815831768 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.767150864 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.056599024 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.797521898 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.786592066 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.77910125 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.768735417 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.764315965 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.055484335 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.180508115 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.817629466 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.766287349 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.765091528 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.782733351 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.769701478 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.764681051 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.072381478 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.7987651 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.783444213 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.889259853 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.781207509 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.804142199 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.765521252 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.770864725 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.815991702 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.784610979 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.799892295 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.769882282 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.783500569 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.785244193 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.764193138 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.77960281 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.780730307 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.767944812 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.775106582 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.764682693 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.816812912 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.783038843 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.784922874 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.78797253 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.889961985 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.764978203 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.055747539 seconds)
done (took 277.921035611 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.843671989 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.766258517 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.856886414 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.764809494 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.853207473 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.83883422 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.77345682 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.772182962 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.765137965 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.265508549 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.765449212 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.772350441 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.76512743 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.767181696 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.83470168 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.765520815 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.765577633 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.213906343 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.767580042 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.846919344 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.765608551 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.767167217 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.767008187 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.25144884 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.763815905 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.76584504 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.845466266 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.766917768 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.20369067 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.763750417 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.763031288 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.199741894 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.844380631 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.793757231 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.772963193 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.773086962 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.854518158 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.774819363 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.83264806 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.835616352 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.856381211 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.799770519 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.763685518 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.764094911 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.767419866 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.766509335 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.764010954 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.796489345 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.764794605 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.771331308 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.212671265 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.769654987 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.772238955 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.764130875 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.765764041 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.793283704 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.765980137 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.765739888 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.844535809 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.764798215 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.831404656 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.251036694 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.265624302 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.769996459 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.765776102 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.766939625 seconds)
  done (took 178.252937103 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.830811658 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.843571525 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.831043529 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.769175998 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.815800395 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.831235999 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.768345327 seconds)
  done (took 14.388181106 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.773206702 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.765089876 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.816317627 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.816079063 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.764331081 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.920751023 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.765211726 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.774931187 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.769297721 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.791636716 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.764997186 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.764800609 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.771598251 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.763921898 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.814311735 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.775922356 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.881724007 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.766365898 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.764087314 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.912560303 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.769252892 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.770859122 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.78887769 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.775562116 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.763739407 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.771488437 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.381616068 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.764079936 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.764550801 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.763731915 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.764510276 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.805425795 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.763230501 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.765652944 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.76414484 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.877352825 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.763862513 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.764766042 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.764362586 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.763361877 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.763000263 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.763779556 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.763233177 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.762573341 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.764168348 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.786657237 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.763139812 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.762550482 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.763583646 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.763232009 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.788048244 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.763819451 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.763388589 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.769036598 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.806300536 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.767879886 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.765043509 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.763674727 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.763128973 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.764136618 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.912326056 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.816545581 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.763705939 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.813368924 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.7637837 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.764432609 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.763451105 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.764035686 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.853615672 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.765866711 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.81338636 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.76348587 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.923772268 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.786785311 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.765018957 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.768810478 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.768676067 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.764525303 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.764779707 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.770738369 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.764264596 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.765854416 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.771432036 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.769494581 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.764467518 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.900953171 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.904571126 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.764327456 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.76486984 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.772142725 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.764800485 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.808702059 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.765946129 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.763252644 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819953692 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.880352161 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.791125334 seconds)
  done (took 195.526769582 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.771298776 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.771747916 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.764804268 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.780117286 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.76523159 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.76534926 seconds)
  done (took 12.314157408 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.766058644 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.767482977 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.764241783 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.762718801 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.764569605 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.763102878 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.763951604 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.765460088 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.769222364 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.76389472 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.764818198 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.764599304 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.764662064 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.765565088 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.764627129 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.764062663 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.765019505 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.764395991 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.763542624 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.765631516 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.021425194 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.763947399 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.764214224 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.768629613 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.770274997 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.766130787 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.779426281 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.764684487 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.765042858 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.773006441 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.770563008 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.767222142 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.769146813 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.771524893 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.769936509 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.76830055 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.76890477 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.766768936 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.765636615 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.76569846 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.765855464 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.766705587 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.766200386 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.766025888 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.767917909 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.772925072 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.770294187 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.778870023 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.767371935 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.765248774 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.766139816 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.765126248 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.766698537 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.76558522 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.770571825 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.772015777 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.770916042 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.765116923 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.766201261 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.770276286 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.76900535 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.76551964 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.767155794 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.76916681 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.770562726 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.76597155 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.769990755 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.769821351 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.76595746 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.766428028 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.766501877 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.766475109 seconds)
  done (took 130.194399067 seconds)
done (took 532.392206168 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.765009239 seconds)
  done (took 8.462200188 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.926294755 seconds)
  done (took 8.678892872 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.181750684 seconds)
  done (took 9.894896186 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.817664704 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.795569451 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.79422623 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.788998086 seconds)
  done (took 28.934955375 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.004545117 seconds)
  done (took 8.714927497 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.801306486 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.779512388 seconds)
  done (took 15.362686724 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.817991388 seconds)
  done (took 8.528351508 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.779419108 seconds)
  done (took 8.494496098 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.800913246 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.795665682 seconds)
  done (took 15.328573924 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.785098079 seconds)
  done (took 8.491158197 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.98459438 seconds)
  done (took 9.793498934 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.793801161 seconds)
  done (took 8.572758702 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.845893786 seconds)
  done (took 8.551790338 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.782110568 seconds)
  done (took 8.491260615 seconds)
done (took 157.999921136 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.784094844 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.780120918 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.781336546 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.775363227 seconds)
  done (took 28.824793429 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.812395185 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.810465097 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.812746816 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.823443629 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.814357663 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.813182761 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.804629577 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.805620993 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.820998475 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.812034348 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.815385018 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.81277294 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.81419234 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.803077583 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.816374356 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.812481571 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.820021683 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.809095776 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.805145127 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.811277497 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.775326287 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.814669165 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.808920904 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.772316508 seconds)
  done (took 45.129267026 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.965203347 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.847212695 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.928024087 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.828123567 seconds)
  done (took 9.269570104 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.82910155 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.828069333 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.835244129 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.875801726 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.897457316 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.835625282 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.796428708 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.792040387 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.777197309 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.824221016 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.901355906 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.818940643 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.907646928 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.771507927 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.957791778 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.770339707 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.768350972 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.819509779 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.870120306 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.883884474 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.768990614 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.818685896 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.823018499 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.814842299 seconds)
  done (took 45.689950981 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.768220446 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.77595372 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.776047076 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.773366473 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.768552738 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.769901882 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.774784728 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.769498366 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.789673782 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.766464791 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.764219316 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.765475151 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.771260479 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.76626692 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.769188414 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.776757555 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.778160011 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.763738975 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.766396657 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.771572723 seconds)
  done (took 37.119925782 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.757895363 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.60998891 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.101076361 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.010830457 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.758935004 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.756154557 seconds)
  done (took 30.684800178 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.768100208 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.764460089 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.756789943 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.815108327 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.893175406 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.757786067 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.752865311 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.765152921 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.794656815 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.821002551 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.771934385 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.784453473 seconds)
  done (took 23.13174591 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.754877842 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.757741014 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.756900377 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.768309479 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.763903086 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.76560252 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.766263859 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.75647973 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.769990398 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.776356603 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.765433677 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.770961501 seconds)
  done (took 42.860226616 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833399299 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.631471228 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207410237 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21936726 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278624257 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957969061 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.755236227 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.839477073 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.757399341 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.024492246 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.069426658 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275616287 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.031434586 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785208467 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.875370325 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.261340997 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068248578 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991884734 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803481027 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375904838 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885731807 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401432181 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.460425236 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886958512 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985346838 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.902887032 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.038767001 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.726226792 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825420832 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.783024806 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784603075 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778182021 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047388791 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896745303 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844739136 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780836105 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.192682052 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.48414502 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.787008412 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.449298252 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.333532937 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900648903 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786902671 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781672556 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.707005028 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361416063 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874615803 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.78134131 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.479469864 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.779519785 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.782651791 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849522894 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.776517066 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.583143256 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460893418 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.043719631 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.774339005 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778647105 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335222579 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752441222 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47398049 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.723655657 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.866557918 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.457274581 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236782768 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.936206822 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.778166207 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783949239 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.705688599 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.45191959 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897840098 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917048012 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.802109346 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421967756 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093667915 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.279470406 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837986655 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061891792 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.734351595 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.720738835 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9982864 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.732294395 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708962795 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.627421763 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.705073726 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989593306 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810104149 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.36948707 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812602866 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.858878846 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.782806402 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792915159 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780200476 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.989095363 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.675343696 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774909136 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.069248401 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042999439 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801474101 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.869052432 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712238567 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.787650171 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029282174 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.98820832 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.119217627 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.277142314 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871306233 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787880661 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.804163798 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.785428319 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.799513851 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.05267128 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844351337 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792381809 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904972891 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.743636081 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030380068 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813873154 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.891196065 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.168825898 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027596563 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.124776442 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.031456751 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851567271 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.791444413 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.787755168 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.473759573 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398651822 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.003658171 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.805361984 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40390846 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.802016576 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.788243416 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723049102 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.609242359 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.15832048 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.879246964 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.003047713 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.790490501 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065114215 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714287475 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925038203 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.805215698 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.002239895 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.423327728 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.86699824 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039428657 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.121432169 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.120704034 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805633877 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803010303 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88142445 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805236488 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.299780666 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042817817 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.791918415 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.794908473 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.449516271 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.844827605 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794197955 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.791428204 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.314252572 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058274186 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.808626862 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.796655643 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.662898686 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.801321508 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852232311 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.792795007 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.793105638 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.33835859 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.294074054 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.795560578 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.455097166 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005775405 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79305152 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.44318488 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972796329 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.802918058 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052711435 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852853211 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.717577669 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.490836165 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.491442584 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791819214 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.718651465 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.791997594 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793387725 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796444079 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.978167941 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060117367 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839274036 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.399851395 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.898024494 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796000575 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.793070472 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791914064 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.30881061 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784889558 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.483101323 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.805944463 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920724369 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.802378561 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.720522871 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.793387191 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793108349 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.79149763 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.738462748 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837794391 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.401418647 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998410041 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04110187 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.197637564 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800779504 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.403929348 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.912011265 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.810092334 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.079011944 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.514739079 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.804997309 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876130902 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.800364707 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.398451455 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.525596462 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35684849 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077728689 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105236432 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134729655 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.3716986 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.017214767 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.879125216 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019790112 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.313775245 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851719929 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882130188 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729147912 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807603373 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.430319272 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200505057 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804651699 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008946056 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078081356 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.136388412 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92686977 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995989172 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822622249 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.788276709 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.719007231 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.332524523 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808957004 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.24410255 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99831728 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872774137 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.071570755 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.873765681 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.791871455 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127626136 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829280158 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.496334564 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.146714937 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414168796 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.148341265 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017292881 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.794219904 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.227010275 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133565311 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.177542444 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.806511112 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712889064 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.789451379 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.788304848 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.800660358 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.757114955 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.669004819 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.025135301 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78795334 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008549743 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.11407775 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03733487 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.683063683 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.781755883 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781926578 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017531161 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.652775934 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828731712 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.288077932 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.249474194 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778486998 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.695665587 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695844978 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.469589576 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.767048237 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735668067 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974642902 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.862652537 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.443868643 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341183341 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970664941 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.005636031 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.771014491 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025825513 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031301223 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.25173674 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780884894 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.856902014 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.065020233 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.458849975 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.976157477 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.988041418 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292797603 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.979503634 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213119413 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.736092939 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.761490565 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968819079 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.976529145 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.112226633 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941221117 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.47585221 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.776928981 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129799443 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822282224 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.115800258 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.955058318 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.859012059 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772592714 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841866309 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76913023 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.772806838 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.771148969 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777008488 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.127108889 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887844844 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.778137777 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842272651 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765625826 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.357915732 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.789957672 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048851686 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127042755 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.107476038 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843254736 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.78085342 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790910907 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70723291 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910886689 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.221043444 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055455417 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.902285607 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.91411985 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802672403 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.083330146 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.239148767 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987963441 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054785289 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.664333923 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477369451 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.913307701 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.998913522 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788053098 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.985370994 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998844664 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08293061 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341895212 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.127671258 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.868403824 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054845754 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.142722318 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.783503172 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360418627 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.796359587 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199409924 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.815654543 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.151849672 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042281962 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.786790762 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902430947 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.786188017 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.982061645 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.233598284 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.400133177 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13837931 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649240462 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.793774519 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059650889 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113253896 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095443461 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868733607 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796489354 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.482036725 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92311351 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.671281179 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.020684462 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.792547881 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99628717 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.502692123 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.79625961 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058496689 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09693862 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.7929586 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.693841645 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818597747 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.795682712 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.007737989 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001992349 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035230345 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796185884 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.80007469 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.599613746 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061804917 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853164634 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718678687 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.795098672 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839692603 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.019091562 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.812068026 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.307623163 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.493864917 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065944819 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.699473392 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811140492 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.249985923 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177990429 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116050924 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.322333168 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014105327 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.344407718 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.694265201 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183782808 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.79655763 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.249431058 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186565407 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.795845946 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.360721921 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916830699 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.059070249 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119520944 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.814365201 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483206446 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.837696036 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019351515 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.163606481 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735774575 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.807062266 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.857077213 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.804988417 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.799155279 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.812283729 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.734477919 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326580226 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.651650497 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358486358 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.801943465 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.811052173 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.140141907 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387868026 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917075688 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811367627 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799065081 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.496180873 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.079318087 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.035101534 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.367559782 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.896488101 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.79184526 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787253394 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.706322528 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969655436 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.974903683 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079716967 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.193222199 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.907420917 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788401676 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.994561027 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989225605 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.1543688 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922537963 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.970380647 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912636318 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.733069108 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.496212895 seconds)
  done (took 1623.519096926 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.789990346 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.833698262 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.808015362 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.875782842 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.861318744 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.83830802 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.868127422 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.822388818 seconds)
  done (took 56.418567192 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.789592628 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.950790724 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.791522668 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.78808826 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.79222444 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.787812973 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.946152212 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.800299963 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.830935578 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.793419464 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.789963191 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.787873956 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.06850336 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.809917382 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.787768653 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.812035116 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.791918051 seconds)
  done (took 72.902036405 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.789718792 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.045948371 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.824217356 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.788892374 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.804187434 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.80303176 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.89892352 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.820939467 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.794050375 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.044961095 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.085156564 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.807029558 seconds)
  done (took 89.227338917 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.803091655 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.791603627 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.790636218 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.79240412 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.791242868 seconds)
  done (took 10.698026965 seconds)
done (took 2117.212420886 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.019259652 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.983537865 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.033900946 seconds)
  done (took 5.736388439 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.937110374 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.98744598 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.099974766 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.105563564 seconds)
  done (took 9.860957346 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.098508801 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.177205568 seconds)
  done (took 6.001687613 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.114490711 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.827417893 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.209244714 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.796073115 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.799021238 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.799438405 seconds)
  done (took 22.126848183 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.797137379 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.797652678 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.796425681 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.798173146 seconds)
  done (took 8.915516047 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.798642199 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.52787018 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.799749922 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.808128121 seconds)
  done (took 20.661403461 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.944111947 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.912879172 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.940439407 seconds)
  done (took 7.52499765 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.937737422 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.028694307 seconds)
  done (took 6.69329022 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.956546965 seconds)
  done (took 3.682805879 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.82615496 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.067490549 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.291700608 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.321304948 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.395932976 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.689143305 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.110782871 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.02158486 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.23784263 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.248625198 seconds)
  done (took 23.938588341 seconds)
done (took 130.034251602 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.136530344 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.824975726 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.995088085 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.145589788 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.029842874 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.995512209 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.01767709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.136097724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.829276575 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.817899988 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.156680086 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.035689231 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.965539691 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.813489916 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.970863516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.815311323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.024841223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.160332743 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.836200779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.07378045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.027585536 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.796724649 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.993848726 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.812886846 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.02888775 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.946692889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.340421509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.819573159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.97341589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.354897073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952748521 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.221120338 seconds)
  done (took 165.779455605 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.799723683 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.799532561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.800239799 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.799264618 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.343027797 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.800199162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.800653242 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.79866729 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.229368146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.225862173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.801370408 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.333105263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.801855699 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.79902273 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.80189769 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.800878694 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.41203886 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.799897911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.800069653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.798761488 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.80177398 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.165079304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.801261106 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.174206291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.409331832 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.800263173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.80029752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.80029138 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.803313517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.799515098 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.801297753 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.799271275 seconds)
  done (took 207.23419859 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.726723396 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.801603984 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.806075941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.801948121 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.800340604 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.799351161 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.801924531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.800998165 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.551475695 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.549758399 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.802022242 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.802782125 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.800533915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.80232839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.803930035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.801940785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.801420781 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.775954447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.802750186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.803936426 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.80436924 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.414061777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.802953601 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.421990809 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.803886934 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.80243264 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.802672138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.802821674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.803195446 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.804495305 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.80417857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.802464619 seconds)
  done (took 218.040069772 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.041001622 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.802476614 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.804198341 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.716758971 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.80183981 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.802445112 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.791148077 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.048966246 seconds)
  done (took 18.543888026 seconds)
done (took 611.33564322 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.142952169 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.990269741 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.983055222 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.828567561 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.057107016 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.870688598 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.825438011 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.890817696 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.642431427 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.899800713 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.483841403 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.85017991 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.575502592 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.85780653 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.947812749 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.883831591 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.371256204 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.473205084 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.996240008 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.872903441 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.002117526 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.730685033 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.909186518 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.678067313 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.606463455 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.787698177 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.840672471 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.38025039 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.836740842 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.982654884 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.494636068 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.086397471 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.84476052 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.823252834 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.878126563 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.856100955 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.021386551 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.83907615 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.951634741 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.524066582 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.894350477 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.548464612 seconds)
  done (took 99.695196392 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.821720997 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.815911379 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.81679909 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.815859394 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.826172888 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.81498766 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.815327256 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.816229931 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.815519965 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.815554272 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.815030114 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.825794017 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.81611268 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.825748811 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.815659961 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.818212705 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.817387578 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.825365538 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.816733003 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.818094315 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.818939667 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.817325077 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.806544815 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.816832699 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.816950696 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.815861695 seconds)
  done (took 49.008946371 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.807457727 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.974953882 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.052179951 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.827932463 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.807126049 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.808037722 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.824643849 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.81246466 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.809869135 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.811258898 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.903416987 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.813527819 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.825296336 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.051734818 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.823385385 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.80816868 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.807199619 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.8081503 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.983984987 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.822841439 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.827505884 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.810343062 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.82422949 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.820883894 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.810245155 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.809188136 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.812682022 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.255478497 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.818111857 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.905461054 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.853715498 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.832053974 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.199742137 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.065701877 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.864677096 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.817139963 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.808879874 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.909642379 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.815732391 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.809958143 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.827479973 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.815639313 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.052661963 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.322519532 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.823916846 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.808083485 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.264293983 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.917478821 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.85196774 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.819729811 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.054487631 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.827140459 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.810468548 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.811697014 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.84689447 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.816138457 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.809785794 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.129858078 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.822838808 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.828104113 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.814315652 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.812205112 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.989529093 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.81864237 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.977388694 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.820220839 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.816880793 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.810097273 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.088579091 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.846031149 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.337526689 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.824362202 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.810678258 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.909121892 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.985239266 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.293933456 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.82387046 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.991348166 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.218713877 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.835112038 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.817405047 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.246760623 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.837961503 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.81878478 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.811372294 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.81261888 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.812021629 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.854074216 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.828521196 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.25643971 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.337499762 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.14219591 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.837862609 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.827465599 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.812234359 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.122727958 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.819625769 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.810974764 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.050792886 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.342211045 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.827768947 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.818809159 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.320632893 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.82874082 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.830747518 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.819800773 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.063740809 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.828646304 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.855231269 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.811300429 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.818855067 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.813575319 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.830023629 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.819301309 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.811484828 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.310225288 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.927419334 seconds)
  done (took 225.217144512 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.813112562 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.8156507 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.81195585 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.816688688 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.81088225 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.812277338 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.811784524 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.811209554 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.811951283 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.811272957 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.812406284 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.814179086 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.815145134 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.817662757 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.819314308 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.812864861 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.417855061 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.812299483 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.812451746 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.810924893 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.454142414 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.816652934 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.81408199 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.812543267 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.812442319 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.810383991 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.814856381 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.81801023 seconds)
  done (took 165.769815552 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.814278185 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.925985928 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.838950054 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.842424408 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.821117612 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.813373286 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.912037159 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.836961434 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.819009303 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.813809636 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.814325704 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.873185469 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.824871069 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.911919446 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.847365943 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.921922879 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.921642579 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.822722686 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.813244735 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.814350842 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.843414826 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.824875378 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.87361987 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.937418808 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.838473426 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.928003284 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.838653867 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.815786168 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.814697758 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.925977996 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.836708153 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.874485959 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.844118167 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.833032851 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.931707919 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.935494667 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.922450047 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.922191022 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.825377491 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.815581055 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.816333807 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.818186767 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.928602149 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.838685857 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.817714427 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.932616494 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.838206405 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.816146152 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.815755787 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.816952942 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.829429927 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.834565119 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.880268549 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.946053879 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.858712906 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.839648242 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.91462615 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.951250801 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.817540241 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.913859896 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.829085421 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.929200937 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.840631483 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.818107006 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.819334419 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.820676792 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.847701169 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.921978145 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.925586601 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.827671169 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.914199425 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.856702267 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.825039596 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.818343326 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.820591779 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.929430138 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.938859266 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.858007494 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.854836091 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.848383111 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.828193118 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.817137105 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.820373642 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.83552676 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.823934691 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.929883504 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.939822836 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.829209972 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.817988505 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.818692795 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.820016257 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.843714994 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.939655331 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.859907151 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.926954223 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.888755336 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.892348619 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.833765668 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.832192546 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.823943819 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.879245292 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.835250777 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.830190957 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.120918586 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.877645091 seconds)
  done (took 197.26570371 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.18992055 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.869587501 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.874178254 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.20324555 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.165823656 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.781529364 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.867575741 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.865535746 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.890240985 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.052511216 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.936003274 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.886580196 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.854029818 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.841257014 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.863035626 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.885672069 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.875200082 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.215233622 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.075759173 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.034693218 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.862853866 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.135444115 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.173962669 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.434491537 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.91727864 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.258294108 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.43269166 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.998605701 seconds)
  done (took 60.196909347 seconds)
done (took 798.887894641 seconds)
SAVING RESULT...
DONE!
