cset: moving following pidspec: 9294
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.397527348 seconds)
loading group "string"... done (took 0.589108953 seconds)
loading group "linalg"... done (took 7.728976523 seconds)
loading group "parallel"... done (took 0.176238199 seconds)
loading group "find"... done (took 1.141747541 seconds)
loading group "tuple"... done (took 1.89617709 seconds)
loading group "dates"... done (took 1.23816139 seconds)
loading group "micro"... done (took 0.235083481 seconds)
loading group "io"... done (took 0.944708837 seconds)
loading group "scalar"... done (took 37.877431129 seconds)
loading group "sparse"... done (took 11.914858539 seconds)
loading group "broadcast"... done (took 0.948781369 seconds)
loading group "union"... done (took 12.203209382 seconds)
loading group "simd"... done (took 4.487916155 seconds)
loading group "random"... done (took 9.28691572 seconds)
loading group "problem"... done (took 1.843525176 seconds)
loading group "array"... done (took 21.059406421 seconds)
loading group "misc"... done (took 1.701215729 seconds)
loading group "sort"... done (took 3.473989522 seconds)
loading group "collection"... done (took 17.34735042 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.555757553 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133172542 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126309484 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.127174874 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156706774 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123503607 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.134191023 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.093239255 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.897385204 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156200772 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.127861546 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.445067597 seconds)
done (took 5.618026164 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.181151103 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089755095 seconds)
    (2/2) benchmarking "String"...
    done (took 0.090572779 seconds)
  done (took 1.368292064 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071739379 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129892774 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074213599 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074410124 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073486135 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075773508 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07341156 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072879051 seconds)
  done (took 1.762552179 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.080001513 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076707523 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.072145083 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074631744 seconds)
  done (took 1.494572432 seconds)
done (took 6.077679183 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.808475743 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.221045223 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.200400708 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.424851509 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138857116 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.165392702 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.651763501 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329832103 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197305903 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.087260831 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116350973 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.342358192 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116083848 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648239399 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080920265 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097227424 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143713091 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.412955453 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076261648 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088587027 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095260243 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134236969 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.091445149 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080688777 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.15406044 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.074507621 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143883049 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087037532 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.072680061 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221539376 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178643551 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662449625 seconds)
  done (took 10.57208484 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104038719 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104070019 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075184241 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129219407 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103950989 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076464266 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077855692 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073802691 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093648041 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135328704 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095540671 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109176097 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072724431 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.075665174 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.092942045 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211588405 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.086863892 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088247292 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.076783526 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08191842 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11173231 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085678654 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.086599493 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083135685 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13622128 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186289152 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105620528 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103523968 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073060388 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086518379 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122056411 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131447187 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072238831 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.072466051 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130408558 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100605451 seconds)
  done (took 4.878662244 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.016567392 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151486942 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097532691 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143130098 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.071565389 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11606675 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.072663638 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088003931 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21843026 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.351515092 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.638238053 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118462933 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112885779 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07426567 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075486958 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074439649 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.573522818 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103791725 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115545728 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091682714 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077481503 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.076197356 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363081363 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077723588 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072493573 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075459679 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064408459 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13369999 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075153349 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.972098509 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.164709752 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073164843 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107828472 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.173863188 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.233789988 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1517947 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075683247 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.074203341 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162250705 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077742043 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119399708 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.072520043 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091420023 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110677258 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121733845 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072555034 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073719744 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169563432 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.071069268 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087010954 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.143048366 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.161769403 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.086815601 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073645616 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.268915034 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096039169 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076592839 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07145468 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193682669 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135085824 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074804435 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0741118 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075840359 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078770954 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377069579 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.075462681 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.887143143 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07751865 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082608499 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076204571 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075937698 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080402758 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079161301 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09464773 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072529979 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082405628 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.072447987 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073177885 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073357292 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.091018796 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.395290353 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.073207547 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074399933 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.071052 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095932336 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.208920536 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.074556262 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.072536932 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071306168 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106888452 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075102897 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073257288 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115464365 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074050503 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090702006 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076674564 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.120498822 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.073817791 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.108741723 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.077308004 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103193845 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076465482 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.075282122 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105347526 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087310296 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074857399 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.436143248 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07120532 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071930467 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074603112 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075561297 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072490093 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073942668 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.072983582 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085484122 seconds)
  done (took 22.597763035 seconds)
done (took 40.255324507 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.262610559 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080729805 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081694435 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081372437 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081637834 seconds)
  done (took 1.867376459 seconds)
done (took 3.1297153 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.131230463 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107279521 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071939969 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104292551 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070834239 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108975615 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108719344 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.088485844 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107937647 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071193462 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105304655 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071859218 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070687715 seconds)
  done (took 2.499639095 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09096957 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093147975 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077175045 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090838881 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06996514 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089947288 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088482839 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096694522 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089494299 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080014378 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070444008 seconds)
  done (took 2.193350009 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090052279 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091875443 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077012685 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089790488 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070130973 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089528449 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088930168 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094005379 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089413329 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081077554 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070573438 seconds)
  done (took 2.183873503 seconds)
done (took 8.127988916 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.085060657 seconds)
  done (took 1.329125318 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.606548169 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.172259385 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.089232845 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.119887625 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199425067 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.127046658 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.285517921 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.09494915 seconds)
  done (took 9.122998354 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.109485545 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077067125 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077364642 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076331022 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078609546 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075319586 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077354309 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07529086 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075098296 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078174788 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.0763088 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079181029 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075640764 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078418072 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078173423 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076580725 seconds)
  done (took 2.579408409 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098861012 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098754602 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.080857454 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.081507548 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.078568436 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078172353 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08041852 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080615295 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077534026 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.078496023 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.081227598 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080751508 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079290684 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070633901 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.080895043 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081582402 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.077285034 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080957639 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081160991 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.081958939 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.081392729 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.070430232 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078611831 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.080451965 seconds)
  done (took 3.292880009 seconds)
done (took 17.578835677 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.122783364 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078406152 seconds)
  done (took 1.452489233 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.088112649 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089449229 seconds)
  done (took 1.435555595 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.090351136 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.072398029 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.098011192 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084756142 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.072789553 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.0718928 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.095552087 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.072794406 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.072092994 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07238332 seconds)
  done (took 2.061683078 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.074883068 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084170518 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.077592644 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.0882359 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.079803094 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.07058367 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078588778 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074391498 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084012953 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069436676 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078086593 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090266216 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.077867474 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091864884 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.078655603 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075722947 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077861529 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073960496 seconds)
  done (took 2.691222219 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.071878651 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.072414407 seconds)
  done (took 1.412290127 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073263416 seconds)
    (2/7) benchmarking "second"...
    done (took 0.070080119 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073362913 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073199769 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070191903 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.070203242 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070613621 seconds)
  done (took 1.765291835 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395663801 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119946742 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324957691 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078153242 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088424774 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267331931 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.072326614 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07841424 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.077377849 seconds)
  done (took 2.81174217 seconds)
done (took 14.897665564 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086948719 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.093427823 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.103086956 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.38750466 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.099230796 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073083857 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121475734 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.20276149 seconds)
done (took 2.444951337 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220589686 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.654532302 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418253605 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212418712 seconds)
  done (took 2.553612546 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354692463 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094779188 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065644216 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073839669 seconds)
  done (took 1.864557961 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072893379 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07607128 seconds)
  done (took 1.421012201 seconds)
done (took 7.33627146 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07331595 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.072863791 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.071375697 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.072598954 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.070332821 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.070025474 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092731455 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.072727832 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070772179 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071972686 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069586328 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.07286111 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.073218167 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073240291 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070405128 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069950536 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072411812 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069664342 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.072457438 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070425729 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070236698 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072505485 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070031159 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069638759 seconds)
  done (took 3.041812053 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.091093755 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.072658841 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.077559249 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.077931738 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.075658637 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.077593754 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.078037783 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073576839 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.078268192 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07545913 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07628301 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075937381 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075808592 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.076064527 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074713146 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.076632847 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.077239766 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072246726 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074464489 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07577876 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.077773056 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072285211 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.189111197 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077806017 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.075302921 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075431728 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.074228697 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.072467649 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077784311 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.075673042 seconds)
  done (took 3.683310196 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.076978727 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0694169 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.070265221 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07729859 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.070187784 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07049244 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070241667 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.070468798 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.070499169 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.069806917 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.071387266 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.069038756 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.069520065 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.071406036 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070704477 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.073825769 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085965164 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07122144 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070222959 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070254086 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.073097246 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069760277 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.069449202 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.069228933 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.069429849 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.069148618 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.070160576 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.070650135 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070098925 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.069427058 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.073146796 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.073498537 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.069420445 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076576145 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.073415822 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.069471906 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073766996 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06919723 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.070221032 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.069141156 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.069887054 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072220995 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.069977814 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076499914 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07027588 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.071655206 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070379516 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071185811 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.070855511 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072613031 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.069576823 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.070222394 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.071528954 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071554266 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073893608 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.069379069 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070787834 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.069368645 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.070595028 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070365159 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.069592308 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.069527171 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.072419696 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.070697407 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084939424 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076699884 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07013482 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07171773 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.070736366 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07308027 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071375066 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08357565 seconds)
  done (took 6.449076908 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09733101 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094218726 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071621285 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071063945 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068091939 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070276174 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076665366 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070753133 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073760256 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087870322 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071291112 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07159173 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071881102 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07384912 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07081287 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071714791 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07845777 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068427179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.070992255 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074038112 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070286875 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076865916 seconds)
  done (took 2.947729344 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16614958 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076597908 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113026065 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082077567 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076918203 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082257534 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077016793 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077149569 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076205138 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074480593 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075472083 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076502157 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077106712 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073832084 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074376086 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073978248 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077174788 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074544991 seconds)
  done (took 2.795684328 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.0827628 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.07211459 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093203947 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072635809 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072391848 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074627327 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077411504 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081410455 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075060596 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.072434535 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080823901 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075045275 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.074957628 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072000087 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075224664 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072233625 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075413393 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072913987 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080238213 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076841489 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076709007 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080704976 seconds)
  done (took 2.979336148 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085968223 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074652846 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087680374 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.074951378 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06827557 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070907373 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.076788592 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.07222711 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.076159397 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.074479937 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072189475 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070348935 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07575793 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071958347 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074702596 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071934404 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074725254 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07180653 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075138784 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06797847 seconds)
  done (took 2.782586043 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093656424 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074928389 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075725064 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082349537 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074573386 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074100465 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082294198 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075175186 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074406173 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095767669 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073745483 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075068081 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082747384 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078990567 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074501775 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083046841 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081945472 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082142999 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073842695 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074419891 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095268653 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074812481 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0819051 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074646216 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073779927 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07404522 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07450529 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078653595 seconds)
  done (took 3.505929551 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073507375 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072306664 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069904087 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.070263187 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.070514599 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069820567 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06994322 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.070015572 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072268312 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070306223 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.074934903 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.072284003 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071936221 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.072536228 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07309218 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.072738528 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072237215 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069787235 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070256548 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070723592 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072171113 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073056526 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073010429 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07039218 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070004184 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.072268202 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07007637 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069713785 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072920493 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070534426 seconds)
  done (took 3.442653365 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.081714001 seconds)
    (2/2) benchmarking "in"...
    done (took 0.079066965 seconds)
  done (took 1.460866193 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069689269 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0866545 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.070086706 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077016468 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075763482 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072916636 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079930838 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076663361 seconds)
  done (took 1.904319509 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087788753 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.085196638 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.073684834 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08562218 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.083494874 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089663176 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142014056 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.07363053 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078952842 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.07083221 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087088825 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072208627 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.079273337 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074104888 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.078965802 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079447494 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.070853842 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079311103 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.075676632 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.070724298 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07480897 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081872077 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075297506 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068311409 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.074705201 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095616466 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084765955 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071883897 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076176716 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081306254 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.079438328 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.066565692 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073353461 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.074854496 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071132095 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.083398927 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088245084 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076039052 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082223677 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073761327 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083212719 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.067796016 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.077855135 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080130003 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083659172 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073469327 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073244584 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.068053773 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070754869 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.077356444 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068503094 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073801154 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.067737871 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080422342 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.076464264 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084548626 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072007551 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075273918 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076018959 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.075746085 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.079918791 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075031549 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076311797 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072601222 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08333759 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077740006 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081435675 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.067926502 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.066790768 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.071408017 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.082825212 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096152255 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079474196 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.073618844 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073697602 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071358939 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076127045 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074058289 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078238671 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.079329589 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073205662 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078583197 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081054219 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073128794 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.075678503 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.080887936 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.072030496 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.076528325 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070707468 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089729654 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072599164 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.070994964 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071089649 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083777043 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076426909 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.073166596 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.070835039 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080642776 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066608541 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.07321473 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073896468 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073649539 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.0827082 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076503643 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077147978 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.080807342 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.079812342 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072860918 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.074976852 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.068261818 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.201438597 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072471747 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081779817 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.067940902 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076821548 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074525917 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.074883806 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.081391282 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.072058323 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.074052029 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083983225 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.079482193 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.072535267 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070770416 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.076990908 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.0737476 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078029813 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.081782973 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071099756 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.069511576 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.068638806 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077172367 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.072840124 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077885779 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077782515 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076706635 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.067366772 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071010916 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.079641626 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.081918825 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.073125574 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075230947 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.079729603 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07491602 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.071775339 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07892393 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076177235 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072692995 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.079016992 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.074550727 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068442022 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076582093 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076260445 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.071977061 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.076737889 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076651928 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.075686045 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073726563 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071612536 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080182991 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074163698 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.072527862 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072883341 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071703689 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084685685 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.074910243 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068049219 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.069290277 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082066701 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070893031 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072624794 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.072111806 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075564538 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073918161 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.072193182 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072157369 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075132742 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083172425 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076367017 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073605597 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078708737 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085078705 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072904129 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.075945853 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.073041539 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073873584 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073579875 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083211104 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.078723693 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077802868 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.075890505 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.069932463 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078880284 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080940375 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.072169493 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.071471244 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071903646 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077529866 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079274525 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.078037286 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.074298396 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071408123 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074261781 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076935513 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076270131 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.073089221 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.072571893 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.079313443 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.071037318 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.079876675 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074219452 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083179056 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076597417 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067535176 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075609637 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071128643 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.078443978 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067622099 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.070720382 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.071726405 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072684595 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.071695761 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.074547609 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.196425612 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081712952 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081578115 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07424118 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.073133863 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.073834596 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080952064 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074783372 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077601588 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.077933383 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.080120989 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084934454 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.073527168 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.077601127 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084396614 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.073062579 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067579577 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079209574 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.073414228 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.072890687 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.072964129 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071908167 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077196951 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081970629 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080980173 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.066395189 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076983405 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071666726 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072416445 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.067834175 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07863489 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077212983 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075039392 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081270836 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073455298 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.074036781 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077774411 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.074396796 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.074189861 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.075190061 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07626722 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.074846984 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.075432471 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073034007 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.077106425 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073328026 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.070875874 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07653529 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.073216794 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.076329211 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078810485 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072703177 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073478574 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.075898878 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.074501157 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074340255 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074130338 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073666693 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077814444 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074979665 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.073658161 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07555877 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068984932 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081497325 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.072621328 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080952067 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07401209 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.070128558 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.080073058 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.075741711 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.079215938 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.073628868 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073755603 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.074820544 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072366245 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076360369 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080275491 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.071137083 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084636369 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081382836 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074021129 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.076802847 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074413534 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.074743759 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071967899 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.074566353 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.073951264 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074027945 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.073950337 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.079001103 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07612945 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.073469978 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075677097 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.074155035 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074253321 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07495437 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.067686562 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.072615563 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.07292501 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.074100315 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083328271 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.073651451 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07365027 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.073033738 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074477173 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.072368539 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.069811828 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080190615 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081206918 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073234428 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079215202 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.071721223 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074202245 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083016905 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066059602 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070397286 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.204647002 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.072963484 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082442329 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.074743963 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.084194054 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073668163 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074085834 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.072036687 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.075409477 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.07222519 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.067998827 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.071452591 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077870682 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073015739 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073764311 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.074850387 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07740167 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07493026 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082552182 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.073825445 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075773862 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074100598 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.070511856 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.072522946 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.072481107 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.077465695 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.073786762 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.071513347 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.071123343 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.073480982 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.074845572 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07520673 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072986321 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076504507 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08068648 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073159419 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.076652523 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07569523 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067675437 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.076653202 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.073780692 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.073158966 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.072633713 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077842476 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077200521 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074321781 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083514391 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.073673855 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074098162 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073552254 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.070854838 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.073399416 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.074021804 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073236856 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.072247042 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074290279 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081997436 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071557683 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076164296 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074025689 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07311623 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080176462 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.074999453 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.076872609 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079882749 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.073386763 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075430321 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.081881392 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.077134624 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076396713 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074013568 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075082289 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078871036 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.072746982 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.079622582 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.073577078 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.074197331 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.074887638 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.071059084 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072619207 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.073018168 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072679412 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.078916579 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.073843605 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.074819995 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07206059 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.070899828 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.074114199 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076389441 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080807001 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.075731691 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076244438 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06832884 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.070491563 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073908784 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07088622 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.074926562 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076048623 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078657201 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076322035 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.073536429 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072443986 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082476039 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079099285 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076936124 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.071512325 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076501265 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.074270992 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07476846 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074629524 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073078872 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074197118 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076347728 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073798076 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.07178922 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078549766 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.075857939 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.207207527 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.076722637 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.076489003 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.074838513 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.068330986 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074692738 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076364105 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079277916 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.075755312 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074084183 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08551478 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.071344479 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.074666866 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077020893 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072426591 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.078076485 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068454293 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.075797991 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074779566 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075062357 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068378441 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073214412 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.071539056 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.076367115 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.072730115 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06852601 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084545409 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083305866 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.076388399 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073302035 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071934523 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068157005 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068901181 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.072172095 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074850114 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.075758655 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.083456591 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073244885 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.07220353 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.068027317 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074325931 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07613806 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.076647489 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070657267 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068339311 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.072752416 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076654346 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079176232 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071366715 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.072447182 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076717768 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076439737 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.070898174 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076776943 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070454725 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077255229 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085612144 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074083424 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074757466 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.079750967 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082296736 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073723102 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068519881 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07492612 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.076560715 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.073620769 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074077804 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074058865 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08879107 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076668104 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.072403136 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.071966807 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.075728048 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073203391 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081203599 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073807704 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073897807 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077534899 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075397731 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081707805 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076761337 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08135187 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075845795 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077209697 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.072600215 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073560291 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.072214403 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.07213456 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074583352 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.074307489 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078252395 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081141615 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073019265 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08411233 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.082364888 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.076113434 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.07018643 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07304695 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.072828927 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068249633 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.074344928 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071365816 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.071687489 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071479474 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071975411 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.073966691 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077701519 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073216112 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073079749 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.07326347 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.066502013 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075154348 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075258872 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073104077 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069370374 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.07201234 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.206797619 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07814162 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.079569339 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071360822 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.075471852 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.075559826 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074797018 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06790444 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.080226555 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072683999 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.076124198 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.073204787 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073361787 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.073829875 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077312895 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078943967 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074618098 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07571733 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077246308 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075793361 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.070653077 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.070504737 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079431385 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.071404112 seconds)
  done (took 46.939035513 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107987092 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069439834 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06734843 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067444037 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079571312 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069030498 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067614883 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069393174 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069066204 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071847615 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068610335 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068762284 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07710333 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084093465 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079623477 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072427186 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068160523 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068951098 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067440831 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068990456 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076577495 seconds)
  done (took 2.917561476 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079271184 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.083881261 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082866869 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088499474 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076997438 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076813587 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081996277 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076516001 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085141515 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078505169 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084689642 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077063111 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07925782 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.078898185 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07857983 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076485933 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084719805 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077129003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077038891 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0814454 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076849545 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08212122 seconds)
  done (took 3.132796399 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.074188522 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.073707205 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.074516457 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.067609551 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072232539 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066889107 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075771173 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070420921 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075385358 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.071401966 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.071564463 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.071489016 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073818779 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067533609 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.072028554 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.070046212 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114169377 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.075693008 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.0722148 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073785325 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.067922782 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07427389 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067812227 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.068477069 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070806357 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.075597362 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.072990595 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.070262314 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.071969196 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071183818 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.073183368 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069952026 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073986791 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072574392 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071428999 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072416448 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.071906598 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072589224 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067556898 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070015106 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073055503 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.068237822 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.072730819 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074904803 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.07091117 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.070658696 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074600533 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073029035 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06750855 seconds)
  done (took 4.927589318 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087858523 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115694128 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.073845143 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09600955 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086383433 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079266256 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.076291182 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096242038 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.069527116 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069861027 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087930865 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085811967 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072273727 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076467126 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.079388515 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071494426 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072933034 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071319321 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075650358 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072002606 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075734194 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.078496697 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08682911 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084792121 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076285586 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070742107 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071540778 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076201774 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084795509 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076416014 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.076812152 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077536098 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087208154 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073585981 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071543999 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.073847996 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088471503 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.074617137 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074436318 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070141118 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074353604 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076468175 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07927329 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08807729 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072117304 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.077303051 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071452607 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069435446 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.085207193 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.074651676 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07948514 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085810083 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076399594 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072588284 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076908279 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087564095 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.071834057 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.070788272 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075381958 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084739103 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070202875 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075518336 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085382744 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.073836273 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079302631 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085979338 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.077671704 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075793871 seconds)
  done (took 6.850905365 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082921417 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101935848 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090634877 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089509246 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082044348 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.082665651 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091109318 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.082041393 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081973248 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086823947 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082408085 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.12216087 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.078123978 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084702838 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082637881 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082330262 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.081850634 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082592486 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082852053 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081959851 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.082361845 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089841673 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08238779 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090305177 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086164813 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078104082 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082358395 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083049723 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090132233 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082226817 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086687655 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082557864 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082166596 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089638203 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086610261 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082042715 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071998838 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082075944 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.082516858 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082230509 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077496963 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090147747 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082695095 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.077027295 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082274081 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082029205 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090482075 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087334628 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084534987 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087207088 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082278374 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090341041 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08266486 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081816707 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090123348 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.092850504 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089927053 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090296351 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083173112 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090286035 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090239785 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092953813 seconds)
  done (took 6.703270349 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090417071 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0813681 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088757865 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068327613 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071231272 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078218094 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071253004 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.071139456 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080757321 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080672221 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083847867 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078205531 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081253813 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083714537 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078331393 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081746322 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078542761 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078319945 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080619703 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078359662 seconds)
  done (took 2.982322512 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080849958 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090643177 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.073759307 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079322563 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076103059 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078343591 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075022654 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075804758 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073377396 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075757435 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08283008 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082734996 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073556569 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078266135 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082523182 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078905444 seconds)
  done (took 2.64594522 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.091035261 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.079911471 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.087005769 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.072926382 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.074351373 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.069020411 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072227944 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068186141 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.068695475 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085578464 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073192103 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.083123916 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072310849 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071403238 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069083445 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078115993 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.068765562 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069586286 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072636685 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085414699 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079363933 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070638874 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.075997866 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072893231 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075870699 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.076599184 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071306774 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.072561853 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06958569 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072505003 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075228783 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075617837 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069645077 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070463532 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071050803 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069776267 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072319802 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072709983 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.077296497 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.07197276 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.070639372 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.074159256 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072683272 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.073359646 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.068447849 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072388929 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.068484327 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074621289 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070684763 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.074560508 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072438518 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075155579 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.072647511 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079647689 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075462018 seconds)
  done (took 5.460363804 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085910766 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075553345 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06822774 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070662976 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07583361 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073337219 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076067549 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073614318 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07410392 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071217054 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074010766 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075159921 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073951683 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076249101 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073643782 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075713035 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067838839 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073302697 seconds)
  done (took 2.735004865 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077963958 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072852202 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.079933841 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07245216 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.072068063 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074645087 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068660306 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071578365 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071038774 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072911497 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07214842 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07484438 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071364287 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.074461194 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072573348 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07257342 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.074753086 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071611501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072031794 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068781712 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075081564 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071453172 seconds)
  done (took 3.000233503 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101513277 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.089778233 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.147809272 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08508729 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091498703 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.078103506 seconds)
  done (took 1.990459705 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09712718 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107183727 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07287729 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075321792 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082701378 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076806273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07633707 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077219889 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084696941 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0831212 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076485391 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085454987 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085450299 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085356582 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081864737 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083077997 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076632094 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076013169 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072884035 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09022754 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077101784 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085437347 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077025446 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076552965 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077149497 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084515361 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08445593 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082464887 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07598517 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084855994 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083124071 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076687593 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085540587 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083027662 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075984589 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085011625 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076902534 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090315695 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08211347 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084563659 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076341602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082381094 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08563409 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08127374 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084768371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076813335 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081717547 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077030268 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076519958 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092928535 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082539638 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084746683 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08255167 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085408477 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084728226 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092405402 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082963426 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08430077 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0826484 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083351888 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084428877 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082202384 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084524758 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083471404 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083279307 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08434211 seconds)
  done (took 6.836322132 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110677441 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073503345 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077859346 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083665243 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0869441 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077314361 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076734416 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076432829 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076736695 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074234075 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115922162 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077113797 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084667304 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084400776 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07703574 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076680534 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076963176 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084103778 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073741474 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092568866 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076574885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084123756 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084599503 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084723375 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083057683 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082314344 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076991719 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07657197 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077340267 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076571712 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08165343 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077420737 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084420215 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073109874 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084697738 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077110773 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076946599 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081560634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076635823 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082510946 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084482101 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090170057 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077148061 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076313857 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082685893 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077067427 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076309837 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073189234 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077355858 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073532535 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082700612 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082769337 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082555199 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08375248 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076608839 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076257921 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076675341 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076558469 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076854503 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082666644 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084699336 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076574834 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092755304 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076706004 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076670016 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084625292 seconds)
  done (took 6.747969177 seconds)
done (took 140.138141201 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.190798398 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172051562 seconds)
  done (took 1.754083215 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075246541 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105358673 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083870726 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1352831 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07250331 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106483178 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105714248 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.085286132 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072896376 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072661749 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072327631 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075154796 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138456122 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072654797 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072718253 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075699014 seconds)
  done (took 2.827095068 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10604959 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169456899 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108931516 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070913996 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106311397 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079512771 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071627835 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081725888 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07747427 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072055597 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079478882 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076564384 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071662169 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076917481 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078060414 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079861496 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071222736 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079226192 seconds)
  done (took 2.965970649 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10573144 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09749208 seconds)
  done (took 1.611635057 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164057285 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.112613207 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.153908326 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.359446529 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168450476 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.156817185 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.153424848 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.151521187 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120066988 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.148464442 seconds)
  done (took 3.094163107 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107752566 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.162640454 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275869125 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124360884 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.079404867 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100863686 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126017405 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084822264 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087600452 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086726685 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086623642 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.083126932 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.106933671 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079947633 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.081517094 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082681902 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109841168 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079850269 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.081190591 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.082260115 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108765786 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072060415 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080150453 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.080229295 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084046541 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083577495 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072972696 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072206195 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083256969 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.081967381 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082710038 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.101526877 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083955709 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.113070571 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.077294045 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.114423925 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.083528307 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.082812222 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.081698807 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080419358 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08503988 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.084969236 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07938271 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.082951056 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072274006 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.083244227 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073285103 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072342254 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085098724 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.074297398 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08478398 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083559169 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.113479772 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073806414 seconds)
  done (took 6.411520547 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110876277 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113841083 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077829958 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.12069825 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109290699 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079029158 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110662354 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10242881 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111798794 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076188473 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074971618 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076690704 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089279079 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.089463406 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122271479 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.11385278 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080551065 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077357594 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113954752 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112935234 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074689256 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104336313 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098178151 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110792492 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074310667 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077618915 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07510865 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077371502 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083516113 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085153246 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076533171 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.087516367 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.091973212 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084842458 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073738291 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07460311 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075662554 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.086589367 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086119929 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085498963 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.084593446 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074858556 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074840597 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076357127 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077066517 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074846105 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085889958 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.087020571 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.085517201 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07617849 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076966014 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075448434 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076476104 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087545236 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084509565 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.087208624 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08673527 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075940492 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075027388 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078740287 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087976874 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085672674 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086262781 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075861725 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08592303 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075164415 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087485328 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091456469 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075262453 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07766645 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075498886 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076155397 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076686241 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084558452 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.085163475 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07687615 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076334476 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075328227 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087143971 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085859406 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074972728 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084092245 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074108363 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07550888 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076985493 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076646276 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.085008486 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.087278138 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076302569 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075202302 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076422627 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075110046 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073773691 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.083824917 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085192053 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.084927346 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.084159832 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075542917 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.084243418 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.21786561 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078154527 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.087807682 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076574096 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077739747 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076833791 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.086034062 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.08491378 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086189179 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077068704 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076375794 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084493788 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087802046 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075532167 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.084691086 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087583558 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08665457 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.075106937 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088165133 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075331935 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087033823 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077843062 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087720435 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076307247 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086696447 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075684649 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075134804 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075607874 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.086962063 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077920019 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074640517 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076892667 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076898646 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.087473711 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088732814 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080011247 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085330434 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.085124058 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077745741 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085474026 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07563616 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085328449 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075990869 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076303903 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073991036 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.089348522 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074959208 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075765267 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076057388 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087832513 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074989571 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087333289 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084491558 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074649804 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088523576 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087344638 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084595582 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087023097 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07624726 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.074960182 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074707153 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076021329 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083681321 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085382552 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077516752 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075281305 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084942869 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.085636493 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073682457 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085265668 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085223845 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085113824 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075748119 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076775145 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087419839 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.087443244 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.085361291 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.085508071 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085795159 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075214256 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084203942 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08567728 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074993964 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092405188 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07523975 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.089978555 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.085907155 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083228972 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08578319 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.087424056 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.087130828 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.087303402 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08978136 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074255416 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073632412 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.084658552 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073649006 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074754709 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.083008373 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075454731 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.209553582 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.092544987 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075774732 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.087913787 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.081271835 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.086485613 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074507649 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078259641 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091637459 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075253818 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077551296 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08712835 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077216086 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084960178 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088155181 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085208034 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075047499 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077229811 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.087406977 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.085484861 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075798248 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074407043 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077351617 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.085720397 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084587964 seconds)
  done (took 20.284396428 seconds)
done (took 40.366485096 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.217395001 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161918577 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190923289 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.125661633 seconds)
  done (took 2.202859629 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.125359828 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108159056 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.099696714 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071735991 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10649892 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.07118408 seconds)
  done (took 2.02774713 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321900206 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219318342 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196195487 seconds)
  done (took 2.176201163 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210054245 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197021657 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.427940012 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.27153636 seconds)
  done (took 2.657887642 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.154333507 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096300406 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.073714744 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090676365 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.142216791 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.169368099 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.107881493 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.133497001 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.085680385 seconds)
  done (took 2.546697163 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.157761328 seconds)
done (took 13.212700782 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.239728455 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.115867814 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.21498875 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.110084451 seconds)
    (5/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.237207557 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.119774637 seconds)
    (7/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.098650377 seconds)
    (8/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.186339967 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.143887642 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.096352334 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090516242 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.205402783 seconds)
    (13/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088210908 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.101223681 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08603759 seconds)
    (16/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.247126616 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.110568125 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.080214984 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.099081512 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.089783219 seconds)
    (21/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.083950515 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.115473947 seconds)
    (23/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.243576759 seconds)
    (24/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.162554402 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.080854419 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.171878496 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.170314134 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.196819237 seconds)
    (29/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.058333556 seconds)
    (30/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163361486 seconds)
    (31/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.233376273 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.133866737 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.213969622 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078819826 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.192723833 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.089557542 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079406338 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097400206 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098181599 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132947033 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.106881331 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.057809148 seconds)
    (43/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081585621 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.251127719 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.189206553 seconds)
    (46/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.175183618 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.097385386 seconds)
    (48/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096855973 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.16323493 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073817033 seconds)
    (51/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.079167735 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.216386886 seconds)
    (53/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.082625665 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.080510046 seconds)
    (55/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.076862958 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.079760773 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.137920392 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213921867 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057312411 seconds)
    (60/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.167890611 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.462213097 seconds)
    (62/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.191264161 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074865347 seconds)
    (64/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.057099106 seconds)
    (65/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.116572651 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.078501101 seconds)
    (67/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.162516956 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.160623883 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.168767264 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.057960591 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.118127643 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096838097 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.078149982 seconds)
    (74/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07984189 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.180250018 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.317736657 seconds)
    (77/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.110211852 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081105731 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.0827152 seconds)
    (80/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079464012 seconds)
    (81/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.108497217 seconds)
    (82/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.106613448 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.180871958 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.072978536 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098172832 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194690001 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.085132721 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.081186112 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150219746 seconds)
    (90/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.068457614 seconds)
    (91/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.098258282 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102656432 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07584398 seconds)
    (94/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.108853254 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.1274568 seconds)
    (96/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.084564335 seconds)
    (97/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.089676675 seconds)
    (98/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.059044471 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.057375365 seconds)
    (100/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.08411312 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080083113 seconds)
    (102/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.105655552 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074578409 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079921172 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.072299256 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.074186972 seconds)
    (107/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108281381 seconds)
    (108/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078970356 seconds)
    (109/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.117717737 seconds)
    (110/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078550407 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.078897459 seconds)
    (112/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082907796 seconds)
    (113/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.1063957 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.079238273 seconds)
    (115/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163500994 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.072500897 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072065567 seconds)
    (118/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072756871 seconds)
    (119/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.081812016 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.096655813 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.100318035 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144342198 seconds)
    (123/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.166848794 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05898002 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.104200103 seconds)
    (126/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.057439212 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.152145531 seconds)
    (128/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078175875 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.080428871 seconds)
    (130/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08713956 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.20445442 seconds)
    (132/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072335121 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.056661159 seconds)
    (134/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.068439926 seconds)
    (135/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.087797782 seconds)
    (136/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.057059516 seconds)
    (137/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057263123 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096385918 seconds)
    (139/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07888258 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 0.143934733 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079925652 seconds)
    (142/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07933969 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.079342858 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.072127349 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07930026 seconds)
    (146/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.068445708 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.071529844 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.078053134 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09233703 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.081054905 seconds)
    (151/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.124813959 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.190099405 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120770095 seconds)
    (154/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.068166311 seconds)
    (155/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078461565 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078600641 seconds)
    (157/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.057884981 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.140090749 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.056926994 seconds)
    (160/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08222218 seconds)
    (161/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.082106776 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07344904 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.204746871 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.188458434 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.058968756 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072260383 seconds)
    (167/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.074820223 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072067583 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07970846 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.071499621 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057819223 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.060702902 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136034442 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.099142825 seconds)
    (175/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096023402 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.080659993 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.157392306 seconds)
    (178/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070859667 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.057324088 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.071628335 seconds)
    (181/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.147057709 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.056871311 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.232149497 seconds)
    (184/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.118526011 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.059744434 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.07455506 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.186699429 seconds)
    (188/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.059841968 seconds)
    (189/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.088080663 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.172128382 seconds)
    (191/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.059617802 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.100133676 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104453884 seconds)
    (194/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067824176 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087534639 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.083520184 seconds)
    (197/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079708263 seconds)
    (198/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073874117 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098792688 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.086099418 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081623775 seconds)
    (202/309) benchmarking ("sort", Float64, false)...
    done (took 0.138482333 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096862116 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057527162 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.072589762 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148761426 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115717423 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.074946835 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116723643 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057111908 seconds)
    (211/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079619637 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071786823 seconds)
    (213/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083305311 seconds)
    (214/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.082453271 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.059256738 seconds)
    (216/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077370052 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.071544057 seconds)
    (218/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094400386 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.095486316 seconds)
    (220/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.057605468 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.097272446 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.096039449 seconds)
    (223/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071447646 seconds)
    (224/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.076557 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.057495285 seconds)
    (226/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.058783322 seconds)
    (227/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071798974 seconds)
    (228/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.108412854 seconds)
    (229/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088769761 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.097284914 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.085284216 seconds)
    (232/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067256257 seconds)
    (233/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068799056 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.057957681 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079318197 seconds)
    (236/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185049731 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057421153 seconds)
    (238/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080984595 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071724556 seconds)
    (240/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.08004442 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.155780045 seconds)
    (242/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.057382997 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.083587167 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.190696841 seconds)
    (245/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057732821 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075408121 seconds)
    (247/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.077878513 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058622982 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.058468365 seconds)
    (250/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0702486 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.072080008 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.07267212 seconds)
    (253/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05805012 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146797307 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.057693945 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072654748 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074787886 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.059149188 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057246674 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.072688265 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131068053 seconds)
    (262/309) benchmarking ("sort", Int8, false)...
    done (took 0.149273446 seconds)
    (263/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.069061489 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058503061 seconds)
    (265/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07608603 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145614319 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.0715832 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078420331 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05766327 seconds)
    (270/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073374359 seconds)
    (271/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071795824 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073409974 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057320602 seconds)
    (274/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07595015 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059184201 seconds)
    (276/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.058843061 seconds)
    (277/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.079051541 seconds)
    (278/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058555463 seconds)
    (279/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059357321 seconds)
    (280/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06824271 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059401189 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072019793 seconds)
    (283/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081142308 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.073725118 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071024994 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.191509754 seconds)
    (287/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.057616533 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.072443831 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.072036684 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121796555 seconds)
    (291/309) benchmarking ("sort", Float32, false)...
    done (took 0.139949873 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071736369 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059537995 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073901788 seconds)
    (295/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.080126962 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.079854588 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.144804417 seconds)
    (298/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070050738 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.058791406 seconds)
    (300/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06994025 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079839258 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05804608 seconds)
    (303/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.239878382 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079997319 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09936688 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.096119892 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.073445535 seconds)
    (308/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.069242126 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079250109 seconds)
  done (took 33.366743897 seconds)
done (took 34.823760709 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089364299 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100073162 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081427913 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099241222 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.087795075 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082823294 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079650522 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.085378237 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087548128 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088908313 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084637103 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060512375 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080959022 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083843785 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081395097 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098391544 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085133891 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079901964 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079716437 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.071537648 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08004753 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.07249644 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073565139 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06020369 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084813611 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077951185 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078263847 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.08103695 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.072408625 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071805943 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075370565 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080283792 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071672194 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085145341 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079420331 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079786533 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.081164786 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083270925 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.074121016 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071857597 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080547805 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071728236 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.079760892 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.080048668 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.078466095 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.078530644 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079966945 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084627658 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098430181 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073753869 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081243665 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082658019 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082897529 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079344166 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.076605488 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079851913 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077447873 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098949289 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079965755 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073999415 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.081055788 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080859671 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.078335981 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079472667 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079212863 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081708969 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082155144 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077828257 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081995686 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.078007878 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071630699 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080543602 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075838531 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.072421049 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.08282284 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084116893 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.071014392 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.078300938 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079908253 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077866795 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071303063 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073706797 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073558602 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078782728 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074242972 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060591902 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07650721 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.079235885 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070566174 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.080206848 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078753551 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079346409 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073677127 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082314464 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.071765805 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077322879 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.07206278 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.072571645 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.073790415 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.076013411 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071921794 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07394786 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081669542 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.073358514 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.078548216 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086729297 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073113635 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.079622869 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070686083 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070873026 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086707736 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.081006665 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.072071989 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07401437 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070631403 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.079078449 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070650386 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070920864 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070777011 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.071052388 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077725965 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070806826 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072394519 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.216278177 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.086699207 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072323937 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.076249888 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074432633 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071577185 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078857242 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.072082646 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072042445 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.074411642 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068799671 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0741762 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.072755651 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080018837 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074149531 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080664159 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.074315829 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080899476 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077718568 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.078568469 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077442214 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.071244764 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.065775387 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074572785 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074210735 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073371766 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071931101 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073717575 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071890047 seconds)
done (took 13.48983703 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072936736 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147248446 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.104760276 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.102550948 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092749698 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.073014903 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.082285058 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10802283 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.074173598 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.108848042 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.094104346 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092245682 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.124313018 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070978755 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07207066 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076793848 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073455524 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088234838 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108720733 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.093381443 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123561116 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071420037 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099817246 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096283175 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094755936 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.110569042 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072985447 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07657311 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.076682151 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10005513 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095438195 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.076841854 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072637503 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.1057918 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10068986 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090623256 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072862656 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090321108 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072920958 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.072158901 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073875295 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105672182 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087942894 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087671796 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.076399544 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075918123 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.074033704 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090160714 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097127756 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.0861863 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092926451 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.109128646 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.075360962 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.07215025 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.0704497 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093472666 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.072320364 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.075789993 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072656197 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075266316 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.072545464 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075706917 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.087822464 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.087329601 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.076946234 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086651755 seconds)
  done (took 7.301929916 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090850934 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101219366 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090247542 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.090972562 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071442099 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.073173038 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.073460378 seconds)
  done (took 2.141439575 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072678859 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.095979308 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.096910135 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.097617719 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087711529 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.098626572 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082447358 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.073198845 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097950898 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.074031389 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.094587209 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107778637 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075755897 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.086078107 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.098354195 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072951672 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097858437 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072516747 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077251453 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.097546701 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078695727 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.102865105 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080473403 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.073129094 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087748289 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072994024 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121240253 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07841147 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074310223 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075848623 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073466304 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114175538 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087070302 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080738801 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072729017 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089042764 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.087975148 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07530549 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085536297 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081582717 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087666413 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.073209419 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.074099597 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.074464547 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.077449658 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084570601 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.074337805 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076911881 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075832822 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094030414 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071972989 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087098061 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.076524203 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.079147028 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074797356 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079832708 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083905002 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073897177 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.093930205 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074419152 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090377799 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089903403 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087037086 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089422069 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075153189 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086615564 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086899276 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075662073 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075469112 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076930966 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08989534 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071220821 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074537609 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084371161 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075287936 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.097277512 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096522095 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074733602 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.086907751 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073425537 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072969816 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.073098922 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.096872761 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078053083 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073128134 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.0770022 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075974067 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.076590475 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.07221242 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079320175 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.07156046 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.079150235 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.076360741 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.076616448 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076939017 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.090218415 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075652667 seconds)
  done (took 9.553817695 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07589623 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074237424 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.076318386 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073630127 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.075401874 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.074463832 seconds)
  done (took 2.022050826 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100899836 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.075359726 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086951439 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077883492 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112804896 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.094393823 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.094090861 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085195868 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.090747053 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.08514545 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.093271862 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.095505767 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.099359682 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.079089254 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.093264361 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.078088731 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.094590717 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081611943 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084325641 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079886624 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093550755 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.078389815 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07953387 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089177746 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083320867 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.078053457 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073591652 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.085405506 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084951296 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084816621 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078729499 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083155439 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077572812 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084357042 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.094477825 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077485071 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07825414 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.083990986 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078219466 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.082449166 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.094517865 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079589232 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080721125 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.083423771 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.084539955 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077055629 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.083482038 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081865188 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.093304007 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.0837912 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.083661399 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077540761 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.08316239 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.084706446 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077150948 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084664398 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.083826401 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.093526764 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078687522 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077349331 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075263535 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.082898917 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084318146 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.082087433 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085019144 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084323445 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076891295 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078896728 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079441391 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078292652 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.083515178 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075712941 seconds)
  done (took 7.611284399 seconds)
done (took 30.16931516 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541014135 seconds)
  done (took 2.079834537 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.625074526 seconds)
  done (took 2.189506122 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.509546396 seconds)
  done (took 8.06750156 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.416225534 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.5278327 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.751815917 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.142603804 seconds)
  done (took 3.439521071 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.704549784 seconds)
  done (took 2.275114176 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.224438821 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.211019616 seconds)
  done (took 2.015165919 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386593785 seconds)
  done (took 1.949096758 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.152886414 seconds)
  done (took 2.720545563 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.268951996 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184014183 seconds)
  done (took 2.021355648 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.487723759 seconds)
  done (took 2.053099694 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.842731648 seconds)
  done (took 6.410205485 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221493265 seconds)
  done (took 1.834944288 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24483874 seconds)
  done (took 1.810947413 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.754028938 seconds)
  done (took 3.32223285 seconds)
done (took 43.758450782 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087918583 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08836398 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087400093 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08511216 seconds)
  done (took 1.902355519 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083620831 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.079231509 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.083316464 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.080417259 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.083469601 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.079233419 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.081321135 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082347753 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.079820715 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.079944742 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.080204553 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.080281467 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.081970883 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.08121943 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.078466572 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.081849016 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.08374753 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.079217815 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.082261099 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.079337996 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.077227389 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.081658684 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.084588335 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.078134483 seconds)
  done (took 3.513533018 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086271076 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.079416449 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.081844106 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.078805165 seconds)
  done (took 1.902882634 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.087126328 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101724266 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.096589301 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.085629699 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.099634528 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094929335 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.075682922 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.076000621 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.077586235 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.086144876 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.074840187 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103831373 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.095805349 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.084771765 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08870683 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.072689803 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.075205365 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.094755449 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084905592 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.085962504 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.077004627 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08483289 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.074655804 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.095900244 seconds)
  done (took 3.64543681 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.09452492 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.112668911 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088327619 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.096214522 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097889911 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.072000572 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.094792597 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097634633 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134277424 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.072289297 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.077174836 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.072435004 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07986144 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.072253976 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.087804944 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.115200405 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118760684 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.076246256 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.104559362 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.072138347 seconds)
  done (took 3.418957697 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080749195 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.076300881 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07305223 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.075500575 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083525029 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078991562 seconds)
  done (took 2.049996199 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07648341 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074622822 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.074702627 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.074267971 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.079093562 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.074349239 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.072700099 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.074634185 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.075456079 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.074540237 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.073248862 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.072923322 seconds)
  done (took 2.474195007 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.211432131 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075278136 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.075299645 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.072672882 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.077366919 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.07338782 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08883949 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.074535038 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098898149 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.073110738 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074118687 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.076011153 seconds)
  done (took 2.650898933 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219624478 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082744147 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250659372 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159987824 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119330829 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123401182 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119847525 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122304633 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.150328606 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108464671 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178072448 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177208863 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115800392 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146460111 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096794734 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.113655256 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163518343 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174855311 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113277414 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176511127 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155559376 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135128276 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157285653 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109416997 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114241677 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129752552 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.078384132 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087089177 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179913551 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141714625 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153239897 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119345626 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099701381 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186390221 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181273818 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150013687 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156283465 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092018646 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.112740112 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142639589 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209303217 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096047484 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313987979 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118682567 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09167993 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143213775 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128951144 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.128859324 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.112366561 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096222322 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15385962 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196371288 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.146560544 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094921274 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132623238 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121719708 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122861234 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121235896 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192186863 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170981032 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134931821 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.078484402 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116643054 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162305263 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141547317 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115961928 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133636197 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09861733 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143532014 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164068023 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128149699 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153182919 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.124478568 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095986255 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127770157 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148172561 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136235176 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169180182 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13208989 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.079755005 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13163867 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109569864 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087668789 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.151934095 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082033191 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184228332 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105472162 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.115364233 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132117754 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117449703 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115952327 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315903568 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156998132 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111980828 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073331511 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114116929 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128097586 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155703757 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093744556 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116734076 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125648905 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083503763 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145117781 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.081462135 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130381044 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083782385 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132528398 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136941712 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.084264009 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130621707 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111997196 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10807709 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140855146 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168413407 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093958192 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088258169 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179548008 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130067091 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110870956 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152579003 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165179785 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.108325228 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107415714 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157630103 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188334501 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096511134 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17333769 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1144923 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090628736 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.094337393 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133181265 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119143734 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.13087602 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08885221 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.125431727 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178126574 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.082029009 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1025362 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140358235 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084514812 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086528427 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111798066 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11172354 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.102693807 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.107013619 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.257029934 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146804513 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132028838 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113066731 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133148688 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106385799 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180952188 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095279654 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110010245 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111277887 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.077426252 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.144189024 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166030468 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086522485 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173119714 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.13188735 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123424851 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12673103 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090573362 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147985109 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086157138 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.077301761 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152025367 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118506419 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116558177 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.158685486 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122415036 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.133288226 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125298179 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140197987 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138660466 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.137430493 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113289808 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095335657 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119349307 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133577526 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.079070389 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097149172 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087058316 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11127832 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10274777 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089205844 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149521462 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132162511 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116376638 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118818942 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103637087 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154910713 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.082046294 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134267299 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12624403 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101784867 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.159464732 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.307762276 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140929163 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107578498 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146598314 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077915453 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08243356 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095646199 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131221211 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088941428 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089183027 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124350828 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155158423 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137228367 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143629196 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13036151 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127407858 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165290943 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076061429 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124678808 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155277801 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131563253 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111590134 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09666317 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10658025 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151138229 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115570805 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191540632 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121513363 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131426635 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16188301 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107655454 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085407338 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110063681 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143759957 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111080825 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151723328 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106656782 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095551241 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11714413 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080838012 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106517688 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134426688 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126448254 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143396327 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.12223795 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14055635 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083364754 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122114425 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128045011 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127940865 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070247461 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127670292 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.317555995 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102429382 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128383155 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163373938 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085884236 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.141969457 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185677179 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153179089 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092565429 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11548575 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126878669 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135433418 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126925891 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148195571 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115209106 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144494782 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116431793 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.092453278 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09424377 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103872996 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111380006 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.101507464 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.114029346 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120727076 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.102015734 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138634245 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110785525 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117219365 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12459169 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104746759 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097920586 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102576525 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185461998 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125453225 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178571904 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.1054026 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.152901908 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171945979 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080806497 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085302617 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.084417027 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148065635 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091776734 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137843579 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.114356585 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124992046 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130565551 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149738774 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101391511 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.075557879 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115137428 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139671673 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130424448 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251224396 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.112180978 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172210366 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.107572054 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087132064 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121646075 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125136867 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110940066 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184514253 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068360941 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114319612 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083701371 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088081623 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135615037 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161833512 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087616301 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.110333625 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12676139 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119906447 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135741942 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107215971 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115911794 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134030217 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158869085 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13904515 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.095955138 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119173863 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136559053 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16572368 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1112964 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102018874 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181450031 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16052511 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16869758 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093785928 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122070558 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121142251 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115743188 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146547627 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089867506 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172273971 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088780394 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143828873 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110442937 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095898239 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136209785 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114606173 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094111837 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154666844 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123888585 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088110427 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083357316 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122771781 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123269421 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109701392 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079941148 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142129028 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078944612 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135872446 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163025613 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085231115 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109362846 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100617009 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08444362 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110419338 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106717674 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092173333 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103627999 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175193873 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091753603 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153038115 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136823792 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116465378 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135913606 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106002611 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641665114 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081637705 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152768321 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117816518 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170467544 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10236767 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119267132 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111711973 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122707002 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142587956 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105311311 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182136859 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131170489 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116782853 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08214073 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103113214 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105554616 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089656989 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109086086 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115549635 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115214719 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09449081 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116973204 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12502477 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085420257 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09857444 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155184506 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116836673 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404174841 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15146956 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09349639 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130441109 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14932472 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088191521 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.130889913 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16384919 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115433127 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107466737 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.088544585 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.108845793 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169845466 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.080764412 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170726739 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128378935 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118039757 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121605322 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120329081 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138663567 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114254803 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129348973 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100011257 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.117319154 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121616568 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088569165 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083797358 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112780203 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118771434 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.105384373 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104944093 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.105429423 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16079555 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078683427 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106340407 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122592097 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152492688 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182979199 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.096621729 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089182586 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126037001 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121331649 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120022411 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129874064 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08561645 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088700657 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08826025 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.084970308 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116776057 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120000042 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121400734 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118099619 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.321707948 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089335583 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.236169198 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10290905 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111636172 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.076642733 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08550269 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103112328 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10520876 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113907431 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116919755 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168145038 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.101643492 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.096733331 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098163126 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081399811 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089695901 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135916777 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116526864 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125477823 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106055488 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069085037 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115152349 seconds)
  done (took 62.533877795 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115795704 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.089577802 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100410382 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150942896 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.128316853 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209517678 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160503336 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195692092 seconds)
  done (took 2.86968963 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074396117 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.102778029 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109780421 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.091066836 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.073120734 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074852307 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.241417794 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087892323 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.073623854 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.106064667 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.085010191 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075932973 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.43795776 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072310075 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.074853747 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068705444 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073147192 seconds)
  done (took 3.630407866 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.395740373 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.618480409 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.360998254 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078533005 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.957079278 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093074439 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.176975225 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13572658 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080213342 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532205218 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.41279505 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132906423 seconds)
  done (took 18.691100169 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083301352 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076240079 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09143289 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091182537 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079362251 seconds)
  done (took 2.131703687 seconds)
done (took 113.023753281 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088523745 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.622791671 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059909743 seconds)
  done (took 2.425242297 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091567363 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.0920771 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092643371 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.089410947 seconds)
  done (took 2.085830129 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.081612625 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082003115 seconds)
  done (took 1.877670986 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240751564 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170501026 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.103105082 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.090643788 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085059159 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.086671229 seconds)
  done (took 1.973836935 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079521224 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.081872544 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.078713346 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082794264 seconds)
  done (took 2.028449531 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08392422 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058468695 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060166416 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064072129 seconds)
  done (took 1.972896422 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094757873 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085300703 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085797196 seconds)
  done (took 1.973145512 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110014817 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092049387 seconds)
  done (took 1.910027819 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.088275066 seconds)
  done (took 1.797488383 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10248362 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.107736737 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13991948 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118346297 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147762743 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116665896 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.091853298 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093047846 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082866713 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.093160063 seconds)
  done (took 2.800792677 seconds)
done (took 23.161126847 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.085580555 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.470534793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.367044969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097757399 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.676468239 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362774564 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989195112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098681634 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122425025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073847677 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091160509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.655320056 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981973377 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.424119344 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967934339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329998079 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656350177 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074122563 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073955882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075061061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973481317 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074071028 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074118473 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074776567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655126225 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.379432394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.091368578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324657785 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074139067 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076331162 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.361566037 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07444494 seconds)
  done (took 16.59912847 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077747202 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125726795 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079702356 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091847479 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076879983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075694067 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077798959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075276866 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12716042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076500035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091717107 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074292955 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078067928 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075274354 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094260553 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074531178 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074842117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074408554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074615258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075066641 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093634979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073932401 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07453415 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075435256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07419468 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086973585 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07452381 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07507009 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075177027 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076523024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077477269 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075475397 seconds)
  done (took 4.331769998 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122805689 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131476462 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081124488 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109762781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120044844 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076631326 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150784636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100051822 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134585639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074996745 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093081226 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074731954 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111185261 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075903821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09540347 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07553501 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075440918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074400274 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074787316 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075155546 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094164369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074272578 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074568658 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075637765 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074929123 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089657379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074727852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075339832 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075188701 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076718342 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078067823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075638007 seconds)
  done (took 4.593826328 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079912545 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081628492 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.090351303 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.090862176 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075496536 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.079015457 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079110819 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.076618909 seconds)
  done (took 2.382707522 seconds)
done (took 29.623420782 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.086329411 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075114711 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079204074 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089094744 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080027578 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085082932 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.07365883 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082128149 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079433905 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.080176067 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081647629 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073992016 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077595366 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073340738 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.081343549 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073940226 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.086305107 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078635574 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.086485474 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.086507298 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076060078 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079618934 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080999949 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.086294735 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.086828757 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.086249288 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084143177 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079115232 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.075537036 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076753049 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.083920357 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.091003089 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.075088159 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.086204764 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074740709 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.074924816 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.078674629 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074547262 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086214899 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.083359773 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075990724 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082901655 seconds)
  done (took 5.094941058 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094153637 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.099883998 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.091534619 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068281213 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073236604 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.072114491 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095585117 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066364189 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065941874 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.095102911 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.062168852 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.066517534 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069737477 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.059509738 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066555342 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062692772 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068512838 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.062428314 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066877906 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.066003956 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095939091 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.059753414 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085238064 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069916609 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061982981 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.067504848 seconds)
  done (took 3.651024378 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082141891 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.092043564 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096007219 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137917321 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.1122562 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085864547 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085370063 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103162748 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094869268 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073807816 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.077533207 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099467172 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09821157 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.080560109 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07375091 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.092976335 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090807508 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075537204 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.082594107 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101194112 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093510554 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.092998065 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101989763 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.090015506 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072957784 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076475244 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.078025884 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087613072 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078480067 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083459921 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.078214597 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.077775021 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075743431 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.086022209 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.077758969 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075958423 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09895269 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084175686 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.085130079 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07517797 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.082344719 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07444292 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098922485 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132011826 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.073110681 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080037554 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.088646811 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.084125107 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073425846 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094976429 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085793188 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073728957 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.077385345 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072921388 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.073812296 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087095402 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.076728063 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.076287815 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.083186503 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079647661 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.099298251 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078333415 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089880927 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073639504 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.082393064 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073311785 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.075042711 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.073018992 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.102843578 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075283548 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117858451 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07644046 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074901679 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.083690414 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081994063 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.080637307 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074231583 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.090335544 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084611046 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07730786 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.083236205 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.078522092 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076797121 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098123761 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076464262 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075695199 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07498881 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079926909 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.077024999 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075209531 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08758172 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073418657 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076724087 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.091648806 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073534315 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075482518 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.079659414 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078485169 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.074168667 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085262544 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079594181 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074923571 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.084531807 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.074640662 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.077310111 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.087333728 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.080898573 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.073494534 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.078711994 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.079539496 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.075403539 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076024411 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.076847424 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075922874 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082765213 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080901951 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.078420023 seconds)
  done (took 11.50753509 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17419145 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.165301729 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076962585 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.157417086 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082910315 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086009187 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158286339 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102254864 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.074902967 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074888245 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.075216278 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.118286582 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.113337248 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124756866 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08533915 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074351047 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09151334 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121893588 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160426164 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154649585 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092423701 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.083855619 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076027756 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075438515 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.077525797 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08532404 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.093129603 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083579175 seconds)
  done (took 4.710313118 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088023203 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.112232489 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.081429823 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.098089543 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098275365 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.0744493 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076399175 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.077091791 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088339928 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.085355894 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.074518394 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07985408 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.081687214 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.077800913 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.075661568 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.081607635 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.082090913 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07553185 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077717728 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.079613134 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.085182336 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.099207429 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.078392594 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075785979 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.079211323 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073983795 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070337922 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091510804 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074793233 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.102264464 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.072962231 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07974925 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.089303923 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.075072742 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07477311 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074381199 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073899995 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074229432 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.076408948 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07262297 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072484906 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063422993 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.073476711 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085519524 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081292203 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062318448 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07941956 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079990378 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079203261 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071670466 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076775784 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076579407 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.077225276 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081996172 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078311376 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079343258 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07534865 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08086952 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.084162051 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074048005 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.071046903 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.073082517 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079723261 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072351576 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082888094 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.079162339 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072346947 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074211468 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07691342 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080796188 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074429631 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.0784066 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071821004 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075993553 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078937318 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07580762 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075758199 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072429691 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073947138 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074717667 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.0619515 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.075265106 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059769301 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.077746949 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.07250619 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07248215 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07445202 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07911566 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086557537 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.075240679 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080624324 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.075303233 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073313786 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.077404346 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066287544 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07761267 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085824858 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.089205669 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074257591 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071737726 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.088020128 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078964691 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.073445751 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062359882 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078942195 seconds)
  done (took 9.959155285 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097366316 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076705258 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.090598111 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.097453514 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094238867 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.081597811 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084142115 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076341273 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.091196675 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080916939 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.083643195 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075087558 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.084378867 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083841484 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076630156 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.084062421 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078353334 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.091649691 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08902052 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.075381591 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.083091098 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.087125795 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.097415262 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.088905802 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.087662026 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.088734055 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096805716 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.084302737 seconds)
  done (took 4.18699206 seconds)
done (took 40.835432374 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.852921862 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.075555034 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.820722361 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.223377348 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.899351003 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.021533029 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.916069455 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.814133237 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.012655559 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.848209483 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.019854366 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.944750713 seconds)
done (took 66.333851091 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.866917584 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.958710302 seconds)
    (2/2) benchmarking "String"...
    done (took 2.056408096 seconds)
  done (took 5.761600714 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.071946308 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.508464848 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.06679953 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.813303252 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.820328262 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.157171741 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.625299284 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.324064956 seconds)
  done (took 31.065154402 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.994280484 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.045672475 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.519591478 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.553882139 seconds)
  done (took 15.913764415 seconds)
done (took 64.512066925 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.811664087 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.824651099 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.81936352 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.801057172 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.879253138 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.827423237 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.043393405 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.029353239 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.816448525 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.808974249 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.817513916 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.265641374 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.825783835 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.009322888 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.817538736 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.817394442 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.883063533 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.223345289 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.97494017 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.826495838 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.838045133 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.837316533 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.819629361 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.821280411 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.827262343 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.817182662 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.243707187 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.823899543 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.617826738 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.82059468 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.854552667 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.067452324 seconds)
  done (took 206.26208511 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.820061276 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.860577894 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.932046864 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.865018899 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.488805522 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.997862877 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.938714608 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.521279831 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.820133096 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.83032367 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.00167666 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.818521571 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.015520656 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.79142514 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.846757803 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.900927342 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.978376776 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.028431783 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.854357606 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.991048752 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.819886862 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.890146129 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.834584598 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.98981055 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.859682216 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.9020444 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.827958901 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.841048745 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.00792038 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.961460419 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.86182563 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.836581341 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.022433912 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.69061054 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.823090688 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.838103644 seconds)
  done (took 172.060092527 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.980300558 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.820026103 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.821138913 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.816947037 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.823654479 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.820931524 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.948110682 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.947453816 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.411869141 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.225418245 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.872814206 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.640725198 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.81823143 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.887150393 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.830226037 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.819938019 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.837673887 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.84427668 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.819968275 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.819901639 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.944826205 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.832543162 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.844628822 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.827511519 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.820706996 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82513606 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.189938294 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.821106923 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.824347509 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.066155204 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.821567249 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.820670602 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.712480189 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.044573431 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.904626531 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.822614917 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826945331 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.820552543 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.042566802 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.822822582 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.823661797 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.825365382 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.824785539 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995727467 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.824179152 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.945406605 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.819884673 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.31476882 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.820498084 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.821694369 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.576245109 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.496334091 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.82243424 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.823866471 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.823634792 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.824989496 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.822463324 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.827145783 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.577926379 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.897392662 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.82362501 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.824082653 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82572027 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.822481247 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.026969562 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.823060399 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.435964608 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.883074571 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.948713752 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.942216143 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.822715372 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.890533205 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.917682405 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.819049031 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.823196384 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.821571982 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.820707743 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.903869233 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.821589255 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.940460055 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.82980612 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.824273756 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.874448695 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.895000988 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.821704762 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.70931786 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.82516761 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.82376357 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.82150187 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.119393929 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.889162568 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.822275937 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.824633938 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.822277324 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.940864289 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.953799903 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.58301187 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.822789736 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.561418491 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.825113132 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.952818671 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.821842674 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.824667714 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.003652679 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.824413103 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.903778446 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.828232884 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.822665916 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.824516139 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.824320297 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.856857857 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.827483326 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.884302786 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.822043412 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.202103105 seconds)
  done (took 408.488118679 seconds)
done (took 790.597583141 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.526187885 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.49269786 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.592129108 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.508111652 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.48481501 seconds)
  done (took 14.359285312 seconds)
done (took 16.114224331 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.911786564 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.92068472 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.850447911 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.917259996 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.844933479 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.915564427 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.900142903 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.85122121 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.882591131 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.850615577 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.885486749 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.851120795 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.836357181 seconds)
  done (took 26.173434864 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.053996558 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.062753221 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.893913546 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.054573554 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.873144516 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.049586956 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.988643073 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.971420606 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.979155008 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.841881357 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.837905215 seconds)
  done (took 23.365623857 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.054330103 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.056518852 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.903208845 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.057892077 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.875349779 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.058395489 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.986926159 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.978303591 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.97364648 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.844636405 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.838757866 seconds)
  done (took 23.383631634 seconds)
done (took 74.679997837 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.835599172 seconds)
  done (took 3.593440293 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.855905143 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.015756744 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.842053893 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.837707363 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.835573498 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.835925663 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.838747725 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.834583462 seconds)
  done (took 16.65683773 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.834489574 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.830578043 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.834834569 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.830550783 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.833828552 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.83305122 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.833150866 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.831013488 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.83057479 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.834481572 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.833635881 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.834927186 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.830519767 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.83156725 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.835503545 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.831922253 seconds)
  done (took 31.087231769 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.832886244 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.831649475 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.831879734 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.832455921 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.831988691 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.832762871 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.83302074 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.831661884 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.830394985 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.834910476 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.833118652 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.832502907 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.831980886 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.831970909 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.832505551 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.836254159 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.830346048 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.833343776 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.838472101 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.83209499 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.834530613 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.83252856 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.833287746 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.834235573 seconds)
  done (took 45.753633058 seconds)
done (took 98.85157396 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.720614794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.422550896 seconds)
  done (took 8.901410083 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.840212594 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.835666716 seconds)
  done (took 5.479346705 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.835738947 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.837136782 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.83720245 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.834891771 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.834816357 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.835353637 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.836463353 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.838063522 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.835595407 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.837468921 seconds)
  done (took 20.123953392 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.836824406 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.838379095 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.834029527 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.838389247 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.836202808 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.832173835 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.835969357 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.83745232 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.836788061 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.834539075 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.83636497 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.83259539 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.83639754 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.836056297 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.838159054 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.835536584 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.834934157 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.834447393 seconds)
  done (took 34.807275535 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.837524232 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.837248416 seconds)
  done (took 5.437039303 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.833005437 seconds)
    (2/7) benchmarking "second"...
    done (took 1.835501329 seconds)
    (3/7) benchmarking "month"...
    done (took 1.834749205 seconds)
    (4/7) benchmarking "year"...
    done (took 1.834239085 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.835363768 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.835942846 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.83404708 seconds)
  done (took 14.606506579 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.839913899 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.994895364 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.063804942 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.485642087 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.837774337 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.843460858 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.798767905 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.840177331 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.843738698 seconds)
  done (took 20.310854589 seconds)
done (took 111.426650308 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.676572232 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.831864105 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.188215725 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.88398306 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.88687715 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.178136472 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.844382891 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.139222489 seconds)
done (took 43.393152658 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.859812622 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.371671765 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.407864256 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.286940963 seconds)
  done (took 12.833159902 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.818890431 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.371007131 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.871776964 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.426071251 seconds)
  done (took 20.272510565 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.206155872 seconds)
    (2/2) benchmarking "read"...
    done (took 2.185615085 seconds)
  done (took 6.162897734 seconds)
done (took 47.895247026 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839163326 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.842449875 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.836329097 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.844119294 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.8398787 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.836973903 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.839726197 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.839800201 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.838692422 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.84187379 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.838720609 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.840139772 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.839966731 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841555468 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839963731 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838884376 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839068905 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.83760044 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.840203339 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838861382 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840287755 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8417586 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.837027572 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.839509731 seconds)
  done (took 45.916925466 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.846743585 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.83929986 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.837655163 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.839224979 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.837739125 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.842415884 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.84147391 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.837337627 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.841693856 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.841934442 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.83736148 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.842448075 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.840085782 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.839284403 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840516015 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.839325513 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.843275329 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842276399 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841956448 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.838597857 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.841200085 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838517688 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.841296543 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843731935 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.83978601 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.837767814 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.840069442 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.842828859 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.842933352 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.840592584 seconds)
  done (took 56.984902937 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.845599998 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.852427526 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.847270885 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.841852973 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.843141599 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.842563183 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.84263879 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.843919593 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.843652391 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.8429311 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.844362566 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.844211082 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.841987908 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.843107893 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.843205512 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.844711908 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.842671657 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.842760147 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.842286067 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.842788089 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.843634753 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.843065577 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.844875332 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.843913577 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.844963998 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.844761459 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.842912923 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.843499377 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.845882491 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.842982632 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.8461 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.843390198 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.844212623 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.844296986 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.84583494 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.845871949 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.849219768 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.850954329 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.845321152 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.844809141 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.847120038 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.844696271 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.843825876 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.84733663 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.842905352 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.848283601 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.845090885 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.844262334 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.845028077 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.843474507 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.847286262 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.846942792 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.846990159 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.845923193 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.846827636 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.846318322 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.847821486 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.845661291 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.846756286 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.848119174 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.845804122 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.850177513 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.84636113 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.847646028 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.846424521 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.845859028 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.847383244 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.847422482 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.847566901 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.846032555 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.846313179 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.845717024 seconds)
  done (took 134.628608245 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.845972011 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.843772927 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.843571466 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.843677333 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842813033 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.847503306 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.844949624 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846244222 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844033199 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.847360607 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851003494 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.846589024 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843355274 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849478251 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846015143 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.846815021 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.846252115 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.843198285 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.846594171 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.847125168 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846957123 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.845877378 seconds)
  done (took 42.383138419 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.847058897 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.845896337 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.845171597 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849338992 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.845725734 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.847837054 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.847232393 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.846649289 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848266695 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.847263968 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847101428 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849052962 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.843908986 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845027192 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847752394 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.845988348 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847788389 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.84643212 seconds)
  done (took 35.015228325 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.847183532 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.846012714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.849499057 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.847538902 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.846797772 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.850747749 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847639624 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.850237962 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.850931041 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.846081877 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.850390588 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851163626 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.847862249 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846698451 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848502117 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.848495518 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.849223274 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848432739 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850916789 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846351652 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.848583214 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849448774 seconds)
  done (took 42.441082741 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850874607 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.848852078 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.8461032 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.844753666 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.846928943 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.852304362 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.849181537 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.847397685 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.850168348 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.849563505 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849570717 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.854470037 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.848211614 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.848784136 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.847547979 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847721327 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.848475347 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.849063351 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849889282 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.846090003 seconds)
  done (took 38.751598006 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.851456414 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852696838 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.850460822 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.851527704 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848364526 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.853326332 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852868683 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.855610467 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.851227739 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.853029022 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.852702548 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.852914665 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851182722 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.852928411 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.851710404 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.852308079 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853330523 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.851686387 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.852676731 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854691168 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.853015632 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.856268781 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852486069 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.856188582 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.85129986 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855022751 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853068291 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.853951874 seconds)
  done (took 53.654482421 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.85135062 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.852910197 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.850643537 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.851375613 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.849396922 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.848543977 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.850352455 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.848524084 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.851088365 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.852237766 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.853707447 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.853338578 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.85283845 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.852640443 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.853063752 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.854717403 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851825487 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.850523931 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850246567 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850703842 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.852528608 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851449475 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.854807173 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.849997591 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851460701 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.854091011 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850663657 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.84980076 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852274956 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.848873271 seconds)
  done (took 57.323263773 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.869013247 seconds)
    (2/2) benchmarking "in"...
    done (took 1.869571876 seconds)
  done (took 5.516096103 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.849925433 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852863954 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.855913763 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.850865722 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.851020507 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.852469141 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.856526701 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853054862 seconds)
  done (took 16.599471924 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.85528751 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.854566185 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.853782591 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.854514192 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.855524754 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.853380292 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.860384078 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.854794271 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.856301533 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.858028924 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.861574035 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.864550891 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.857172868 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.853616434 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.856361045 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.856054089 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.853589089 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.854888832 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.853890158 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.855024681 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.856861659 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.855984319 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.855142171 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.850134842 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.855554557 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.867818402 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.861002998 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.855172732 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855340917 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.860191703 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.852551194 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.852176659 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.860158934 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.856967553 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.856033228 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.858349984 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.865211337 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.858117707 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.86187157 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.858129193 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.855682305 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.857256982 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.859276188 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.857540256 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.858011246 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.855558746 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.855842799 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.854625276 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.858473766 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.861816722 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.861680551 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.855924584 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.854948208 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.863096178 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.856161496 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.862982834 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.85954024 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.86123456 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.866734985 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.869395132 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.871499095 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.867553772 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.857803512 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.85800777 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.868861717 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.884340969 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.86321306 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.853397769 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.855818404 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.857997654 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.865488064 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.87067641 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.869455419 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.856779098 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.857093676 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.857205974 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.862187134 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.855842617 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.864747791 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.862668951 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.859966462 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.858010013 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87209309 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.886176575 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.859867852 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.86068897 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.859506626 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.858625562 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.86048672 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.868937385 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.863175715 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.859742433 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.858451883 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.860509485 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.862145904 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.862971627 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.859284345 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.862154019 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.856123007 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.858311981 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.860855449 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.861522564 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.870772031 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.861758992 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.86123905 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.86775199 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.859447696 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.863107161 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.866590152 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.857404447 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.860273895 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.861619457 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.868628021 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.858341942 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.862803549 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.872896134 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.862276263 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.861571531 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.861381984 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.859033345 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.872098856 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.892096592 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.862484544 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.859936337 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.866700273 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.874069417 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.860394225 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.865106371 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.859009884 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.859843388 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.860085614 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.861102708 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.859551605 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.863283148 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.862956 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.86280243 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.858815538 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.86151633 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.860345339 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.863103529 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.86137107 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.861350153 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.86232379 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.863206372 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.862377093 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.862465767 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.869257065 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.8611752 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.863696865 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.867270733 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.857603931 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.863025999 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.862988039 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.862470883 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.86527165 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.863282105 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.86050033 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.862426827 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.860871915 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.862867159 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.863789889 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.865588539 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.868741889 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.863207701 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.866341988 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.864323472 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.858850137 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.861860765 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.862066439 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.861628772 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.867145183 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.866582138 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.866188719 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.874065594 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.862828984 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.863313284 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.86718638 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.862427027 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.864334791 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.863845183 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.864901959 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.876197038 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.864015503 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.869065751 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.86336906 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.863666286 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.863824664 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.864881767 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.863713987 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.865215164 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.866314994 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.873249173 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.879515976 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.875338295 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.866725597 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.870190519 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.86663121 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.871281324 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.868407477 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.864105139 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.865783828 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.866893506 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.864714724 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.867445516 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.867893828 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.867626841 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.865009191 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.866441192 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.866652584 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.868074359 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.865555867 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.866643905 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.866037644 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.865660012 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.867957406 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.867246597 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.866065423 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.865508272 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.868093227 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.865246131 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.866321258 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.867671857 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.872089614 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.863848123 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.872031814 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865537653 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.870642589 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.864598261 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.865905441 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.869705457 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.865181981 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.874539835 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.867252712 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.86852057 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.873542245 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.866142425 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.86610512 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.87180608 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.867878961 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.864231586 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.869955407 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.878440626 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.867873517 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.87002305 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.869431352 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.87011784 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.869100825 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.875412378 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.863825315 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.869483693 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.867236786 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.868918789 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.863904185 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.870110336 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.867278232 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.87039806 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.870570873 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.867230423 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.869870966 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.869318154 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.868563565 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.872278938 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.86990107 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.872638171 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.879553608 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.871981357 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.867328249 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.873272118 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.870422967 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.873164632 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.870764033 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.869204444 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.869428704 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.883806091 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.885650742 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.876307717 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.871593836 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.873222728 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.876197084 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.869534591 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.873606276 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.868512635 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.869008732 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.871046339 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.869508026 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.867378879 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.872269699 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.870667115 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.873943672 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.871551988 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.876013217 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.871294188 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.871227941 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.872688582 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.872621063 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.869605536 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.870661619 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.869284312 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.872718615 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.874215368 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.871750988 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.871220707 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.877284481 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.869582274 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.873886371 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.869398095 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.873637592 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.86787017 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.874792175 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.873786236 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.876957949 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.882279596 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.877385056 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.884480767 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.87346496 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.887477088 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.873371316 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.876771775 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.884760121 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.868325022 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.873972512 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.874331581 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.875360403 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.878340132 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.872311431 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.876641172 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.878605832 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.873682503 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.873963801 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.872919966 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.8744506 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.874207754 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.874415346 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.882408708 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.873871357 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.879870926 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.880425101 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.869217087 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.877017236 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.873667636 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.872545444 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.880512321 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.873590103 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.874549406 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.873643297 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.875853611 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.872361713 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.876382646 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.872221021 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.872205547 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.874416003 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.881937477 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.879257783 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.87966297 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.875899646 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.883642485 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.874491148 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.885110635 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.875510649 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.874734892 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.874531195 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.875013657 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.875779752 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.87524467 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.874734179 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.877119858 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.877737188 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.880630946 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.879464622 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.877044003 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.87871756 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.877426924 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.87543404 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.887048943 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.903954117 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.876080841 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.882571719 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.873867838 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.878030401 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.882889324 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.87624409 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.875777293 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.879772368 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.889175333 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.88776798 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.877959208 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.879611966 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.876327999 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.874452689 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.873988217 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.877263568 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.877695476 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.876433756 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.879292813 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.877680351 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.88227131 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.876707107 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.876459384 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.87771113 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.878790997 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.8869959 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.876770003 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.879301341 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.881507347 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.875671859 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.877162916 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.877091687 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.877233132 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.87606399 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.877124604 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.877648615 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.886084709 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.885297488 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.878971855 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.878685393 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.878220088 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.879037106 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.878744811 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.88127435 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.877651906 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.881909673 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.879887926 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.878291309 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.881186281 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.875780407 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.879260416 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.881936524 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.877389906 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.880901464 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.887671231 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.878615718 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.875801232 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.879338981 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.879163068 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.881432779 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.882569104 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.887439219 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.882799366 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.891159374 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.889462198 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.88366131 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.879029383 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.88264624 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.889455576 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.877047584 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.882273059 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.881409108 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.882124007 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.881789533 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.88310864 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.881208692 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.886069865 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.876861098 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.882010765 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.886505517 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.881344747 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.88005162 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.882281475 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.886533743 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.87941076 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.877626572 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.881692531 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.880006088 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.887163879 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.881949114 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.880984204 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.88314478 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.878070491 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.88039957 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.886931574 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.881102707 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.883009298 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.874294829 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.884380305 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.88136818 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.880724876 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.876250003 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.878868395 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.882704967 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.883412762 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.891586967 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.878784616 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.884728662 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.882822355 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.882284846 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.884439635 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.878402639 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.879196272 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.877312972 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.882163502 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.882209857 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.881287316 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.883675367 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.881514379 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.881653324 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.88196891 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.881859237 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.885863463 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.899163314 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.889689063 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.878702044 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.881814698 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.880845214 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.884310844 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.882489013 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.88322557 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.88358505 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.884545111 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.880904693 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.883467584 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.881943695 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.886333497 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.90226543 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.881258664 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.883885199 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.882227729 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.888118227 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.882715795 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.879010751 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.883633475 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.885362088 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.887532923 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.895186713 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.883573497 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.890723042 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.884654013 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.887185578 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.890047133 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.886786242 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.894986187 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.889060172 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.883992884 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.884295981 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.889877008 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.903461885 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.886578401 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.894688215 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.92072078 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.884247356 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.886457089 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.884917694 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.883214727 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.883513569 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.886709591 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.884822972 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.882691822 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.882754711 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.886791688 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.885919892 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.893259629 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.885553761 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.884545834 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.884993895 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.885921615 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.886175859 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.879933919 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.887189637 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.882828916 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.885239258 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.885393279 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.885816695 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.887683813 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.899476559 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.897235395 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.88556152 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.887791419 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.881734981 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.890724495 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.890430686 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.897950758 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.892874217 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.887974851 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.886293048 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.890244513 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.887194307 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.882580041 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.888683785 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.885711009 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.889071568 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.88525197 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.90029781 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.898147709 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.89262577 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.892268536 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.88708862 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.888264214 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.890263895 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.888670395 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.888812028 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.889203223 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.888441771 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.894011695 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.888282064 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.889149532 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.892215305 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.897432589 seconds)
  done (took 1118.296675106 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.88625741 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.885442794 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.886392926 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.882888322 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.88672977 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.881766232 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.883164323 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.881360217 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.883042039 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.88450314 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.884111123 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.882486496 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.883701883 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.883067755 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.885403499 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.885796919 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.884999723 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.886263512 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.883539986 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.883883098 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.885765339 seconds)
  done (took 41.382358224 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.88729745 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.882707244 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.887026801 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.887178515 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.886599568 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.884123147 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.882655812 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.88777392 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.884184204 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88346056 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.887016756 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.885199905 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.88284967 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.882803992 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.88575242 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.884880633 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.885582588 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.882627574 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.884015235 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.883062553 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.886570583 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.882506192 seconds)
  done (took 43.27804517 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.891108628 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.890630599 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.891221736 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.886780408 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.886924114 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.885311588 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.888956825 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.890095961 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.884411325 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.887825467 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.885762133 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.887462347 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.897609815 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.892708523 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.888347588 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.887056863 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.030136415 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.885041574 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.888169648 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.885054307 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.883731122 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.891121354 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.881945861 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.884762957 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.885601556 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.884238473 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.887958208 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.88671917 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.887300912 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.885493254 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.893191983 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.888302204 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.888302426 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.885856829 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.884730363 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.88742259 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.889615261 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.887356168 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.882786429 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.884948534 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.896470017 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.909600721 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.883561665 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.893903634 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.887861129 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.888041778 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.890844933 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.898943971 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.883462463 seconds)
  done (took 94.485412683 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.885504808 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.88863431 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.885834677 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.886724643 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.886355243 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.886685752 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.888596031 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.885602094 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.880987328 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.885721918 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.884137438 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.881779787 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.882520086 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.888727704 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.888688762 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.882458933 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.880144409 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.881609585 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.881436996 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.884482134 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.883969262 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.888273031 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.886638528 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.884241786 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.886667832 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.881292862 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.88267397 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.887139364 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.884548474 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.887400935 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.888122962 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.884330752 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.885587503 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.884343968 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.883589416 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.886085764 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.88707943 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.881487506 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.885804857 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.883944681 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.888835552 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.887442646 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.888618227 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.886524884 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.881741331 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.885853077 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885299932 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.885038732 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.886567245 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.884447784 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.887521 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.88683115 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.885093995 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.885158345 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.886381842 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.887194056 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.880069966 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.880667292 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.881895081 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.875811162 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.874538677 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.8798695 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.874706236 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.87860838 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.874343638 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.874238588 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.872481423 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.874293587 seconds)
  done (took 129.911972601 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.880400215 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.876936104 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874278551 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.876202585 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.877405019 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.877401719 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.876887532 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.876499777 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.878610391 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.87735112 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.876287188 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.874145858 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.877054568 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.874826549 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.878464694 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.878446812 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.876436416 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.875023853 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.876454031 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.874493651 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.875522336 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.873702512 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.876544801 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.874925756 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.877707635 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.876408861 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.875642121 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.877665426 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.878067261 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.877283838 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.878080039 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.874188437 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.875532347 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.879159563 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.878262706 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.877425818 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.878307015 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876122959 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.878299328 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.874001396 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.879409849 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.878583666 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.878584645 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.876307658 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.878233266 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.877815857 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.879482703 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.878757134 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.876014802 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.876433722 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.877408175 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.876000477 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.877684438 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.877498815 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.874959718 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.878014782 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.881574155 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.878408435 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.881999856 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.878029494 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.87494683 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.873547814 seconds)
  done (took 118.176238129 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.878150301 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.874307186 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.871383187 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.867906698 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.875299299 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.870452415 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.878379697 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.873303955 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.872860756 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.872937435 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.874240666 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.869621564 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871139511 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.87447696 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.869375376 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.87098973 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.866806788 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.870827962 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.872124163 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.86947402 seconds)
  done (took 39.241634906 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.870540739 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.873461334 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.868362066 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.870306498 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.873080597 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.869668627 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.871413585 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871111332 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868166067 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870230335 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.871322074 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.869901116 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86935189 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.867337439 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.868411946 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.863687238 seconds)
  done (took 31.71459844 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.868475658 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.869331728 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.871003484 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.870354524 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.868308995 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.869417362 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.869361913 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.86619827 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.86552154 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.867230723 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.868154567 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.870012308 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.8696674 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.869080979 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.865867199 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.868747782 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.866299237 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.865376619 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.869231221 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.869619258 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.870052939 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.865590958 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.869367647 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.869659249 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.866272591 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.86718039 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.864611526 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.869316178 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.865348014 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.870175796 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.866701888 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.865433396 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.868663485 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.866755267 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.870908028 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.866915921 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.872562969 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.870221415 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.869436484 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.867273101 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.86969276 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.866233926 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.871108504 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.867297493 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.866727599 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.868501869 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.867052457 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.867205961 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.867205477 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.868030721 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.869442832 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.870326785 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.86836473 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.870349202 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.869265313 seconds)
  done (took 104.552127189 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.869841199 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.869046893 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.864702984 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.87091635 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.868248394 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.865343073 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.867958356 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.864705355 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.864629702 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.86757757 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.864583969 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.867117154 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.866744666 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.867544396 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.867096963 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.866984657 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.861288581 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.865060136 seconds)
  done (took 35.394506804 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.864592716 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.864554367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.865855673 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.86312858 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.864045605 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.864839248 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.86330146 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.865050039 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.865483428 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.865003964 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86287281 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.865819472 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.865934948 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.86403529 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.862628597 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86222554 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.866352409 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.865938904 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.862509769 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.861734029 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.866326975 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.864784161 seconds)
  done (took 42.808193326 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.865706283 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.86482795 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.882107212 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.886700807 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.88994119 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.90069217 seconds)
  done (took 13.08018054 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862808032 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865008785 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.865464623 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864619449 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866744934 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866435591 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864712212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866159463 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868504674 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863735138 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864636313 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869058219 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864271158 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860950865 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864087642 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863414843 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861042868 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861846176 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864301768 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862769736 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861526877 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865009338 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861992818 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862456158 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864547512 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861634139 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863840027 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862329853 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861822941 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866090425 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865003605 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862284459 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864828803 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862720485 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863176673 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866937574 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862030091 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865833397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864954749 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861741141 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.866687142 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865702337 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864033641 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86238633 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864627754 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86368981 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861568726 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862264013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863190583 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864550372 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866110876 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865224992 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863739005 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864608105 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865136415 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865439546 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863967575 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861062638 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864860463 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862007367 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863172663 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866018232 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861415558 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861462002 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865419993 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861881811 seconds)
  done (took 124.812716915 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865247194 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.861438824 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860855174 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861897316 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862172513 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862159205 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86122262 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861206985 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860929578 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859847559 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863732726 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863035561 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862126668 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859695579 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863278421 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8619197 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862592666 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861007721 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861064921 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866596156 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862257565 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862218725 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862767158 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862014584 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862628497 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866346216 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862391349 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862526235 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86377886 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863170864 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863475728 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861957173 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864126718 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.862998026 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862510061 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863071456 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863142137 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864064995 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86293367 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865906304 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861258518 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865375239 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86353728 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864989825 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865083053 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865828591 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86236554 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862024548 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864449077 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862515476 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863348122 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861947901 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865622078 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864151246 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861619536 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863579805 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86341102 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863794847 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86400267 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867847711 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863050512 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863297482 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868814865 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8643558 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865295706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864619008 seconds)
  done (took 124.763375577 seconds)
done (took 2592.88307357 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.884823319 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.9450734 seconds)
  done (took 15.619399185 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.028066777 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.981683266 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.86589405 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.875502549 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.865077609 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.862650161 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.858330107 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.865736839 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.86572234 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.867069652 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.865543985 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.052682339 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.883166695 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.86542255 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.867484768 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.959596387 seconds)
  done (took 52.22604203 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.86838169 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.871468951 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.879991665 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.87351927 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.869347098 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.883417912 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.906104035 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.872484296 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.903868068 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.881543877 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.937938368 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.882311553 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.86907009 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.919710815 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.885104892 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.885660214 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.965194655 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.944805437 seconds)
  done (took 35.891481947 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.948592703 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.87494895 seconds)
  done (took 10.622072944 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.867487806 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.892473301 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.88456468 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.862625573 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.877826482 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.861417957 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.883436777 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.882310673 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.869028918 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.879695003 seconds)
  done (took 70.558224265 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.876048077 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.870837372 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.869142976 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.866565057 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.861812649 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.862113876 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.868993476 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.863387268 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.556196183 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.903207402 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.874387956 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.88041789 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.874287798 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.873052019 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.870652578 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.893872172 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.014897712 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.872726974 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.868382559 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.876421977 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.871696875 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.934291135 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.881672794 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.87476587 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.89939219 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.553967712 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.875162503 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.876922402 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.017139695 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.867574622 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.869434356 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.872116727 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.874597766 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.252391592 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.150189705 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.868628884 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.878251049 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.88041371 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.867434054 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.02432982 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.879392105 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.877955209 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.867005099 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.129283036 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.985436823 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.91827297 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.267883024 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.878740274 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.873178594 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.90240501 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.872788834 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.872161088 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.890501721 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.389993926 seconds)
  done (took 132.889115288 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.867293004 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.127953565 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.021849091 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.866465544 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.156163334 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076310577 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.869474694 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.920625363 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.86829109 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.099578404 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.032239988 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.974727888 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.867645521 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.86891721 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.864711169 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866437428 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.035928183 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.943696652 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.871957182 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.867377264 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898901628 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.116931864 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.993727553 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.870312141 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.886847903 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082027323 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.993606287 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.973596872 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.153115993 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.871432527 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.933787404 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.869249521 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.86703253 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.865549661 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.026111148 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.962026661 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957144769 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.867934158 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.866657543 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.866268794 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.546961172 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068412979 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.966284404 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.013093332 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.11984925 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.072729638 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.658118878 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.866941979 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.619703463 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.030953775 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.10468462 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.106226295 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.994113631 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.869768442 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.147922916 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.865876398 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.867999968 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106896763 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097719142 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.972132305 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872038284 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.869023265 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.866552948 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.118277912 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.872555261 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.964375542 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.867580687 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.867586214 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.967691232 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.974554376 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.097645815 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084572332 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.906045959 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.176948934 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.340676571 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.118056481 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.936465763 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103470675 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.870522814 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868945785 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955901325 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.715771596 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.031302304 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.121613337 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.132270857 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.909321817 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.607267364 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.868826778 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.101022712 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.098316266 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.125306247 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.113015972 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.022758514 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.061738318 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.868184524 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.869414826 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.149225073 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009690401 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.873497672 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.232720999 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106500875 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.446349354 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.90084287 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181694956 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005216159 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.871991463 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.516451927 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.86936902 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.10049606 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.91788428 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.871438896 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873080327 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.093349809 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.860868762 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.8722383 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.698251772 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.935360041 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.877126733 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109119389 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870081471 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.140797093 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871033156 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.11362397 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.180797872 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.908056769 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.043376146 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.113085804 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.876225491 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138202782 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.122817263 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993235977 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149457193 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.801751984 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.879335388 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.166997807 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.880282162 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.875757134 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.049943167 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.877698049 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.052040777 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.876909024 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.165198415 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901726266 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033215778 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.880567224 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.138273763 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.912959293 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926075109 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.879034309 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.004573473 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.879127123 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.775471806 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.030805555 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877176435 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.876828562 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.415854201 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.880620105 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.032533546 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.111377226 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904840296 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.952439523 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.554840738 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.877337051 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.965666918 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.904179183 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.220813222 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.879455984 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.035367143 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.877760108 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.406425853 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.877562097 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.120859991 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.113956544 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.879010857 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.875402116 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.798451125 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.877207586 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.876989765 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.039435947 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.708838164 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.878908471 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081579331 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.881268351 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007400052 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.882267666 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.969379587 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.231149553 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.875511507 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.875573176 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.875693757 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.87913152 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.876546847 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.088550139 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.908481899 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.424320719 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.014757817 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.148939884 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.20202272 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.136347151 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.92219404 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.878488539 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.123461259 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.879790688 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.948732763 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.878878211 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.902472172 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111645092 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.879249351 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090008193 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.165549499 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.803818536 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92895919 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.879618117 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.878057055 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.803723953 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.030843132 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966423573 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.874718475 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.874161946 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.997510663 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.000495111 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.08861803 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.877872546 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.016255809 seconds)
  done (took 904.101501682 seconds)
done (took 1223.698472399 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.877343665 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.87824108 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.863620304 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.878723511 seconds)
  done (took 29.301270538 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.885218485 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.878975831 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.881139205 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.878839224 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.880384267 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.879224385 seconds)
  done (took 13.082652314 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.886787577 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.87474937 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.873943273 seconds)
  done (took 21.439627837 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.947825086 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.282476615 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.989692334 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.321623396 seconds)
  done (took 10.343031661 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.881950158 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.879226367 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.879744494 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.888669678 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.884284235 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.886374887 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.883167394 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.885175818 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.885489429 seconds)
  done (took 18.756713952 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.369514835 seconds)
done (took 99.093777905 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.224870113 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.874976685 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.624770607 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.701668179 seconds)
    (5/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.442881664 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.652537976 seconds)
    (7/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.965415439 seconds)
    (8/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.418045078 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.949198035 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.782637528 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.009824302 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.877351921 seconds)
    (13/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.066791351 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.563781617 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.927317909 seconds)
    (16/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.244648781 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.154582837 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.899799088 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.258768632 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.876330914 seconds)
    (21/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.045857859 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.872413262 seconds)
    (23/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.136459295 seconds)
    (24/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.011633571 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.995867875 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.069356832 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.125090551 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.952026167 seconds)
    (29/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.443197824 seconds)
    (30/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.965428129 seconds)
    (31/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.3379307 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.86481461 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.107459248 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.962740391 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.169909675 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.367236632 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.98065673 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.172696733 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.21286797 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.954226255 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.939928479 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.166535977 seconds)
    (43/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.427194779 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.064126419 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.181355777 seconds)
    (46/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.95319367 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.252226748 seconds)
    (48/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.889900295 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.983153528 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.966111083 seconds)
    (51/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.280323967 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.295499349 seconds)
    (53/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.006708133 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.991001111 seconds)
    (55/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.944774554 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.13139656 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.882467291 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.638211282 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.260721637 seconds)
    (60/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.06932641 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.957190185 seconds)
    (62/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.884625547 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.93822903 seconds)
    (64/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.029993539 seconds)
    (65/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.8998338 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.040332405 seconds)
    (67/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.978712285 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.241372507 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.364704115 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.86839822 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.377645131 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.820461171 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.10901827 seconds)
    (74/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.905414255 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.967894116 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.976976054 seconds)
    (77/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.022270588 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.909692651 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.292238696 seconds)
    (80/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.039221556 seconds)
    (81/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.012412049 seconds)
    (82/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.014283438 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.882929764 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.569428888 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.257680615 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 6.884354417 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.8888134 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.372749367 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.981638894 seconds)
    (90/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.167215612 seconds)
    (91/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.911480283 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.960264794 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.948102438 seconds)
    (94/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.050780854 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.889341019 seconds)
    (96/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.892297885 seconds)
    (97/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.391544423 seconds)
    (98/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.081609567 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.487792024 seconds)
    (100/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.969312808 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.909213396 seconds)
    (102/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.013692804 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.174856047 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.039989196 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.888233536 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.936944066 seconds)
    (107/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.788207291 seconds)
    (108/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.915933136 seconds)
    (109/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.387834443 seconds)
    (110/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.991291058 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.136687515 seconds)
    (112/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.90404433 seconds)
    (113/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.028193022 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.090620037 seconds)
    (115/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.984490223 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.218712571 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.219398397 seconds)
    (118/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.283157443 seconds)
    (119/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.983444405 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.159031356 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.578629468 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.996854536 seconds)
    (123/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.511585375 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.869956607 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.879176221 seconds)
    (126/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.22963127 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.885970567 seconds)
    (128/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.918125274 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.908251385 seconds)
    (130/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.399399256 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.875547938 seconds)
    (132/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.565269553 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.102749666 seconds)
    (134/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.169563428 seconds)
    (135/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.794047233 seconds)
    (136/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.052438797 seconds)
    (137/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.209217215 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.82668042 seconds)
    (139/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.923222887 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 2.322804935 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.905496776 seconds)
    (142/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.899076519 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.140670936 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.272630175 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.221360548 seconds)
    (146/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.086972097 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.517825978 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.102584532 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.137437002 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.320291608 seconds)
    (151/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.969171463 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.319960459 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.960185809 seconds)
    (154/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.189548467 seconds)
    (155/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.016446261 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.998011339 seconds)
    (157/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.097730068 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.984937049 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.172220776 seconds)
    (160/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.887197279 seconds)
    (161/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.985889871 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.888535811 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.570932127 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.860602925 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.35318592 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.036077551 seconds)
    (167/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.031851925 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.113754628 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.914677233 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.833062399 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.075179476 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.878655395 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.432812182 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.529909935 seconds)
    (175/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.976755213 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.907493827 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.90841717 seconds)
    (178/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.011260722 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.958295953 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.582184123 seconds)
    (181/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.872996942 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.870791103 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.189421548 seconds)
    (184/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.089298267 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.238268198 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.933830922 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.812213648 seconds)
    (188/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.377096847 seconds)
    (189/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.574751409 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.091070355 seconds)
    (191/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.374557154 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.541423284 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.994747509 seconds)
    (194/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.064819155 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.458295091 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.978757317 seconds)
    (197/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.022737226 seconds)
    (198/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.015545235 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.680439174 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.007064234 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.900786505 seconds)
    (202/309) benchmarking ("sort", Float64, false)...
    done (took 5.641130323 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.461944677 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.35736884 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.889425467 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.959063299 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.485032105 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.078818343 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.586516657 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.173312964 seconds)
    (211/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.916144617 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.977260602 seconds)
    (213/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.981364681 seconds)
    (214/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.924644648 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.87695502 seconds)
    (216/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.458449525 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.279947716 seconds)
    (218/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.908248847 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.890401405 seconds)
    (220/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.882267418 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.920244619 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.94712463 seconds)
    (223/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.958218763 seconds)
    (224/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.794730909 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.171178309 seconds)
    (226/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.047394103 seconds)
    (227/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.29655121 seconds)
    (228/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.022779321 seconds)
    (229/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.743216066 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.017383252 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.580576347 seconds)
    (232/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.066090717 seconds)
    (233/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.110142404 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.33374564 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.018352029 seconds)
    (236/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.896006946 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.262630382 seconds)
    (238/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.526185564 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.11271335 seconds)
    (240/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.103041821 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.893847288 seconds)
    (242/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.21058481 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.130990172 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.892469921 seconds)
    (245/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.818622287 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.953911209 seconds)
    (247/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.910570151 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.224134692 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.366339183 seconds)
    (250/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.933683052 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.892140489 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.945950222 seconds)
    (253/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.328882836 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.883032627 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.109688922 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.527731528 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.068075336 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.883863462 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.254340308 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.218990127 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.922552018 seconds)
    (262/309) benchmarking ("sort", Int8, false)...
    done (took 4.896957622 seconds)
    (263/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.10777288 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.46019907 seconds)
    (265/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.977376609 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.889910244 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.188381385 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.916421924 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.25535629 seconds)
    (270/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.993147651 seconds)
    (271/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.97769679 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.979020262 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.923737452 seconds)
    (274/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.916589126 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.874988422 seconds)
    (276/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 3.934224007 seconds)
    (277/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.924665593 seconds)
    (278/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.234311005 seconds)
    (279/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.879372619 seconds)
    (280/309) benchmarking ("map", identity, Int64, true)...
    done (took 4.062085515 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.819241948 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.252291877 seconds)
    (283/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.255128802 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.890872299 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.652417266 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.888687063 seconds)
    (287/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.094039379 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.182820654 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.216222802 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.986486232 seconds)
    (291/309) benchmarking ("sort", Float32, false)...
    done (took 5.648576942 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.135111287 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.878336303 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.126530715 seconds)
    (295/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.900701738 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.975102814 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.892774945 seconds)
    (298/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.975327099 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.879626813 seconds)
    (300/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.700811738 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.920261442 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.836801472 seconds)
    (303/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.730747436 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.922078268 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.005846694 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.850842595 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.206797494 seconds)
    (308/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.062012808 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.917594665 seconds)
  done (took 1022.0935882 seconds)
done (took 1023.973418449 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.924125412 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.918715439 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.903816394 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.923736219 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.012395848 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.933573654 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.913962765 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.905091987 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.949644548 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.950851163 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.905874352 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.933653808 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.907867631 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.904907189 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.904046227 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.923779771 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.215579595 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.926560024 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.920740543 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.914728708 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.921974906 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.903366004 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.954537653 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.928635716 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.909455339 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.908917776 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.910233152 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.922015634 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.015190043 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.905403314 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.907479438 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.91792165 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.217655538 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.921798252 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.899194362 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.924129566 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.918437942 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.912879657 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.90954936 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.93570902 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.352507163 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.907216603 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.907081123 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.90551716 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.905652938 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.90848899 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.906294298 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.913178268 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918044787 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.921646496 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.350365292 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.925644099 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.912837896 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.907841509 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.918016806 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.910732514 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.91136371 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.923409844 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.926412527 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.92490347 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.207820267 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.932195977 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.908862944 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.921141075 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.913368098 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.387561132 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.905183542 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.916199805 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.353092603 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.916237376 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.387876398 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.918344754 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.909545198 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.919559084 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.940172432 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.219019186 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.922191879 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.906190306 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.915502787 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.908778659 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.917256034 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.920295053 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.91459948 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.909179874 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.921564752 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.938393309 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.91805567 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.909010745 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.918026713 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.926883547 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.915512937 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.920444758 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.912686836 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.90374748 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.919224931 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.911521968 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.911286999 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.911708042 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.916749211 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.917757349 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.350891871 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.929544627 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.906718086 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.909448406 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.908858928 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.923393804 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.352158064 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.91257557 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.932519738 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.956051498 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.910654718 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.206992816 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.932246776 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.928597455 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.917427427 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.911481106 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.906485885 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.209828725 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.37257403 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.924581273 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.912757531 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.910074612 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.925868013 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.913155311 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.907969783 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.223732769 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.934898568 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.924862112 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.034539035 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.919566796 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.94161849 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.91107223 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.916022306 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.942584509 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.926142316 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.944062711 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.915724706 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.928359531 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.929246986 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.909040139 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.922755002 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.923303675 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.916330938 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.91893439 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.907511766 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.93804832 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.925453777 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.925853337 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.935015157 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.033597455 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.908867184 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.209826918 seconds)
done (took 299.802775179 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.982256593 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.909416445 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.010942719 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.910614261 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.992659418 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.994815634 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.907826602 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.906964983 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.90900957 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.280955409 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.906723866 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.910531586 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.91146375 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.907658673 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.992347618 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.909577676 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.907030082 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.245466092 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.915314162 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.982756981 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.902898196 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.907966653 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.912224325 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.281087161 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.909434519 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.908963989 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.98436427 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.911002244 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.247793949 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.907984868 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.910991222 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.248626271 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.00061281 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.932570781 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.924965858 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.920171471 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.995881725 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.916479901 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.993124788 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.994847873 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.009456898 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.955179408 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.907579271 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.911650875 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.917432712 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.914077308 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.908917906 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.942014588 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.908474152 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.911327786 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.247207882 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.920081963 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.912028869 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.911022854 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.913108727 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.945437316 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.908697363 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.915838579 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.004666779 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.916746665 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.977793436 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.284680335 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.285257056 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.914039206 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.913331175 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.909095192 seconds)
  done (took 187.098581331 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.97986043 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.983283014 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.982107101 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.913877541 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.967725096 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.980909958 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.917534558 seconds)
  done (took 15.553418197 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.919809362 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.914225819 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.962592753 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.964409078 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.917341012 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.070086116 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.914222305 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.923192849 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.913130476 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.969035331 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.917630699 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.912543581 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.922426145 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.91300071 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.966169218 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.92702894 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.027657732 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.915309876 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.914190887 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.069068017 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.913731659 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.920450643 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.953907908 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.926095648 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.917913913 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.924397664 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.497728351 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916502975 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.916156862 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.916512842 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.913547518 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.958427927 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.915209141 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.915037168 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.909787488 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.027938527 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.917122249 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.913243892 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.918754561 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.907518901 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.91933262 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.920870675 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.91622054 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.913907845 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.915445678 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.9379939 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.918302359 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.918298761 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.915254542 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.919610927 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.952862778 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.917739778 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.916589191 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.91471538 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.968059571 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.922576056 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.918242984 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.912654653 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.919633451 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.914647844 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.069961777 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.967291002 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.917414323 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.968683947 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.915513635 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.918199075 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.916713851 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.915208701 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.013444906 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.917328044 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.963665151 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.911915149 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.074141109 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.94138286 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.914842601 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.918370467 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.915655601 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916108479 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.911432288 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.925814027 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.91189607 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.91725936 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.921080231 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914512844 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.911543742 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.031406784 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.023363843 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.911647828 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.926569871 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.922267582 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.920015071 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.948295261 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.921573336 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.915889411 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.967169688 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.035013934 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.973860974 seconds)
  done (took 210.328180704 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.922057068 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.92390712 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.917703829 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.932688983 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.918236894 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.91286675 seconds)
  done (took 13.359485731 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.919798506 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.919490027 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.921566618 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.917314472 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.920367358 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.918319217 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.921521418 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.921269309 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.92143471 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.917939744 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.920780745 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.921349768 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.920484822 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.92055294 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.923999129 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.920208507 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.921321093 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.917100802 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.926618472 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.918344338 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.08064115 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.924456161 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.919322404 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.919438098 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.921493746 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.918714103 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.93174292 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.920374032 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.920679401 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.930363647 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.926173931 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.924225192 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.920056262 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.930961057 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.924048657 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.92195002 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.92363976 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.92275888 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.913150403 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.920624982 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.920537133 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.926870414 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.918223814 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.923294759 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.922277975 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.920683282 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.925225198 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.928746343 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.924267336 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.924250446 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.923504478 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.921994407 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.921233542 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.922978585 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.920334902 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.924727028 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.925915869 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.925527043 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.91991104 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.919196508 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.918729151 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.921505677 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.924598019 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.923936124 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.929894583 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.9217894 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.920373853 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.92895874 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921077031 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.919724307 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.922251224 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.916529432 seconds)
  done (took 141.392059275 seconds)
done (took 569.573786934 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.038644313 seconds)
  done (took 8.881345821 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.029547778 seconds)
  done (took 8.974934751 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.305859589 seconds)
  done (took 10.146790083 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.938564927 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.926464852 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.914993894 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.916622 seconds)
  done (took 29.544273571 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.988782277 seconds)
  done (took 8.826337236 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.925935861 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.909402507 seconds)
  done (took 15.706823245 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.095598326 seconds)
  done (took 8.935405685 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.972138363 seconds)
  done (took 8.813829387 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.924646158 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.940734199 seconds)
  done (took 15.712992879 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.897407702 seconds)
  done (took 8.732312205 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.571556033 seconds)
  done (took 11.41379128 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.912508669 seconds)
  done (took 8.757907959 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.934260259 seconds)
  done (took 8.770704354 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.12228162 seconds)
  done (took 9.957859626 seconds)
done (took 165.011803125 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.913415373 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.913561168 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.911403788 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.909271583 seconds)
  done (took 29.48050053 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.952701367 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.952760957 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.954290431 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.961500741 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.955905731 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.950596458 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.941657972 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.945611812 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.962445838 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.957293286 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.953973454 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.951805102 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.954722879 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.944780688 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.954009645 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.952208978 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.959832955 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.956250246 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.941966703 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.955920055 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.916574429 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.963473364 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.958976713 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.91793499 seconds)
  done (took 48.653925597 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.119256929 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.989955416 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.074726345 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.972490938 seconds)
  done (took 9.992628649 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.96792948 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.971459521 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.990027678 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.022806105 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.055087027 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.983665634 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.944364552 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.945441833 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.924379818 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.970272747 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.048395478 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.966825555 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.05708956 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.918680893 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.115890178 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.916813682 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.917691467 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.970568303 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.021659207 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.035739829 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.92022894 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.969901975 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.975972178 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.967629882 seconds)
  done (took 49.415618978 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.917608514 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.92271032 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.923379036 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.919927425 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.917193665 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.920209677 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.922321231 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.917555022 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.938304542 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.918023175 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.916526735 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.917486824 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.917698803 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.91741864 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.917372513 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.929644624 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.932948407 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.917037569 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.923222381 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.923431207 seconds)
  done (took 40.266788915 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.911057446 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.767805686 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.265585381 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.173434355 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.913241725 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.912669138 seconds)
  done (took 31.781303063 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.929557646 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.92481127 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.91841734 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.976095674 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.054727858 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.925048925 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.921745071 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.932728448 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.962484976 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.978399451 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.934334273 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.947549308 seconds)
  done (took 25.24608959 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.915791994 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.918665474 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.917926989 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.930641084 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.930342365 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.925587363 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.926860599 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.917518795 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.930156545 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.942876076 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.925715682 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.933062953 seconds)
  done (took 44.960372036 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006137895 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.805391886 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.982623435 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.634943137 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388387428 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125029737 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.449604257 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259719838 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.92002604 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190404334 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150212451 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016716242 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172034456 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916469503 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.919827167 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.417336038 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216468651 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148757615 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944624246 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763720451 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968441652 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353623381 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.82453984 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.975722244 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128474509 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.05031191 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.177976183 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.876094214 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061262707 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955382154 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927136565 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.918640543 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194286053 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305757479 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022921632 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928040539 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575828664 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.63186649 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.99844589 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.772692379 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.860639788 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.050548692 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927714936 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917706298 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852025926 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366369957 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298457621 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.92447283 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.631436841 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922333974 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932637676 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009908338 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.924830329 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.743892514 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875648244 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.199454205 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.919080454 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92806422 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.490544335 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.137991691 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373939973 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.885704808 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.114217309 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.782339409 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316577831 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.069754554 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.923061453 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923759749 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857422146 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.762210408 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972906729 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.064853204 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.939217899 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571575816 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223292308 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.194407809 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859511015 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207526349 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.632797572 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.885348943 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15002242 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.877842038 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856204418 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.781785689 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.85441174 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228819338 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956594079 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.565138342 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959466741 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.265629152 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.932312179 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939665146 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928256694 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144919179 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 5.032938254 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919897808 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.906646024 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.073920276 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941593224 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.260165423 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857275749 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.920839246 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176829756 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.131637699 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.056747479 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.446819925 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084042649 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994548109 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.935538358 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.754643321 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959975102 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.204283918 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982931588 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.118736924 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978503494 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.884020993 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23662718 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.997951247 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.019820803 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.194814471 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044878527 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.257800766 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.211245151 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9895931 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929176245 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.923571135 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.794838212 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.473198248 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.189837806 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.924832282 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330883597 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958159236 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.923726024 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859789228 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.536923207 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168476798 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.896229446 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.149348289 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.798235266 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225833312 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857774767 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068372283 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.039209011 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.144750076 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.596752158 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.013965226 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182833359 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319704896 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.092386221 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959873104 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94325408 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018630674 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94514489 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.251853683 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.203452217 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.927845027 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.927295193 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.820951953 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.920881593 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929361937 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.928142947 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725256149 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213209998 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.952214708 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929592774 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.921569769 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.937596343 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992915856 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931349528 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.936318802 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.477905153 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.674508255 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.939602306 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.569415645 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147921184 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936513234 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.789500918 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036823685 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.0105095 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.205021659 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986957397 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.861952068 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.639384148 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.621067816 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927385753 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.861825217 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.926236567 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935347788 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93846345 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.310545722 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.212530581 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.970541117 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.784035364 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.970095067 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936007149 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.930995 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928109736 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.466397981 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.159518188 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393453089 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962444656 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066102227 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.942727009 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.862679449 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.931578698 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933930299 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.926746041 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.884174794 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982185564 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.780011826 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309430682 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187552928 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.621967544 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944551383 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.888750802 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.987161746 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.942690009 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.774264552 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922804718 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.957674219 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051131548 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.937612656 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.809889725 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.626450398 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493922252 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245332864 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.243072704 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377717452 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.34740814 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.221767971 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269091445 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165292722 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.462057544 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.989002082 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.280597468 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875356143 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013798448 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.597421702 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29619516 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94200717 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157086652 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326111968 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.834415446 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079535274 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142151385 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964639068 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.775070972 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.883288043 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.135010351 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072095299 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.846883726 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137974767 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274996756 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.780065686 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.025645395 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.929043026 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.647041587 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014606732 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.64997556 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.306989814 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421634215 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.031564711 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414754227 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.941036521 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.376368538 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296004552 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.157049185 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.042938797 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865786786 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.941557295 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.944246217 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.932312508 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.923365417 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.796704021 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.181868323 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94248774 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172377915 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.103783278 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.227267835 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.841697256 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.937529911 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932398469 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246747751 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.64720083 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096339847 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.288671144 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.448791793 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938961563 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.866397388 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867563232 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.625189147 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.941831332 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908800721 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155287046 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.120653245 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.885479478 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336717535 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165385423 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187108956 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.947454717 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.214572481 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208439928 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.669739563 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963099914 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.035437794 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.779336089 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.055480086 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.201778431 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171186751 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735462207 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.163624541 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.006907694 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.74285645 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.933996277 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146664979 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.202819948 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.012525773 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170440694 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.652580271 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.933032883 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358316153 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990720217 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.026793756 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.096160039 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.126982613 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943178476 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017560635 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942747624 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.943954348 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.945215226 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979088728 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.038478981 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.065526287 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.949350778 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022122455 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.139456821 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.463921572 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.937697032 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221013436 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297151011 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.270494754 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994847805 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.936379138 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945035891 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869709269 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068761476 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.383018721 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208513693 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.065651322 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.231211265 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958255495 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.779047876 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.232660239 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168471921 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20949897 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.83146659 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966280646 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.946005648 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.203905308 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947135482 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.147721641 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170963993 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250897387 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404828209 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.080395629 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304232407 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210417537 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.308490612 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937409109 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.52825087 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.939140366 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.762433978 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.975405331 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.015245265 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215257815 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947479817 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317974761 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.958651236 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.137502726 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.454165606 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810470528 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224373329 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.934967835 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.003672928 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221980692 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332919871 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249608661 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008528754 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947335156 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.643499606 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075195763 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.801804589 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.204471719 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938162273 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151928629 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.648090614 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.947794084 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229457688 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247970881 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.934702509 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.805381548 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944746372 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.949060703 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.164725311 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215923365 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191262451 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948000757 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.942427385 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.754848711 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224384612 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997701904 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872652879 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.939665526 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038692828 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185349857 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959501922 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.457180478 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.651135203 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246479944 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.860791374 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961307793 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425429614 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311646 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279051601 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.483887206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167241022 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496846183 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.837952491 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232615404 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.944730311 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367970491 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241718411 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.942641464 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.469733439 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97068906 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.219402176 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259483595 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.942349306 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932890256 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.908910635 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164999682 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.540497882 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880573897 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.939505225 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.001560009 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.938908799 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.070758535 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950135723 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.811374471 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79399969 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.750532443 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433149795 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.942143058 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.930961628 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.823523071 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.527544462 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967911086 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084570762 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943405469 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.664993953 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.232963067 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197972696 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.478667532 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.942325027 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.945533051 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942880206 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.870274199 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.138279109 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.323564731 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24064098 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.311332908 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.970975284 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945585794 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.158991283 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153686736 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.032213445 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088455008 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350478534 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973826198 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.705189894 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.624090599 seconds)
  done (took 1717.713541864 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.954741783 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.957484783 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.950180674 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.961606405 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.947100522 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.006386028 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.948469715 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.979876927 seconds)
  done (took 57.571469088 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.93906367 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.136653543 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.947788578 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.939296797 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.947385864 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.942579779 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.109095265 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.944291998 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.947399705 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.951471331 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.938744421 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.939476693 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.253055811 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.957266717 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.939757348 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.923620216 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.944617209 seconds)
  done (took 75.573543542 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.94551086 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.127760232 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.967082713 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.96877132 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.887101729 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.94906697 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.908742728 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.994621071 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.943564491 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.160596046 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.274064795 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.95625582 seconds)
  done (took 90.946603614 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.954936396 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.947087103 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.948289923 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.947540547 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.947878048 seconds)
  done (took 11.61356901 seconds)
done (took 2235.079296122 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.257283669 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.170034332 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.186548683 seconds)
  done (took 6.220794389 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.097335628 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.146246481 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.265686203 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.24960668 seconds)
  done (took 10.634117523 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.242240314 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.330896698 seconds)
  done (took 6.446744808 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.34678993 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.951577917 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.341531933 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.949004787 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.946600653 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.948105839 seconds)
  done (took 22.721376683 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.951797595 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.954073918 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.951182844 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.956514361 seconds)
  done (took 9.68613924 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.933651445 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.67102231 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.93556393 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.946053918 seconds)
  done (took 21.359162384 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.699710224 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.348568876 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.695932907 seconds)
  done (took 9.61555347 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.61833179 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.86378799 seconds)
  done (took 9.353714714 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.197018771 seconds)
  done (took 4.076763615 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.986949018 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.227445939 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.501674791 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.524110581 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.586030429 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.804143684 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.265212315 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.188290468 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.387750352 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.396441649 seconds)
  done (took 25.746084183 seconds)
done (took 141.622810679 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.329872744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.320186604 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.159676209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.300488599 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.182701029 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.159080558 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.169547083 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.286297788 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.79564244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.796550356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.339065597 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.177291374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.112248891 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.325212341 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.123039827 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.959214215 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.244096775 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.333913887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.985946132 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.181354281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.17077218 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.92040603 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.17384676 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.928886124 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.201721708 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.10071902 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.485902375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.177278364 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.129486491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.48901944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.08831366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.323716468 seconds)
  done (took 172.351277182 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.664424409 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.930600981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.932255391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.926409624 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.336238117 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.926863202 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.921334975 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.919888581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.9140864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.895633666 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.919252271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.308938355 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.911225464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.916711219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.909624415 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.90657603 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.109676982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.663285769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.901884965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.901015428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.906121199 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.116377224 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.902317642 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.144160036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.080887873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.90577519 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.850414163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.905646003 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.888902813 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.856355473 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.897410221 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.884870968 seconds)
  done (took 208.016974087 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.871657322 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.888902947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.883859459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.884727009 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.880602228 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.883360021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.882657894 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.882676991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.522048403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.52476608 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.88793219 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.889616211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.895107327 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.882516767 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.885504965 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.878278782 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.882184591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.885431533 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.873565583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.882505917 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.882648601 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.705815681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.882394523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.705825271 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.879573463 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.878786966 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.869800923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.887512209 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.889847808 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.888177872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.892485376 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.871944302 seconds)
  done (took 221.008300259 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.062542333 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.874472875 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.879706659 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.811489509 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.874106121 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.87436697 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.827829889 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.072650012 seconds)
  done (took 19.098346497 seconds)
done (took 622.36534073 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.295724435 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.145725117 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.046079312 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.896159859 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.112696573 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.93025112 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.893186627 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.959157838 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.615486191 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.962505369 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.533093054 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.907097892 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.622697324 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.911715748 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.01405774 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.954832425 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.474696677 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.567482023 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.0657133 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.928500422 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.065597981 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.838968914 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.96899863 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.632388344 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.639292004 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.880135036 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.070767052 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.483691467 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.897172295 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.053552487 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.653016956 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.276439373 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.899744305 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.886131456 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.944385038 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.92333831 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.23153341 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.896733891 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.005470826 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.645233601 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.932443591 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.497507249 seconds)
  done (took 102.957694716 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.860337355 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.858918731 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.857757052 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.859240476 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.860160766 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.858556368 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.85904643 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.858814884 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.85894397 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.858552161 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.85783562 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.860669464 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.861139506 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.859842494 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.859181181 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.858062259 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.859486067 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.86059471 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.858906264 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.858220481 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.859284058 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.858449771 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.873752162 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.858897594 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.860005605 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.859556076 seconds)
  done (took 50.160436014 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.872347219 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.020824898 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.125012373 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.888819061 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.8725379 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.876774178 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.888488402 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.875249183 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.874888749 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.874651994 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.964905792 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.877320402 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.892190089 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.12864018 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.885110816 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.872840814 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.874198629 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.874358167 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.024665206 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.88728174 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.892461981 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.87783073 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.891986523 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.885526566 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.875257218 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.873888689 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.87758262 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.348292579 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.881464215 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.967241651 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.915481398 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.897150946 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.299312841 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.138571276 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.924557129 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.880800689 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.874691687 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.969974701 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.878744185 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.874459689 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.891569107 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.877118305 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.130839757 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.364954436 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.886069133 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.875940722 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.371491286 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.975435665 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.914334605 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.884685793 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.131218241 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.888480422 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.878132108 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.875249919 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.909984276 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.885536806 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.873865572 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.195332438 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.88449273 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.893771097 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.878705464 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.876048555 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.032481907 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.884439665 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.020013573 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.882190633 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.882574964 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.876606121 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.13088321 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.888885295 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.375716226 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.886284575 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.876169406 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.967438192 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.02432623 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.386126823 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.886742139 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.034418895 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.314383157 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.897368831 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.883094876 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.340544752 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.90262799 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.881724211 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.877469833 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.877324724 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.875356514 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.923767753 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.890623525 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.297852195 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.375334941 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.207528873 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.900414359 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.890383744 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.875190185 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.192430876 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.8814406 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.875222848 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.122328192 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.381790247 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.886292632 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.882816244 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.359810602 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.888266417 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.894407463 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.883080887 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.13545811 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.889497362 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.923657372 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.876461659 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.882068236 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.879610032 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.895062788 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.882761391 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.876684534 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.350980599 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.984564378 seconds)
  done (took 232.690384644 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.872373482 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.883291394 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.86875938 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.870631103 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.870048574 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.8758401 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.869917489 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.869867329 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.875440842 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.870122768 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.869845296 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.871669671 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.873901159 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.876298337 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.494254577 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.97541219 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.582772911 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.970619587 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.967365632 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.979351764 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.654451738 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.979522802 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.970247545 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.968981516 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.967917829 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.969524611 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.978792765 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.003778665 seconds)
  done (took 169.483666258 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.97525324 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.158016131 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.996088341 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.013544009 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.987477447 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.972794356 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.998752704 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.996825387 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.982721442 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.973039189 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.974511418 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.037659632 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.988370881 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.117431323 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.006544179 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.010027816 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.082302353 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.982785446 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.973284655 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.973379141 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.003856255 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.97197331 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.03751493 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.105674432 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.996451411 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.095155872 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.984037652 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.976378351 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.976390525 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.098295424 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.994278386 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.037691581 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.00619474 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.997101165 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.102597525 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.096462428 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.082914527 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.005687149 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.983901683 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.975080104 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.976457614 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.964656892 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.0944755 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.994444197 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.978134722 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.08618904 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.996166054 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.978120773 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.98532213 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.975438136 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.990692113 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.998799825 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.048066088 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.110753434 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.011908252 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.008641641 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.002361358 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.256675021 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.992398382 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.079277976 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.969417376 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.094881848 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.997056342 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.965888725 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.976060184 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.98050933 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.005787227 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.011132144 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.084638333 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.982635621 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.077283377 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.010735625 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.984612078 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.974945917 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.976767988 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.094538416 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.095858391 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.010503381 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.01963417 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.010191322 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.973533316 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.974358991 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.9624601 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.9943172 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.979101546 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.092298776 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.094501609 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.978607674 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.976194483 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.971529552 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.971807962 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.996873338 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.101391944 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.00783154 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.070128893 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.038189988 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.04398412 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.982353524 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.981273093 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.972645649 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.031249189 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.980519989 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.976225483 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.296821475 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.039767394 seconds)
  done (took 213.968999708 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.415533662 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.015140093 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.028153921 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.282727624 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.383469908 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.843959566 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.011709764 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.01253681 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.037643167 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.203449553 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.082358404 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.03123986 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.996349127 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.984503486 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.007900293 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.028506552 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.020774433 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.324597739 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.126321872 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.144060053 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.985238077 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.301329045 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.321869007 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.401583181 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.043622804 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.343400373 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.687465042 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.146939981 seconds)
  done (took 64.105755354 seconds)
done (took 835.16493308 seconds)
SAVING RESULT...
DONE!
