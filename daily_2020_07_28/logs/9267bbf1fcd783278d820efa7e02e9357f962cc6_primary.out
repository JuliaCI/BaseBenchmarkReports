cset: moving following pidspec: 30277
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.536988595 seconds)
loading group "shootout"... done (took 1.213800976 seconds)
loading group "string"... done (took 0.401957563 seconds)
loading group "linalg"... done (took 7.598492274 seconds)
loading group "parallel"... done (took 0.14420067 seconds)
loading group "find"... done (took 1.267649654 seconds)
loading group "tuple"... done (took 1.822454789 seconds)
loading group "union"... done (took 11.984520549 seconds)
loading group "dates"... done (took 1.230684737 seconds)
loading group "micro"... done (took 0.187210444 seconds)
loading group "simd"... done (took 4.156437444 seconds)
loading group "io"... done (took 0.997502623 seconds)
loading group "random"... done (took 8.265111447 seconds)
loading group "problem"... done (took 1.524525631 seconds)
loading group "array"... done (took 18.45218873 seconds)
loading group "misc"... done (took 1.447075081 seconds)
loading group "scalar"... done (took 37.576185934 seconds)
loading group "sort"... done (took 2.871198293 seconds)
loading group "sparse"... done (took 11.331313212 seconds)
loading group "collection"... done (took 16.679233926 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482918724 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123502095 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127137133 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115425194 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.142043969 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117029162 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12339212 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084163156 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.90254587 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138046416 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.110560576 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428010939 seconds)
done (took 5.255647675 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.159793275 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084744879 seconds)
    (2/2) benchmarking "String"...
    done (took 0.074730248 seconds)
  done (took 1.320924561 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061151133 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126404447 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062830805 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063529919 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062831983 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062917534 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062513317 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062911852 seconds)
  done (took 1.667298499 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067561639 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063822334 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.061814488 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064508176 seconds)
  done (took 1.421117847 seconds)
done (took 5.811131438 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.230602432 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.097100204 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.282698926 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.385939043 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.449993319 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.087812909 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071178168 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066654148 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126208485 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311950863 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102595544 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.179465677 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088456096 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.174591719 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.978827105 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.117926986 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0823999 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.124027595 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090435962 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127299823 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.405700022 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075138152 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071785958 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.067408273 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064226541 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.646720331 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665184443 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126936836 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080706507 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097750313 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113293606 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.65217769 seconds)
  done (took 10.435840877 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.088901086 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.089738626 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065552183 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121659185 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091007577 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06645875 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071151191 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063596381 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088189624 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121749767 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087568162 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096991793 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063106312 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065791149 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072785758 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195234545 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077815723 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077314018 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064964074 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077005472 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104281491 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075651627 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075990982 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076054778 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125550786 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.165733107 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.092698958 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093131782 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064078205 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077124792 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111589196 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124078951 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062965537 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062397263 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117767265 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092178609 seconds)
  done (took 4.476324134 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.933606533 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089626757 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099885782 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.609684553 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108494159 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.147163289 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.236772718 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069307463 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.369545521 seconds)
    (9/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063223796 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.143784195 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.109258341 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.144860357 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.112332511 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06621812 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.21279535 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.113029623 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.36680195 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064289205 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.063386248 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062220165 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065219461 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064458969 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060093708 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066653137 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088744387 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083778558 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.162334199 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.919448049 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.244890893 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063896076 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162361001 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.079245303 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.3565302 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066715461 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080100537 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.395290665 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.118162081 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062971418 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162945879 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.112899413 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.061310995 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.116394953 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.074923746 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.066074416 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.065142833 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064773882 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070665998 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07489731 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097914105 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062903659 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062082382 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159260105 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061970883 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06301451 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064550625 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145721437 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061760879 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.138259337 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060977843 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064835941 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092991455 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064684715 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087322571 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.0992438 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.341850944 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.025996467 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062829759 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.88514395 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074707742 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062753876 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067768602 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062924923 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064456011 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063208753 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070932551 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066188658 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065740633 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105446442 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063854636 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061134687 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066386012 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063782306 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068035694 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.094501717 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063970692 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.45843042 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.092956988 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061428207 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074090721 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.101600213 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.059486488 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062798338 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069591234 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064023277 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063590902 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062633243 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063476504 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.178845824 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090489534 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06544534 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109777437 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.030674306 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.05986957 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064945805 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062923783 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068178636 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066098268 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065731421 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063799938 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066358402 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064162186 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061242888 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.109461753 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063793359 seconds)
  done (took 21.031928493 seconds)
done (took 38.040445164 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248181897 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078640641 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079082753 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079357977 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078787448 seconds)
  done (took 1.815230953 seconds)
done (took 3.060624149 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.103949285 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060009843 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.096961857 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095538127 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062979036 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060381429 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.093887988 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060848286 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.093963294 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.09618508 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.097968246 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097093738 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060705817 seconds)
  done (took 2.328186731 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065272825 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076617272 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078824564 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058976836 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068978004 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077785235 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059151461 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076689883 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082984817 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077694945 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077358725 seconds)
  done (took 2.039629108 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064343834 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077117848 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079761283 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059829334 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070497642 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077845392 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058805523 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.07745108 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081651941 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077848002 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077825593 seconds)
  done (took 2.035062072 seconds)
done (took 7.634068559 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063620697 seconds)
  done (took 1.279246664 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.515776972 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.558736644 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065236055 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.087240414 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181922222 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.09688137 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.225881546 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071402336 seconds)
  done (took 8.193684211 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095102462 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065352034 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065487684 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067235653 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066072439 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066041467 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064957505 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067085685 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065409768 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065577662 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066532472 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066573821 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065718475 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066356234 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065086495 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065290349 seconds)
  done (took 2.39736204 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092717443 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092107324 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070094168 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071088212 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068844289 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068198571 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070740649 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0701061 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067262698 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068658905 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071252409 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069437111 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068841947 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060378963 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070300333 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072516746 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067093773 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070900815 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071136105 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071590209 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.0716525 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060796817 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069171597 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070219921 seconds)
  done (took 3.038926608 seconds)
done (took 16.141258508 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109195348 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071418365 seconds)
  done (took 1.401247593 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.06603486 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066612237 seconds)
  done (took 1.365490903 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072936696 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057244412 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079555125 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068378213 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058135543 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059009988 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078401609 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058978675 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059059085 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058812185 seconds)
  done (took 1.883844229 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059847532 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067268361 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064524338 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066527314 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065921418 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060308756 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063760901 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060641435 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06844644 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.05919262 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064746678 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079172244 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06445331 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081065776 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063569551 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064521207 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06670313 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064232165 seconds)
  done (took 2.424562948 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057468728 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059575048 seconds)
  done (took 1.364778488 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061759959 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058726919 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06328926 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062244703 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059877274 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059273236 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059967775 seconds)
  done (took 1.662745108 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.403365515 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115990171 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33445265 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066162509 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076361129 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.244191586 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060609771 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065352653 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065799143 seconds)
  done (took 2.713369917 seconds)
done (took 14.063978798 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075394973 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.079178335 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086470926 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417804364 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089180427 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063489548 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109116918 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177912389 seconds)
done (took 2.358736411 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209779791 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.400193605 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.946765676 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063465488 seconds)
  done (took 3.658765157 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.316209595 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081123617 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074849479 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064213978 seconds)
  done (took 1.796685122 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060244475 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067288478 seconds)
  done (took 1.379777413 seconds)
done (took 8.303064327 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059746467 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085870989 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060516806 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.061263461 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060848009 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060668764 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060913527 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060208082 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060462053 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.0603262 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.060538435 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060020679 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060720556 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060384716 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060370459 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060392526 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06081964 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060289674 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060475607 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060670263 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060459008 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060495888 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06093524 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060330635 seconds)
  done (took 2.756697471 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077223486 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062218486 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063361653 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.062886943 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064564757 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064581928 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064476233 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062672142 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064408836 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062770394 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064944186 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064963434 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06247418 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064635725 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062642129 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064783699 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064182468 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062868733 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062532874 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064807817 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064326989 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062817157 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064971177 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064544842 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064765198 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064816716 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062531153 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063055837 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064296529 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064939299 seconds)
  done (took 3.190800338 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060000913 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056602367 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059040507 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.06692165 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058135001 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057852584 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058530565 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056947323 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057754674 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059065088 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057958752 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057432801 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058846256 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057277764 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057611749 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058713325 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061610905 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075361622 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057769856 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057674953 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061106238 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058481361 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058321663 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057563409 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058407271 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057700043 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057462848 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057976386 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056940245 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058285918 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057570009 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060827972 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062023157 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057206907 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066205285 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061582011 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057610543 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061366352 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058962994 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057696796 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057443647 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057460389 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057889179 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057612912 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066064146 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058175141 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058678358 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057961229 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057531334 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057366299 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057529637 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059621852 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062541972 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059184603 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057073981 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058769346 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057373362 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058598322 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057447513 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057100135 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057217579 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060361257 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059290742 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058563286 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074545981 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059400767 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066180261 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057575569 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061421425 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060663183 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058355179 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072928866 seconds)
  done (took 5.555279775 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081813045 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084411654 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062396296 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062332386 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058338184 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058429553 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066130405 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058327261 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06250295 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077158416 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058264278 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06264198 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062085153 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062047054 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058362266 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062748111 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066688706 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058220769 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057871078 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061935996 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05839029 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066072324 seconds)
  done (took 2.683517484 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134479537 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063689191 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.100637613 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07500958 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066834527 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074677129 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063583377 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063623561 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063959744 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064518364 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064445557 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063857565 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066446072 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064240677 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064208915 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064042239 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063804311 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064358711 seconds)
  done (took 2.55769142 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073048637 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063321414 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085580137 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062973803 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063449174 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063105952 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067768221 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068138068 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062683081 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063472932 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.06839453 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062966182 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062621702 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063297032 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062847845 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063192321 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062682429 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063175308 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068102714 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06754524 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067389203 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06803382 seconds)
  done (took 2.724883793 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071201093 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061025939 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074870845 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064010832 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058600177 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058415341 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063119502 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062216839 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063083352 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061690954 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062199932 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058319958 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064291755 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062824195 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064336505 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062673913 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062364263 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062496822 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062044774 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05832674 seconds)
  done (took 2.528765076 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082456565 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060665357 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060969214 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079400775 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061117636 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0610854 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079061614 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061326711 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060912053 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082065396 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061675217 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06098303 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079666443 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079349968 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061515475 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079556174 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079415718 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079331849 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061379323 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06124029 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082001409 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061477733 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079324394 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061779126 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061088155 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061304451 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06094651 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079308968 seconds)
  done (took 3.211913444 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06864109 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060592107 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060961895 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060755656 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060215053 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060318037 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06062118 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06042044 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06158984 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060800704 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060396562 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060778764 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06070387 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060315835 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060689681 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063401794 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060487583 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060768806 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060728289 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060803812 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060829496 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060115065 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061220207 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060649708 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06109681 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060423174 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060625743 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060586321 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060482418 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061210577 seconds)
  done (took 3.110860586 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070591189 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068506389 seconds)
  done (took 1.417161695 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059266001 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072143863 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056964376 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067511065 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067226303 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061237375 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067737045 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066781465 seconds)
  done (took 1.790685295 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064368408 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085862549 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059652239 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061140234 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063681213 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115118981 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073542804 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.068759371 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073486917 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060602109 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060161404 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071025801 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058988034 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07057282 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061577701 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066645114 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065002757 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069380721 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070503171 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057961019 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069301532 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060577338 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058355395 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060624382 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059691819 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064823574 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073480246 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069730373 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066405142 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057195439 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076991531 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058308011 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059427418 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066675652 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063610457 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058339118 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092397151 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058578675 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064831998 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058168647 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069687124 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076835113 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070558072 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074985749 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060153389 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060658616 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058273256 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060707656 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060975568 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066050883 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058332761 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064321663 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057883757 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060231471 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067622344 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058602079 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065272896 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066621919 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069278094 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067570606 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065482324 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071463932 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065653166 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067893078 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059791744 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075813573 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060521178 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068982982 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071205192 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061105597 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071461203 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058244277 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056848686 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057849448 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088732821 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060138756 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059737914 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058556757 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058884127 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060160932 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066849931 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064898213 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064252805 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062999889 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0723721 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06609002 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057997672 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066516299 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075153178 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060428031 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058611823 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073294954 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061042826 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.05812532 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074690467 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066397769 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.06066776 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059336714 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060354892 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070797041 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059375937 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056931806 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065005492 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060149801 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061654789 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063693878 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064365805 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057865598 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066498339 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063632903 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059813298 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056855352 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06157392 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059095026 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056769202 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066559428 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058725294 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072565051 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063409421 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070322414 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070913453 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067232631 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071249027 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057371026 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056208898 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07347647 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.200424405 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061652001 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076709631 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059001122 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068941482 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059190209 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060688935 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066891592 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057732797 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06113324 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059625685 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065118436 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060474262 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061473071 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061962795 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06611868 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070333662 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.0600171 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066422634 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058941186 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073031086 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06729747 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062404398 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063303783 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059951396 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070286537 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063914665 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066452033 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.05829756 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059632503 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058786395 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067659465 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06688997 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060286271 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067862034 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062721106 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059651471 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059026708 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060157516 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061558389 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062968805 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059756917 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064358688 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06584387 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.071445918 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069991773 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065693771 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057530653 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058031774 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060710787 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058512223 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061778548 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06644849 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072020107 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069296249 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07731436 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058796591 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066726216 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060263781 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07387007 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069897888 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059591823 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064463613 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057632797 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060389025 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066768266 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06928222 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.072065599 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07153218 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062087552 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062025605 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.05830907 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071847862 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059193597 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065393281 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066658935 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063957302 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058844345 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060664454 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06663642 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062452613 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059072249 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.071930205 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065790461 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058644604 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070826598 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.05868191 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068411287 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058301963 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061263078 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062700866 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060702756 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06641637 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071928742 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057457338 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059254412 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072476548 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061545524 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061245022 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065171685 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071573713 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06201112 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065087918 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068099415 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067147984 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061771425 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066402216 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059451128 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066232712 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061781298 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068921332 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058528624 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074268772 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056936817 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.070980208 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058882598 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.067850752 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058409562 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066196651 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058908553 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073101495 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059780598 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059043034 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.06908978 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056635023 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065694608 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057114511 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061177158 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.062413917 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.065177317 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059447317 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.204333445 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062006389 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066543653 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062958474 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066630743 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067371311 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061972516 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.05868518 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065552794 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069341635 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065806347 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060609787 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060516317 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059303042 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067203955 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060456363 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060112295 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065799296 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062060669 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064031235 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060579795 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061766403 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060940914 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06584291 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06716068 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074541315 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065299766 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064666708 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066448762 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058534786 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072404932 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058239627 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064268723 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057774002 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066335809 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067294417 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058667792 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077247042 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060426345 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065395732 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071033184 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065742917 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061062634 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075277893 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062387612 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.0651996 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065583518 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061976993 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064050761 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061164516 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065369944 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066489558 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068306079 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059512395 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064490352 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065412909 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060780648 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.0681014 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060784964 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065123851 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06077817 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057813679 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06223813 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069345407 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062428285 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062942005 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059181215 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057790196 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.05948974 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.06679099 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062284682 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066034953 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072183567 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057695496 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059975757 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058200786 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063268237 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075597031 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067004125 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064960842 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062176136 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057765924 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060964342 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060881211 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059178711 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063055737 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058162952 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058430721 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067913334 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061075107 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061869597 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058946307 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060236656 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066352988 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064395349 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059520918 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063766103 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.0581342 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062283623 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057702168 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060449164 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062674122 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057953173 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06081301 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067241559 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073171259 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064403857 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065810986 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059506561 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064958939 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071761598 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067077191 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059974076 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066740091 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.05774457 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075073705 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066614985 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064874686 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06667397 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.05885423 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072985531 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064082817 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066877981 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071824768 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059036724 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066278542 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057654786 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071223214 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060731082 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057111041 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064031908 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063514395 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.061972603 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.067601104 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058301715 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06442521 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063357904 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.059991065 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059243822 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059000197 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.064746484 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071471283 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058880647 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.062535973 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064429345 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064342313 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.060830011 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.06872887 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064607648 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058370682 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059425596 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.059732832 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.058322361 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068174 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057868716 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.061330339 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.060614618 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.057270273 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06241828 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071329459 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065027037 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065364756 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057263187 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056323971 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.073056634 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.059765123 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061251682 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.063936754 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065130673 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068513086 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065311988 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072494905 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.05792956 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.062544127 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068120613 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058184671 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057275586 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060212257 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059545139 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065084982 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066128399 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063305231 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059745044 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063751517 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069276679 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059234229 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061140093 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.062669836 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058783518 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066370063 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064198425 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064541689 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059045874 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057296104 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060266871 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065045905 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06380454 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065200642 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058967585 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065309364 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.070226536 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063867765 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061363592 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057389855 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061521673 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064870168 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063537271 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057557561 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06171515 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.059831152 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065811055 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065557405 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.060607933 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057369861 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072698958 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.064806596 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.065014904 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059806762 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059809629 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058214033 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057688703 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067222755 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057178225 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059437853 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061560434 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059485874 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.073749923 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.064300271 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071751561 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058941354 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061424084 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057932681 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065799641 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06147748 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058044275 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067047661 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.05680399 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071060797 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.068523279 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065773187 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057037388 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061399712 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.064771656 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070438081 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066150715 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065102509 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061604222 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066167746 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060226187 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067349711 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.05803334 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.056551627 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066279504 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065123637 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.068681652 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.05740765 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.066458775 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059446219 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064395143 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.064620432 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059939544 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06019079 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059812278 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.313859837 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06419577 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069547374 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065076792 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076142524 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.06209676 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070556207 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068624467 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071591016 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073446845 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073727714 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069413217 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063305014 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06745939 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068415648 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062303123 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065227929 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064421507 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081268828 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063006264 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063201735 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074113394 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068266934 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060165737 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068691683 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063948242 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069312382 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061534198 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069532938 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065574128 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061380544 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063900493 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063589606 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058467451 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059504409 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060239647 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068395255 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063153938 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06018243 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077179132 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061684174 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066915029 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069852676 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064592162 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061437384 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058140192 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060841032 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070318213 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073185133 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062209955 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066702811 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061436562 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067604145 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058209031 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06691833 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066253172 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066930048 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059630231 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059844115 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072258735 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072523679 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062855542 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067104824 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066671248 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060849296 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079877608 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066582881 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060187034 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068834266 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062014552 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058388732 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058260845 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060935288 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070487775 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060607171 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.06210746 seconds)
  done (took 40.057688452 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097375527 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060752739 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059475589 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059310169 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071486241 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060721243 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059863156 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060549455 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060408466 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062828872 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059251112 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059749958 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072077239 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074500946 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070961004 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064084361 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059694138 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060754888 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059970952 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060733709 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071539184 seconds)
  done (took 2.799779834 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065887393 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075271581 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071924439 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076863732 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06816538 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064472233 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072623194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064552526 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072712765 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0699713 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072947922 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064934076 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070233381 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070292307 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069841372 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064838202 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072843866 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068366985 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064656991 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072504977 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064820153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072283923 seconds)
  done (took 2.923572506 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.060013777 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.05984121 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066417781 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058653116 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058973467 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063338884 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058783692 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062375374 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062642298 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062645749 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066871553 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060131093 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059074833 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063772813 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058379035 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059964331 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103437929 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060540227 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060327192 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058913833 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064850873 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067887731 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059503853 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060263027 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063731989 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063442077 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059371904 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062693559 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060317401 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062887603 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060529674 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058821106 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066887778 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066119045 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062535292 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06291303 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061025355 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060283941 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059312626 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059412892 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066197801 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060703992 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.05916249 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060731491 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067035971 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058869087 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058771692 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066826653 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058442875 seconds)
  done (took 4.463056509 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070495726 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108719168 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065178081 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088886363 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.0735259 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066791833 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064867982 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089632534 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06062774 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061984367 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075423844 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075420066 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063083976 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065519433 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066414489 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062765393 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063787358 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062096597 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066292285 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06241256 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066676695 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066433657 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073522768 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074181036 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064192837 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0616901 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062560373 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064860001 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073734783 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06737039 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064778626 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06541505 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07419786 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065487318 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062096076 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062484486 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075156019 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062954819 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062800298 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060553656 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062175315 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064308443 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066506806 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07527583 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062800171 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066746484 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062534958 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060519555 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073910064 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062531801 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067692399 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075100733 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064084822 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06323175 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064393115 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074276407 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062731532 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061032217 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063051967 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073727117 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062852138 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063867917 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074583908 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06218408 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.06696929 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075086093 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066979127 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063932292 seconds)
  done (took 6.142825145 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068315322 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09066588 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071871194 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071769272 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070400652 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070924083 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070426805 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070500313 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070252832 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071703442 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070472047 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110427702 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066048804 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075959053 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070395163 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070645466 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070283007 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07046395 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070739798 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070552763 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070724916 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070916555 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070203666 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071299498 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073419454 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066012842 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070393944 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070305059 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071341964 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070616146 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074015692 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070253798 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070410008 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071141858 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073543188 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070651827 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059957808 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070196917 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070797234 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070236909 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065895867 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071410997 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07053482 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065666884 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070638003 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070298952 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071300961 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073775284 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079395995 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071730405 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070811217 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071321923 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070671349 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070528582 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071269666 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079237748 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071070433 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071413215 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070514718 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071738355 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070976817 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07917018 seconds)
  done (took 5.88681936 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074694687 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06665032 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079318568 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061110539 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.05919286 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069266001 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059053412 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.05975842 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068483759 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067715887 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070206646 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069416488 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072115008 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070104026 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069623449 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071655972 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06968232 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069054373 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067715159 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069044503 seconds)
  done (took 2.787497144 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.069732969 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076102117 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065543023 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069665191 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064958871 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068912465 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063670649 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064882622 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065259909 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064959267 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070947402 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070314584 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065213489 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06903092 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070262118 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068947122 seconds)
  done (took 2.508201865 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064210599 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067033596 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067385189 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060506026 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063820706 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059486193 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060216281 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058647545 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059554994 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073520198 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060091253 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071548243 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060163797 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059155195 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059793076 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065915763 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059492256 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060573542 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060023471 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065830482 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066854361 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061266489 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063878548 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060076327 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06562468 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067384174 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062112676 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063778727 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060490988 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060418247 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066044738 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066880979 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059969066 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060809729 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059118762 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060330376 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060836275 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060672005 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065854619 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060361575 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.05880579 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065226014 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060875666 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06164823 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059304413 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060520781 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059259779 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065591271 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060608801 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065280905 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060158602 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06252065 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061214275 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067934217 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063061067 seconds)
  done (took 4.858022859 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073082926 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063656367 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058992585 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059087362 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063706333 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064302264 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064233179 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064527955 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065364507 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059064148 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064829498 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063860585 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064702453 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06407082 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064599052 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064189716 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058896692 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064052773 seconds)
  done (took 2.573025975 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068399332 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063924158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.06831844 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064155571 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063938345 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06331107 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05902716 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.05902379 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059185287 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0633898 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063590844 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063045319 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059135228 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063181132 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063911774 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063373197 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062996232 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059281346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063345648 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059397331 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062992764 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059196526 seconds)
  done (took 2.798904732 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.08476864 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081451961 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.120885321 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076385041 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084036413 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069234215 seconds)
  done (took 1.939546632 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086206278 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1019305 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063095887 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064093552 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0746668 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067180354 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067575963 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067629416 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074438747 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073057737 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067709196 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075008253 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075296312 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069797735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075149166 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077975926 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067770008 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067739652 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063728144 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078508623 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067854084 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074647654 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068277171 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067757098 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067674963 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088572734 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078100477 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072532599 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069888463 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074937071 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077860554 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067925559 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074804659 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072542832 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064049857 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074704066 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06763688 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077690722 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074585214 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069737462 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063630798 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075009274 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074841301 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06991702 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077613544 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067846147 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07027044 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067908733 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068655244 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080348286 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075221168 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070046022 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075013724 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078288518 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078240428 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08129281 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072997622 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070447271 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075139295 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07286422 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070485581 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074993063 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0701345 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073031768 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081867163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070235365 seconds)
  done (took 6.244727973 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093746925 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063182931 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067749176 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07292859 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069865051 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067535232 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067943285 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06779487 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068328161 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064838165 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102422725 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06828717 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070153308 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070441734 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068074743 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067880072 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067751536 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070292494 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064523702 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080831142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067529719 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069939622 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069704738 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070162383 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072347065 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077966194 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067789651 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067807349 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067750821 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06772486 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069837286 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067618355 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069696475 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064078295 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069832252 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06781025 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067485532 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069501326 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067635918 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074695776 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069640684 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077562043 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067371493 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067289999 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072191709 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06730324 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06762608 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064515826 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067228284 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064268535 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072156187 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072390156 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072498855 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070089767 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068134223 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067743315 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067767774 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067522818 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067949585 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078202834 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070052062 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06752629 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080592099 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06785499 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067889913 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070119607 seconds)
  done (took 6.082371355 seconds)
done (took 124.846174263 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205428939 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179659478 seconds)
  done (took 1.796363843 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070150637 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094154604 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072085963 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131702569 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066521067 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101532535 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.0994325 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070758624 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066289863 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068118366 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067468029 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070521868 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13386561 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066209756 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066754764 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07117177 seconds)
  done (took 2.747680988 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099585672 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.181100738 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106275273 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065809838 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101873817 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073514414 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06578369 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076558843 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070015998 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068915879 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073662777 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071858803 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068529392 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07196421 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069691282 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073747879 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068182768 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072976395 seconds)
  done (took 2.918301754 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.088908617 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083371799 seconds)
  done (took 1.613632813 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15599816 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101467063 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.141230026 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.31609034 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.135457828 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.278657485 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.132491727 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128865922 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111236809 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122261384 seconds)
  done (took 3.058101355 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09651825 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160208662 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296999321 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116012264 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072225567 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.084559824 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117616555 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077948783 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07804464 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076998174 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077222544 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075864988 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094219577 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073599823 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073928722 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074279897 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098038344 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072456144 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072619182 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073120137 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097925033 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066569554 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073263952 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07234198 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075339672 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074967078 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06786658 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067295393 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073057807 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07255796 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075709321 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.081298379 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074880936 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101233862 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070405027 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.101873465 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071821544 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070991198 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073003135 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070784598 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074240518 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074105765 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075319344 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073649874 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067437699 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071643696 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067588384 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066092831 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076659754 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0673138 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076806152 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076086451 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.101463762 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068394978 seconds)
  done (took 5.995710898 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104198443 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102242941 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069285993 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108580332 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102349385 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066821995 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102507395 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096509357 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104866815 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067084882 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06582679 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066188065 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074900659 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079023667 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112507088 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103562362 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0668204 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066062577 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105341693 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105663353 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066049278 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098806874 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094691827 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105009674 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065306268 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066635293 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065134878 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065678729 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072480602 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073612005 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066185967 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074340959 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082944222 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078245013 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064760479 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065180296 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065070654 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073880337 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074581687 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074955771 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073667493 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064218915 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065162407 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065810968 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066223952 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064460225 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073176299 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.074247583 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073625804 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065753025 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065932935 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065339973 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065732158 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074070101 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073288043 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.0756989 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074745974 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065499144 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06525279 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067274135 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075704529 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075647778 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075218869 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067177382 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075202444 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06548753 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076347814 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079467225 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066032924 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065989309 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06561072 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065927569 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06604977 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072958313 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073506642 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066762539 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065414225 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065299631 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075791699 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073648204 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066176573 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0729384 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065117598 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065402599 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066146253 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065871619 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072612968 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075318651 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066789252 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065395145 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065672072 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065789044 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065090954 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07322375 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075184622 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074558691 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074017553 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066237759 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07440848 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073841046 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066086324 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07390663 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06549432 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066230151 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065947035 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073624028 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072985875 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074673236 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065777543 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06505613 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073497123 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.21076403 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067319075 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.073734451 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07645762 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074822239 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065082514 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079709386 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065888076 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073800191 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064394558 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075165876 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065386664 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073817759 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066324496 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064486934 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065837527 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07383848 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066520876 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066319182 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066279381 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065701377 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074613226 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078073384 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066911651 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073770841 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073568 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06670657 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073919767 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066123888 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074385802 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06620009 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065851967 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064821611 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077072476 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065540534 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065032854 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065531606 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076810101 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065819421 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076083344 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073594976 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06446522 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079310666 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075976189 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073761281 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076163282 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066474976 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065590192 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065012757 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065738127 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072785779 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074122441 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066699461 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065515991 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07255995 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075455304 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065253462 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073291502 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07306024 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073576296 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065790429 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065154527 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076486536 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079841379 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073647509 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073206826 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074392394 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065680852 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072914199 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07377505 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065726632 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078938044 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066115825 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.07831942 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074223573 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07311111 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07427713 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075484888 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076297758 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076756891 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078317174 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06555708 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06533453 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074302596 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065707843 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065258211 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073367449 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066430906 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065997525 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079170103 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063926995 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074261251 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065164695 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075143496 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065075368 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06626711 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077965222 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06617019 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065756738 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073838196 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06584357 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073436468 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07722533 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072853403 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065393682 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066004993 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074764022 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074996299 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065565479 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065388906 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066228393 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072820281 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.072742326 seconds)
  done (took 17.804542341 seconds)
done (took 37.383372645 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205772651 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156061626 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.192043913 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114164718 seconds)
  done (took 2.205196405 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.093692042 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096033266 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077558349 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062194462 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.083147071 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062170466 seconds)
  done (took 1.959584292 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274086617 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196214521 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172435425 seconds)
  done (took 2.122769768 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211965405 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192753731 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.455556982 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286556359 seconds)
  done (took 2.721023018 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.130904871 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079688366 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062119494 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.07286359 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.111035452 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145022677 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.089591269 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.114710007 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073203794 seconds)
  done (took 2.41788033 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.133710889 seconds)
done (took 13.062680107 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.256110088 seconds)
    (2/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.120343809 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094178136 seconds)
    (4/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073751114 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065521016 seconds)
    (6/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.19967148 seconds)
    (7/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076605764 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.168528879 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191087074 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07227411 seconds)
    (11/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.20214906 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.210887777 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074032697 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076167902 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.452047841 seconds)
    (16/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.176859543 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173679766 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.114612377 seconds)
    (19/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.085529398 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09074448 seconds)
    (21/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.139289895 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072230366 seconds)
    (23/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.138061267 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071646085 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.149131902 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070095137 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.082822764 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122501163 seconds)
    (29/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.161087637 seconds)
    (30/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.17192103 seconds)
    (31/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.162778331 seconds)
    (32/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.241513411 seconds)
    (33/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.193434218 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134499547 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073819 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199518775 seconds)
    (37/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063866992 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.215912617 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115594166 seconds)
    (40/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069212762 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.078082277 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.193799686 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07078079 seconds)
    (44/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.162479801 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061877622 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070372746 seconds)
    (47/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074536091 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162631261 seconds)
    (49/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072239143 seconds)
    (50/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.07216112 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070289694 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071011392 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.082223836 seconds)
    (54/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.075027273 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 0.150065043 seconds)
    (56/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121657809 seconds)
    (57/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.061700986 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070958595 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087494398 seconds)
    (60/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073465451 seconds)
    (61/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.203223668 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.077829735 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077803298 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.13173941 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 0.063607976 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066722457 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073047838 seconds)
    (68/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.061536305 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061686055 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071506973 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181580463 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157736773 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062194761 seconds)
    (74/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.135700903 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.063641424 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.18643949 seconds)
    (77/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.137064446 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064915793 seconds)
    (79/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061352869 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070908181 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06591122 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069489477 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12306931 seconds)
    (84/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.226798329 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077310631 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072576999 seconds)
    (87/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.064113916 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184675993 seconds)
    (89/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.164131958 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.166618947 seconds)
    (91/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062123797 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133415578 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062714939 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066472533 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.080831251 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118049536 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072535174 seconds)
    (98/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072513994 seconds)
    (99/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062686016 seconds)
    (100/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064130799 seconds)
    (101/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.094196668 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063896273 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158550465 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063916439 seconds)
    (105/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.140963056 seconds)
    (106/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070570762 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.083406033 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088980419 seconds)
    (109/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.159596028 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069407488 seconds)
    (111/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102299311 seconds)
    (112/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071355069 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090000129 seconds)
    (114/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.063976509 seconds)
    (115/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073247306 seconds)
    (116/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.061726035 seconds)
    (117/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.063041439 seconds)
    (118/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.081278314 seconds)
    (119/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.063328938 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085960812 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.062299944 seconds)
    (122/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.063775802 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073998047 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072077226 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.065116141 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.165072822 seconds)
    (127/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.074957677 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06237734 seconds)
    (129/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06336409 seconds)
    (130/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.06201668 seconds)
    (131/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.154540272 seconds)
    (132/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.062322246 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064101675 seconds)
    (134/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.247518578 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120118598 seconds)
    (136/309) benchmarking ("sort", Int8, false)...
    done (took 0.172550011 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070010155 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.225096931 seconds)
    (139/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066321936 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07251503 seconds)
    (141/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068495601 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062793873 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073819723 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063210644 seconds)
    (145/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071686113 seconds)
    (146/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.134374859 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07339864 seconds)
    (148/309) benchmarking ("sort", Float64, false)...
    done (took 0.129327402 seconds)
    (149/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071841312 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070552796 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112558982 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062878299 seconds)
    (153/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087084532 seconds)
    (154/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061957933 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182221598 seconds)
    (156/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.062644995 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070591798 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.061452702 seconds)
    (159/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070317427 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086644861 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.203679644 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061672438 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090617453 seconds)
    (164/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069482599 seconds)
    (165/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.206378 seconds)
    (166/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.064072312 seconds)
    (167/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.061790918 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062499361 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.063178892 seconds)
    (170/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071198977 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.153776322 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06193751 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062802042 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140825494 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071145473 seconds)
    (176/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.061753332 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142637952 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062106479 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.204394355 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.075008667 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.062527174 seconds)
    (182/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063365954 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062315011 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074252958 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.0628986 seconds)
    (186/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.136183925 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073023341 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063415118 seconds)
    (189/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.069360098 seconds)
    (190/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.061433936 seconds)
    (191/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.164710893 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.069244226 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.167412839 seconds)
    (194/309) benchmarking ("sort", BigInt, false)...
    done (took 0.401326929 seconds)
    (195/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066835855 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088798846 seconds)
    (197/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.136174957 seconds)
    (198/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06419539 seconds)
    (199/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139313384 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.075108514 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.062418334 seconds)
    (202/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.069288266 seconds)
    (203/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063747072 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138715035 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.217309061 seconds)
    (206/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07570555 seconds)
    (207/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.063996152 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173516386 seconds)
    (209/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064654937 seconds)
    (210/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.20599153 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070066809 seconds)
    (212/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.063833197 seconds)
    (213/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073987422 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086029916 seconds)
    (215/309) benchmarking ("sort", Float32, false)...
    done (took 0.131453802 seconds)
    (216/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.06999148 seconds)
    (217/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064302205 seconds)
    (218/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06394589 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069852947 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.062058254 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062658342 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063901683 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.063225828 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073723611 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073837754 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062108931 seconds)
    (227/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06286032 seconds)
    (228/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.062658767 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136868514 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062471821 seconds)
    (231/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.136185105 seconds)
    (232/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.062294864 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085740576 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089772399 seconds)
    (235/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091285519 seconds)
    (236/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.064894521 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071311987 seconds)
    (238/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063975721 seconds)
    (239/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073699124 seconds)
    (240/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063870491 seconds)
    (241/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.066513658 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06285376 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.061849058 seconds)
    (244/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.061913063 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.135377359 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.062748672 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.061865579 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062415321 seconds)
    (249/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.063317117 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062366109 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143751928 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063914037 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062626059 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115969599 seconds)
    (255/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063985716 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088950571 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061544672 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075756943 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.064234517 seconds)
    (260/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067863709 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.061843278 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089341356 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084374479 seconds)
    (264/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088549941 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.061870671 seconds)
    (266/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065356578 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114907988 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.06345511 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.061893199 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062305193 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069329939 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127914611 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083521402 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.062854702 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065040392 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073493464 seconds)
    (277/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063294103 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.104662568 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122938443 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062630814 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116317433 seconds)
    (282/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.066766781 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064510952 seconds)
    (284/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.062827295 seconds)
    (285/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.135545098 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.062158607 seconds)
    (287/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.062430216 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.061356853 seconds)
    (289/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.142176481 seconds)
    (290/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076493623 seconds)
    (291/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.061881841 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.091447961 seconds)
    (293/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063098158 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07329005 seconds)
    (295/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.061945456 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06223526 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069578967 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061708222 seconds)
    (299/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065368105 seconds)
    (300/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070918063 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.129732287 seconds)
    (302/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.077719609 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.063769541 seconds)
    (304/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06356282 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06238558 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063425808 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160007919 seconds)
    (308/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.063789803 seconds)
    (309/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.062281461 seconds)
  done (took 31.921836713 seconds)
done (took 33.421070222 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083210344 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088901296 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071033938 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084368085 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078856246 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09405586 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071261729 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076249704 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078230427 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077749347 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076620833 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069422573 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072815297 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072246769 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069993768 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086478107 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076803629 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071233979 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071362765 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062556892 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071260011 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062636612 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062415795 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069211314 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074190949 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069834739 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072491452 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072299538 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062676044 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062901508 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067410119 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072114483 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06467261 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075934323 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072251735 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071558559 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073018313 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075434303 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062284347 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062662254 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072590284 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062853407 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071476048 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069272934 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068045635 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070071918 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071732828 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075889378 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086671647 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067465464 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073377552 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073848609 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075189651 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068572522 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068285806 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071110584 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068805698 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085915365 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071216855 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067220958 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072160195 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072306662 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069547672 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070605709 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071515587 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073079041 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076236032 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069440642 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072733791 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069568421 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062331036 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071011037 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067615149 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062416085 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073565236 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075385278 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061695812 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066732913 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07047155 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071207891 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062676955 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067617876 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062611177 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067370329 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06699796 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069276675 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068199 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069907409 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062602594 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071621356 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07031544 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070818549 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061796273 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076307463 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062504128 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069266318 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06288377 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062956368 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062418915 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06834287 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062082658 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067182703 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07143895 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061869864 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067248792 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076304419 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062383978 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070229859 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06231738 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062233153 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073956865 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073141224 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062841595 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066952879 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062642384 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068402712 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06227375 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062741613 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065268943 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062635628 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067321046 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062923193 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067108712 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.06794038 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075898088 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062472844 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067790949 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067095533 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062229655 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069494083 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063053332 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062994202 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062072757 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076455745 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067305107 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062553579 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.06851976 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066586919 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070865519 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061668631 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071001267 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068379219 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.207798833 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07003547 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06254688 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074696999 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067588821 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067635054 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062282064 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062326916 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061965911 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062511031 seconds)
done (took 12.31822322 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.062521047 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.105689735 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071578153 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.079770252 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.075292456 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06354285 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067887161 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082067053 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06653113 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083048616 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084725115 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083654934 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.091252535 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062416245 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063223855 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063683185 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.061624006 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069301808 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079566708 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084438124 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093360126 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063242286 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073137266 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.078317327 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074277278 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.08266245 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064284458 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064366443 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065347928 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079091571 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086134977 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06324606 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064129242 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078122593 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077783441 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072097307 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063709577 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068147136 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064223504 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063211727 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064545446 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078295895 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.067352588 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068898153 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063881341 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063943222 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064137291 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067872531 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.076628867 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067519876 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.071207407 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075841491 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065833984 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06323344 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061940915 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.067935338 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063510769 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064046774 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063333516 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063142256 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062781233 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065428023 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.06377063 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.06494656 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066562995 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067064204 seconds)
  done (took 6.217602782 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.078623984 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089049412 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.07960563 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080502495 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062694341 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063870133 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063336809 seconds)
  done (took 2.100971446 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062282155 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075067252 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078011495 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079951376 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.07301793 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081588757 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063724663 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093143233 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062642838 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075773286 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109725149 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08119895 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067090223 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075013979 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063861809 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071806859 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063737063 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071266668 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073009468 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080195388 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068020567 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09107843 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076683997 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064067196 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084560487 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069156205 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063118639 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063740282 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065325253 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064881746 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064640022 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102570569 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068657093 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077520779 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065181747 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063226636 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070123689 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06701027 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067202835 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070187644 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069553523 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064975242 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062576277 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064892079 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066629926 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067705555 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062725696 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065104719 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064633996 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076286089 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062440227 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068929195 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067232571 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06859484 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06940555 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068237793 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071871356 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06497679 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07578974 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.07151194 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064651642 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073217185 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072736712 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069739414 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07236344 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.067979409 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.06845653 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069735354 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064412676 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065441931 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065055105 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072427197 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063690521 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06584054 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067175603 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065288413 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.06805424 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080773207 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.079873405 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076138216 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065103125 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.0649554 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067733715 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080562162 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068989752 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064770866 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067155079 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064976516 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067680531 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065055894 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069595499 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064919394 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071997597 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.06628962 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067747636 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072825052 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063122447 seconds)
  done (took 8.395719518 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064107592 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.062657609 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065871189 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064573897 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064313784 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0649785 seconds)
  done (took 2.001694622 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085445563 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064068656 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077353501 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064657337 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.09922483 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072115923 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072382638 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073367712 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.076941069 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076775862 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072114501 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.075155117 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072323325 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066527282 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071901159 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065802145 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.07219029 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068199994 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076368529 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066777165 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078218574 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066411713 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066508765 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076547971 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067455153 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065702206 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064111081 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075843846 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075625666 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075645213 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06619273 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067313072 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071879382 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.073100545 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072143897 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071829884 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06450527 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070229912 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066703878 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067248437 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074358366 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066669115 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066799685 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.069913187 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073296553 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071440397 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070024492 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068207649 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072131075 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070190673 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070253834 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065692966 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067308483 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070127408 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071872437 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073135018 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.069894206 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072006946 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066063512 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072206996 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064719413 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067523991 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072697981 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067210626 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070141088 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070386342 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071817333 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066481707 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067001598 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064626295 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070411543 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064654444 seconds)
  done (took 6.672265704 seconds)
done (took 26.962107927 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.983134209 seconds)
  done (took 2.542686408 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.558688252 seconds)
  done (took 2.156899697 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.744905605 seconds)
  done (took 8.34108184 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.284874699 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.329781385 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.70577909 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.127524866 seconds)
  done (took 3.071717987 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708553496 seconds)
  done (took 2.316164831 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.226924189 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221581221 seconds)
  done (took 2.062520832 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.341498236 seconds)
  done (took 1.939297544 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.068278376 seconds)
  done (took 2.658807264 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.225477247 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155808218 seconds)
  done (took 1.984058761 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445561206 seconds)
  done (took 2.042875468 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.265025558 seconds)
  done (took 5.866879174 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230650735 seconds)
  done (took 1.871727524 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228559194 seconds)
  done (took 1.837523324 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.777669818 seconds)
  done (took 3.376550449 seconds)
done (took 43.676265121 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.076980391 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080137796 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081155629 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07901693 seconds)
  done (took 1.893705769 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069747538 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067543277 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071034774 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071035973 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.068836786 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070223542 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070045688 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06678029 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068557954 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067004804 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.065492149 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067022573 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070015369 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067030691 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069918793 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071010813 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.066967241 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066917157 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069860609 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.066807125 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069793256 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067296159 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065179382 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066646714 seconds)
  done (took 3.24135877 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.072589608 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069976913 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072141229 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067815907 seconds)
  done (took 1.891737189 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071652753 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083970738 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.084755059 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089824551 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073969 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073780986 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.081968137 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083100727 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063035661 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.085711432 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065021845 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063652256 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063349994 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084049108 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081701778 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060192436 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062482057 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074372732 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073412903 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.07571294 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065096931 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062664854 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073537005 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073269471 seconds)
  done (took 3.379228245 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074945874 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.0617945 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077793305 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089219311 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090990867 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062690941 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078693808 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091024181 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.137951995 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062625624 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068286341 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062922009 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103769255 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062737129 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07944639 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108625141 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111845423 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066995174 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096193385 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06242562 seconds)
  done (took 3.269095855 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072449374 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066406622 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067253183 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061911652 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073675724 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070050649 seconds)
  done (took 2.030402794 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.063286915 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064185827 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064323909 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063869861 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068965748 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063663361 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062302791 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064209979 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064246786 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063821995 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063424928 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062612117 seconds)
  done (took 2.38054131 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.156479821 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066874118 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067782185 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065916187 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068439642 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063223641 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078077744 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065601391 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08264623 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063177233 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063684461 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065866269 seconds)
  done (took 2.521123908 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096172473 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126203527 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093078972 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071104879 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168144143 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092049629 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089130409 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.121463679 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092312607 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067466228 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091742154 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133394552 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094000409 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097387943 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080169581 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123283262 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108090847 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086482719 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112057191 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08093476 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069181197 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13140397 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068510399 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09194055 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100738762 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097197946 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108651939 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131199789 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08235578 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.088172281 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08135644 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073009578 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105413681 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.082902062 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.096329958 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091910574 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097050733 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083578385 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.084866201 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119362037 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152378124 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099309711 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098704957 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133313135 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077002485 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.106855445 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079729103 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098225239 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103092703 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092313863 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074007217 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090716974 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105179771 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101083246 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080327717 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080277682 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116054758 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097531242 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095137481 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078670966 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105774821 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.085939702 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10670177 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265166687 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140570286 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100962386 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136025883 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123019585 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095608922 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.089079136 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090164361 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074456323 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108737818 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097514139 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135187368 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108506076 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098739655 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095881952 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080845911 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106869026 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112992545 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092893511 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092907121 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143908381 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107420478 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089748688 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092267594 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.139931382 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070052223 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146194061 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087931513 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119123756 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095828217 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136955107 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090099094 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.08208452 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103880458 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102628137 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088205029 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101760829 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083101857 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112142801 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091913244 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100140045 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080459113 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089342013 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085840879 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096757103 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074029509 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102763858 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114898419 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11314083 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073693366 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107642604 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085016634 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076277246 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09192245 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138229492 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082080802 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074365612 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150014465 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.09261345 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116181943 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108019589 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.081809686 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265230825 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136539362 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091726324 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089360457 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075701922 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152371028 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074988675 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117166146 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081254215 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102006628 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104411636 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13281981 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139175538 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094726927 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076729664 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090574531 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.106155892 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086224742 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084600932 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075299884 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107428418 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124438504 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.099049971 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079486323 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.091599202 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.067975681 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113509324 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07544001 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083196599 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094787946 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.086930206 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.088567661 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142118788 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083308016 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107263119 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096595932 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066331913 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090808032 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151114243 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081697809 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.109939744 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116301382 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082858802 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.066829885 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.095391709 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072077648 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108084935 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092288217 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106424764 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077065265 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10647674 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067680033 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07307908 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127728559 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101322603 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088650101 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132655183 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104570074 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088655203 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.104154159 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.09746238 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094804169 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10088083 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.258336025 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105931196 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.07328135 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128461125 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09146585 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076663043 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086101389 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077992448 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.076777349 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099298937 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114093423 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088176725 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099208316 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100809901 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08879325 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109090757 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088532407 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077965285 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13079148 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075083111 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073903918 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087441605 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.10521486 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088115586 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133282054 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.07860654 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135765557 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092205127 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080109587 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114247165 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06797981 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.06866503 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.080758574 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091032272 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115084424 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078232779 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076987793 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117967141 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131973926 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096874625 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102791428 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067260495 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090235901 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133531473 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.113438781 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080680763 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110148106 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083999429 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128930216 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095562001 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120277871 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105460953 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110207144 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.09085281 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080272107 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072709929 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08706245 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11026622 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08552398 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081066996 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066791019 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074144838 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091463005 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090471568 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112884986 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087040633 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134141366 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071405755 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100453566 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257633767 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107281675 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090026309 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095430568 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.091675284 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091273442 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091474481 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091335745 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072880363 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126535226 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102221666 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077981595 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088202345 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094410858 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105491044 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108710866 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109459512 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092497618 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106477327 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122240634 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098097785 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081371748 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083433843 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093790057 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.084008403 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080584913 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103875948 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112041659 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097556752 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107911656 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.094052487 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.091969404 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105977635 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0929562 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087648786 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.118094645 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152749016 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.101543062 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103374586 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084397469 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106195226 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104187018 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113045806 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.110519281 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108646714 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070035245 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074213575 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069553933 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106181865 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078552576 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117023883 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07578679 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106643356 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096404692 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079167332 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066073824 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10104807 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092324738 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081436949 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12326634 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.11389232 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072298272 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090206062 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106748021 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082631008 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124613779 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.102276577 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100280928 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070855574 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089443064 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0719714 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.26137532 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100789556 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077089792 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076246783 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.069846933 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107339542 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083139535 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108323363 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088867141 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101152631 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119162412 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132717184 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086376785 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096256868 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118150051 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112878804 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.08107626 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111537041 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134662487 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.119337469 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080611966 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.084949288 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105784791 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104365177 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101059607 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075513795 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078725849 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108618199 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11307463 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067097634 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08412837 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069462101 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.083905808 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111852496 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094652857 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08166467 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117241737 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074156709 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107406973 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095455895 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122682635 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12206129 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143964953 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096063549 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084605832 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076075007 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124044114 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070092819 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116647502 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112547979 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087641383 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.067945697 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083429267 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.09595777 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.626343229 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108645557 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075521654 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135389192 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085970215 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115006306 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084300868 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.118114078 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08962596 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100592692 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090165932 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282104049 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083146311 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110238587 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.174142066 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109860861 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106840339 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073323968 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087033787 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073401319 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.07846444 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.080642868 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085998304 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108788053 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084742315 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106190314 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078924389 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.105525716 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090517265 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088709853 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.09872934 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080451817 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138662303 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086819326 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122716302 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106401844 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077588379 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073687157 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086542066 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100884962 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081653885 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093196296 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077991399 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075553855 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150560517 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101939214 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08404295 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101767388 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.090929867 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086538284 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092012104 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116930667 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108316435 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072337052 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087286249 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102847056 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078509916 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074259373 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09651666 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.068782969 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088701235 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098611622 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096050327 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089629186 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102700154 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077472491 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086916244 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109858684 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084869982 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076188007 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075726263 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.075442623 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.075557888 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102802372 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108152 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113796288 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10930551 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090853314 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092962661 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.077334109 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.221234762 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233239174 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097447172 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.104647386 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074859757 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131283554 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088277808 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087244796 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095638905 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100597646 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15068919 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073661649 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110063199 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09329035 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109605596 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085867898 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106116577 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094764272 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092150289 seconds)
  done (took 50.210550043 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.088889866 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.143572754 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150418289 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077496871 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091254228 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.114703555 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204412709 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187578106 seconds)
  done (took 2.784800622 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.0629764 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.076802653 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101579307 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08022177 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064084427 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.064545944 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.203830226 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078946572 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06303647 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100972673 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.073777586 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.0652951 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.417302062 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063006124 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064126356 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.072956748 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064279029 seconds)
  done (took 3.42587303 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.358874015 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599775013 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.339539448 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072484516 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.941197111 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084509357 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.295511491 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131195077 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075269346 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.557850871 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36685174 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.1267847 seconds)
  done (took 18.671113157 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.070179019 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069582911 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.075434406 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.075631322 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070764135 seconds)
  done (took 2.074260083 seconds)
done (took 99.388400725 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.075926939 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.163519592 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065394784 seconds)
  done (took 1.97533867 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078359085 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.076920463 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.078701367 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.076352458 seconds)
  done (took 2.032588813 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.068809182 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072116648 seconds)
  done (took 1.858048949 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238672256 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160564985 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091233301 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078325782 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075063149 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077939523 seconds)
  done (took 1.959636332 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.06743884 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068007754 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069915033 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070219143 seconds)
  done (took 1.992528745 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.063592536 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.061460215 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065781881 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.068867981 seconds)
  done (took 1.978497341 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078519705 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079026845 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073560909 seconds)
  done (took 1.949499923 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.090735612 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091758941 seconds)
  done (took 1.899248387 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075143975 seconds)
  done (took 1.792154813 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084801617 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094471994 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.147691114 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.1091256 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146647255 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.131273293 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.073458685 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.074827738 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069195206 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.068310902 seconds)
  done (took 2.718395318 seconds)
done (took 22.436535536 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073621025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364330752 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357338729 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083919198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667493581 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354083476 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.957535577 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089056063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096861922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066004173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082100177 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64495392 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958292758 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322186375 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.94455015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318007527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646157412 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064818472 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.062490877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063573405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.948308478 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06261641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063541539 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063457585 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.643782791 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.399480595 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064175593 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.316968032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.062790129 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.065781816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35145003 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065061849 seconds)
  done (took 16.020627405 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.065939155 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115283635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.067882551 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.078753906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065484175 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064990403 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.066525315 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065576127 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106270732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066020455 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082977781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065232453 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069575854 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065823197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086618243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067116521 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067181955 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067200475 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066592382 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069103805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081880217 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064292865 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066745872 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066110966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06713093 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07990289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068134377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066109381 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06675589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069162283 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070313286 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06870119 seconds)
  done (took 4.035251102 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114615979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123539593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071349984 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104883659 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118446774 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067586927 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146508925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09011861 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110466713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065455195 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082982788 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065805535 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10130496 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068316068 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087466895 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066707345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068191235 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067364305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066943261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067566047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085222536 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066221135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06738484 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067214489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06728214 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081556112 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068104366 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066733348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06666646 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069160533 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070662424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068471622 seconds)
  done (took 4.337660359 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065125099 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.06878825 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077971005 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078195895 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064083706 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066619117 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067983365 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065138505 seconds)
  done (took 2.293537385 seconds)
done (took 28.421179885 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07296844 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065359544 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068255621 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084656909 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070621999 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.06827757 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062323631 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071144806 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068526868 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069199092 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069804734 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063819997 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067999357 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06231148 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069627172 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063855378 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.070842181 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068276559 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069397921 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070063485 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066758309 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069762146 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071990107 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069841786 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069236442 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069618978 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07318463 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069802716 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06484517 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067431801 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066414254 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075642677 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071106272 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071086817 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064261396 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064672292 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068282234 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066344279 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.070875965 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073878296 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066143104 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073666935 seconds)
  done (took 4.607170979 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080105271 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084014612 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.079914999 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078978855 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097058863 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079533032 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.083852581 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075703711 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074335812 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084068775 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070742491 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077447241 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075219011 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069610444 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074479955 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071702901 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076667059 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07174701 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075213394 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074869042 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084692383 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069885788 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.07697477 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076131216 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071343233 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077155243 seconds)
  done (took 3.759098172 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.0683857 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080988619 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089438254 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145694121 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109974435 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076796647 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077572077 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090960319 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094427246 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065111247 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068515607 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.089828157 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089242158 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071221714 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105307253 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081397438 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080163297 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067251068 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071881887 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094481676 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085165013 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082980653 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091198193 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080860887 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064181244 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067137565 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070651744 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.07810558 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071705171 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075988844 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069121374 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067904107 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065330902 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076362399 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068900914 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063562798 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088180636 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076143621 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077226049 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106877723 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073463822 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066083319 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091951584 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124641697 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064139369 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068327943 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067657221 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076447756 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065848614 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092516456 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078701363 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063908902 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065154745 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.0653414 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065679271 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079546604 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066179167 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06629816 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075100733 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070740782 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085775329 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069332173 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085466822 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064453981 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074641799 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065370317 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065722086 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063147313 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094933521 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070720075 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112391952 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065309448 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063458432 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075577621 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074464818 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070427538 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063776026 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081800644 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074599536 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067628433 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07551182 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067047407 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067323232 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094734788 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.064413357 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063730211 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062985478 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067726568 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067061198 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064855276 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078032758 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063819118 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067511698 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079030359 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064669848 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064777728 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.06795598 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066729169 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063517248 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077504401 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068214085 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065925614 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075914977 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065254991 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067411744 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077973205 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071694651 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063708026 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066804173 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068272562 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066379081 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068329627 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067427521 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066608716 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071600797 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071573976 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070002509 seconds)
  done (took 10.530868214 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.15567287 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.148795493 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066437957 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142374016 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072821469 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070192589 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14139614 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084596826 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065273636 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065593324 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06462414 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094215338 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090499858 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102647155 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.070472441 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065409767 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088050121 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.097370096 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145923107 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14137392 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088787372 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072536535 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067145935 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066643831 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066946825 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073814105 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082844753 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073789607 seconds)
  done (took 4.347563977 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.072748676 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.087843627 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069672378 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076165739 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084405405 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065681513 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066893337 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066929259 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079641937 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.073707659 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065427574 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069733729 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.06895001 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067917937 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.0659078 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071633666 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071744001 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064487476 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069353179 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070392094 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075175775 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090418942 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069569427 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064607598 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067317609 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064771203 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073542169 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077093321 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064950269 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.080254458 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062769129 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069399141 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078263078 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065805569 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064804289 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065447477 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065116036 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06488873 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065117027 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063677942 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063535296 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070053061 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063626283 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073280706 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078620874 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071904434 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067569428 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.06748235 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067842679 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06249023 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067429296 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067361969 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067424853 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072111333 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068902202 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068029835 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068203712 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091119634 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070960253 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064367953 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063985579 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063679848 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067648228 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074948822 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080612479 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067217954 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063684001 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065314253 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070476666 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078747824 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064678196 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069405869 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062762804 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065573057 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.0674116 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067485708 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065478403 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06342668 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064443781 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06493584 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06508397 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06478154 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064978975 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067083835 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063397395 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063652508 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.0654658 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066876936 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073911095 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064001947 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.068268901 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066186261 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063966094 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067067584 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070071744 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067514344 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078051841 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076034178 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065465908 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063680263 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078342162 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.067242315 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064439629 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071845048 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069020025 seconds)
  done (took 9.038220882 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.084660528 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.064879631 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.079272315 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.086167451 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073271453 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.068338102 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073958798 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.064366428 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079119074 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.062711565 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.071505107 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062095329 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.073987762 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074145721 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.064909634 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075103337 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067983993 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081782292 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079716833 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063924391 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073993299 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076789264 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.077280294 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079057898 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078555056 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079960309 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076811131 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067841399 seconds)
  done (took 3.855010329 seconds)
done (took 37.868620144 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.823159434 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.98320474 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.805525815 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.997632993 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.857749306 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.865775727 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.027073589 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.805534012 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.018794114 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.862189091 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.105394427 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.332067849 seconds)
done (took 66.285422137 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.883703369 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.968166528 seconds)
    (2/2) benchmarking "String"...
    done (took 2.070631275 seconds)
  done (took 5.784644552 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.067902534 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.649811792 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.072685606 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.806487507 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.814169746 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.255276722 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.599686178 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.260404128 seconds)
  done (took 31.204580397 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.96194066 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.040605422 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.512355987 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.523333929 seconds)
  done (took 15.828354653 seconds)
done (took 64.605761107 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.85505843 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.808423501 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.879940832 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.838745868 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.813881962 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.809131163 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.815941312 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.811570768 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.85710186 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.848926713 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.80848134 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.809559673 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.811341171 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.824699411 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.397764225 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.857038363 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.816547601 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.814211243 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.822470405 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.819214931 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.816555391 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.983119136 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.307685772 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.0090435 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.415586537 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.180114909 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.318755956 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.227929537 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.811608501 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.806498233 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.856558883 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.136493119 seconds)
  done (took 205.737093832 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.809682574 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.6518138 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.753623893 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.810809282 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.161246068 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.985128796 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.905682542 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.229308755 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.811641673 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.82003964 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.952755567 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.81089341 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.967372648 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.786759903 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.843916695 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.897761812 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.968391361 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.984160626 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.85218994 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.968894809 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.829019261 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.802353698 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.771795875 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.94505935 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.826580485 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.904786493 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.833580328 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.836397667 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.002278582 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.929073209 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.848132854 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.823130889 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.985437195 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.682245388 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.813728669 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.816787638 seconds)
  done (took 170.368349692 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.008180499 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.816440209 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.80911033 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.864396481 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.809220738 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.809015735 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.481506166 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.819837304 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.380788314 seconds)
    (9/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.936862428 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.815209125 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.8087101 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.809670514 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.809872447 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.823003776 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.886755458 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.813075604 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.825604392 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.813940681 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.835836935 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.815002047 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.81153985 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.809939103 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.811539741 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.810460597 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.810931437 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.80974298 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.433825853 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.052486301 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.812572582 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.811265366 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.889143713 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.822126952 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.866041136 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.818252623 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.903153 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.866158852 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.925430821 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.810835208 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.028882006 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.883693589 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.81136306 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.811472828 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.875880795 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.823885174 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.81409076 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.81422496 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.817762383 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.875882809 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.051177471 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.81467524 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.934352809 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.289387211 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.811445443 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.81211872 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.81379184 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.380404197 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.816020901 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.813179701 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.819168009 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.819957793 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.814109857 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.814254395 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.197462624 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.883048488 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.82818906 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.406500223 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.813581366 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.520416059 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.943869341 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.811711654 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.81351817 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.812725251 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.814358693 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.81379344 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.815465992 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.934025032 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.823781752 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.931368049 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.897128996 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.813470163 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.934488406 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.816809674 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.8237208 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.631364201 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.886652734 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.849936652 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.636675853 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.815110656 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.188135073 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.569081763 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.81422148 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.814343919 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.813745967 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.827544442 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.815041345 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.813936561 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.815417208 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.896280583 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.815285404 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.934482101 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.531986839 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.379901793 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.816129071 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.8152376 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.814985606 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.822016866 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.89623977 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.935214198 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.818110448 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.880644343 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.820935339 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.816351934 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.907029182 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.815286545 seconds)
  done (took 406.245622175 seconds)
done (took 786.166680137 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.425207466 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.394665388 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.48853486 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.414528891 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.384909203 seconds)
  done (took 13.861895584 seconds)
done (took 15.616434257 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.830157099 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.820922596 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.873554759 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.898838487 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.831570942 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.834165367 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.896151983 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.835529112 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.86593688 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.871282631 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.90033077 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.900200097 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.839366711 seconds)
  done (took 25.952971055 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.824854497 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.974888145 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.042149808 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.857742313 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.825121899 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.060534685 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.881363251 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.961983846 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.97781839 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.055317061 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.059073897 seconds)
  done (took 23.277015641 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.824450214 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.968576958 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.053695793 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.861010493 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.827087357 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.059944911 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.889804547 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.970436235 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.981549738 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.063169453 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.082831661 seconds)
  done (took 23.346237628 seconds)
done (took 74.330666723 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.820040002 seconds)
  done (took 3.575887592 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.846268618 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.984707294 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.821154735 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.81892656 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.821472132 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.820042351 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.819623958 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.820691694 seconds)
  done (took 16.509431177 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.819708195 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.820695449 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.820332765 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.820960654 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.820037525 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.820495653 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.820847503 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.819695353 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.819827537 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.820404639 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.821393272 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.820215124 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.820721824 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.820361365 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.820395802 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.819665682 seconds)
  done (took 30.883208006 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.822210573 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.82068744 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.820395321 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.821287979 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.821507559 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.821382608 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.822227878 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.821598099 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.82107582 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.821172249 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.821914299 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.821200329 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.821198079 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.821125286 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.822718894 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.823255829 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.822114107 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.822517308 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.827463121 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.822768327 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.821729599 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.823958363 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.822047128 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.821774768 seconds)
  done (took 45.487586331 seconds)
done (took 98.221894469 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.660540726 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.868329667 seconds)
  done (took 10.287357318 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.822434807 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.823370775 seconds)
  done (took 5.409213742 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.823998036 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.823171325 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.823764403 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.822873036 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.823093608 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.823578448 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.82440853 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.822909827 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.823494803 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.824385633 seconds)
  done (took 19.994600769 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.824900617 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.824385244 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.824715703 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.823716597 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.823500441 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.824251937 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.824766957 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.823930892 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.825240459 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.8257184 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.824442172 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.824651211 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.825198633 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.824320719 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.825047482 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.824926277 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.825545987 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.825248811 seconds)
  done (took 34.60481208 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.825867369 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.826258725 seconds)
  done (took 5.412466168 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.824626018 seconds)
    (2/7) benchmarking "second"...
    done (took 1.824725554 seconds)
    (3/7) benchmarking "month"...
    done (took 1.824515649 seconds)
    (4/7) benchmarking "year"...
    done (took 1.825919467 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.826308636 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.825242879 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.824004438 seconds)
  done (took 14.536073366 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.827047886 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.981651592 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.05466017 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.698843393 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.827153855 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.828995112 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.179983936 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.828956624 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.830019847 seconds)
  done (took 20.817486361 seconds)
done (took 112.821882028 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.679318312 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.825420382 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.08726583 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.939964113 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.845501849 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.118275373 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.857716185 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.097736677 seconds)
done (took 43.213281034 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.850281693 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.824531505 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.853671549 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.85436793 seconds)
  done (took 22.293673215 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.826338861 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.16672272 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.851164873 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.711684948 seconds)
  done (took 22.329037473 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.210354232 seconds)
    (2/2) benchmarking "read"...
    done (took 2.175325784 seconds)
  done (took 6.152523015 seconds)
done (took 59.390329324 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826521315 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.828009475 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.826722154 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.827290224 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.827100935 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.826990433 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.82586272 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.826756979 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.826568203 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.826115245 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.826349375 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827136318 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.827610977 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827478425 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826138399 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.827046114 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827274229 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.827674942 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.827904832 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.8268976 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82806564 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.826585351 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.827736145 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.82765886 seconds)
  done (took 45.612386324 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.826218632 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.827528585 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.82847745 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.827704112 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.829289145 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.827699387 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.827931672 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.827621369 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.829303307 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.827678124 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828157774 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.831340676 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.827902833 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.828744955 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828837169 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.828258715 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.827975367 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829955646 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828427431 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.828693503 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.828767102 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82903291 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.829482756 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828713383 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.829876998 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.828742271 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.829411172 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.830832585 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82955142 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.82809889 seconds)
  done (took 56.623883232 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.827282384 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.830288829 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.83015389 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.829624351 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.830286863 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.829532901 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.828826286 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.830480108 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.830255898 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.830294673 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.829490631 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.831589365 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.83119421 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.830961917 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.830813827 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.830689196 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.830203426 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.830619754 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.831180071 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.830313385 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.830701026 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.8305041 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.831460652 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.828766477 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.829145459 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.829213035 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.829931092 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.831335595 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.830765503 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.829935079 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.830875757 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.830123176 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.829867405 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.830574335 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.828780098 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.829764211 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.830776136 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.830396152 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.830715068 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.831140598 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.830599903 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.830187314 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.831223388 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.830893713 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.831122519 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.831160403 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.830783992 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.831272974 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.830932499 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.830983971 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.831557432 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.830627106 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.831380804 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.831312684 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.832429722 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.831367445 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.832103191 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.831284261 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.831694489 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.831480077 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.832756067 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.830569172 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.831484936 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.83219235 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.831081602 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.831576521 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.831256868 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.831767311 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.833576784 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.833047747 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.832420442 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.832475919 seconds)
  done (took 133.584758582 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.832243352 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.831224002 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.832374533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.832790606 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830588895 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.832171841 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.832003941 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832424407 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83197804 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.832297578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831992825 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.832619243 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831017065 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.83279847 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833214121 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.832125813 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.8327294 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.831916123 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.833298334 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.833245978 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.832729663 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.833312036 seconds)
  done (took 42.078492906 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832275742 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.833646654 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.833600163 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.833833133 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.83363904 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.832683462 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.832435551 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.834730281 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835530205 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.835152242 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834589197 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832520489 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834531734 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834269274 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83431203 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.834303495 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833722517 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.833794271 seconds)
  done (took 34.778237786 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.833410565 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.834602459 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.833367103 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.833412712 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.83454511 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.834556637 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833780016 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.83480008 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.833607256 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.834762018 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.834618931 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834537914 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.83516634 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835646931 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834212677 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.83361007 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.833897983 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833667654 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833717644 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834011148 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.835209166 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836088242 seconds)
  done (took 42.124546535 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834830621 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.835779761 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.835454166 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.834301054 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.835583041 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.836207601 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.835623688 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.834368382 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.834332108 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.835676142 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836076995 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.835318886 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.835915771 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.835226742 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.83510999 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835879307 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836901433 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835514783 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838560572 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.83638412 seconds)
  done (took 38.483724691 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.835473369 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835297079 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.836779439 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838482917 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836678679 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.836885474 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836133283 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.836854624 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.835690267 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.83643184 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.837457065 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.836349036 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837679699 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.835768378 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837560255 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836050069 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837409359 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836400199 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.836275307 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83850354 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.836128796 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.838687656 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.837970033 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.837108667 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.836272439 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.837183988 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836835589 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.837312495 seconds)
  done (took 53.205851887 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837139822 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.837651317 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.835825594 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.838916616 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.837693886 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.837546508 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.837494959 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.838338023 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.837847739 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.839016835 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.837892117 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.83738497 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.839231125 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.837244977 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.839647677 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.839425294 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837854104 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.839218169 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838742256 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839329103 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.838894222 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838151575 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.838673828 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.839680691 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838752905 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.83925232 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840279525 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839430246 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.839104585 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.838423609 seconds)
  done (took 56.927588977 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.859418538 seconds)
    (2/2) benchmarking "in"...
    done (took 1.859153064 seconds)
  done (took 5.491773135 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.838717205 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83800952 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.83984877 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.839228436 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.839372538 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.838673642 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.840452985 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.840701069 seconds)
  done (took 16.489740152 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.839302987 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.843149259 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.839832666 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.838684552 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.840808941 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.847871544 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.842230717 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.841549039 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.841250674 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.84134974 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.844099265 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.843186549 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.848470862 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.844544822 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.839871794 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.842177918 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841452152 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.843123237 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.841352067 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.841683478 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.844379695 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842219767 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.8407124 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.842088449 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.842462705 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.842357081 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.850483958 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.842097124 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.842998183 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.841360811 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.850398057 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.843074572 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.843325675 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.842799635 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.842314116 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.841613509 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.849058321 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.842792395 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.842097195 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.84245887 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.844363419 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.844915144 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.84463361 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.849186591 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.844450167 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.842716068 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.842005024 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.843073617 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.841816847 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.84543317 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.849992292 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.842537261 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.84320129 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.843529363 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.844990468 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.843284708 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.846020001 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.844952467 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.850232577 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.84988333 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.847270788 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.86456925 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.853068764 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.845147197 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.844989964 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.853474807 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.86482377 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.846179049 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.84508786 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.844670677 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.851416558 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.843674445 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.843641614 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.844571746 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.856180549 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.852758637 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.844590094 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.845231485 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.844821889 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.845056334 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.84678897 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.845161629 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846266098 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.84517214 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.854690971 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.86819242 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.845246899 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.846327484 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.846569033 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.846323566 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.84996335 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.848875149 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.845756688 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.845778977 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.847853436 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.846973696 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.844652833 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.846063862 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.845681 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.854533647 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.846368629 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.84746795 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.849742085 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.851586137 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.845979199 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.846576793 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.846874974 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.845391008 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.852833962 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.847605696 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.84730474 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.846415206 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.84959227 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.8501058 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.847193945 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.850639237 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.853774712 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.856047849 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.849128447 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.849750997 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.850739465 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.848954398 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.855622992 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.870368157 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.846371941 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.851011798 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.853506708 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.858440942 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.852610356 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.847314971 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.849908489 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.847725149 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.847790911 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.850618284 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.848319388 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.847559562 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.848290965 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.849022167 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.84786952 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.848708293 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.849201745 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.848970117 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.850705664 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.84855995 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.853666012 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.848910623 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.851236694 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.854833214 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.850071373 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.849149674 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.849764918 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.85044481 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.849542679 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.849372098 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.848596186 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.848887586 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.847787415 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.8485194 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.850876288 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.84936546 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.848088999 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.850025548 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.85229042 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.850232454 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.849493984 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.849386998 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849599368 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.849915236 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.851432624 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.850388225 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.852970085 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.849399284 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.852328269 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.8507768 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.84994647 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.85164926 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.850899584 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.851240308 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.852624433 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.861049592 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.853663398 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.85954549 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.849537871 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.856702645 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.849882944 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.852411255 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.850828317 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.851184516 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.849752429 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.849383662 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.851537164 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.855119728 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.868392415 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.859997399 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.852040562 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.85180621 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.85538914 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.854453641 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.856588937 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.852786445 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.852254719 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.853995948 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.851121922 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.852636362 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.8517339 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.854497731 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.850811961 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.852189565 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.855298932 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.852234333 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.851903067 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.851566247 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.850252488 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.854420155 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.850527094 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.850285716 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.85438657 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.851910115 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.859894797 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.854446614 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.852962032 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.852278997 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.855277335 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.852618861 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.85180228 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.854022252 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.858146303 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.851846177 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.854170655 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.861401888 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.85248523 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.852920844 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.853539449 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.852881003 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.854880991 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.852485756 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.858578181 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.861021713 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.856495671 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.852761587 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.858782497 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.854424266 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.856587104 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.85447104 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.854791862 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.853712813 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.855013652 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.85576872 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.855141392 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.861371229 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.854123398 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.855791603 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.854475558 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.856283433 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.855595973 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.85624817 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.856668779 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.858508295 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.864104676 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.860486962 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.856242751 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.858155004 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.857323178 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.856177623 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.858479585 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.855695714 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.868109366 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.86391479 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.8564303 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.855818367 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.854549289 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.857084702 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.85654743 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.855018472 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.863201018 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.856974319 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.856230824 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.859404122 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.855629957 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.855924305 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.862057973 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.857394135 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.859953007 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.857280513 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.856502639 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.855822305 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.855643699 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.857983002 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.857342199 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.85762782 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.860172219 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.856832573 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.856227966 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.856108262 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.865962519 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.857584488 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.858388667 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.864710714 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.858587341 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.856125176 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.858416574 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.856618487 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.858497269 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.857466313 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.857206292 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.858852094 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.859001431 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.860611373 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.866117774 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.860264637 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.864142714 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.861701217 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.866957681 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.858241635 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.858449306 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.858578092 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.861230687 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.865716641 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.858245468 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.8577793 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.865943029 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.859091085 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.859202402 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.862580209 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.858397398 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.857670829 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.857975921 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.858497735 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.864400343 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.862577855 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.858504709 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.858975018 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.859133375 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.859076857 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.861725003 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.860904299 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.859240632 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.859153541 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.860077745 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.860673152 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.858470621 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.857820557 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.8594286 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.859690603 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.858757333 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.867818048 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.860548252 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.861082005 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.863317031 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.859223219 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.868666379 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.860854655 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.8611043 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.861160863 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.859748177 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.861967748 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.861341614 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.860333592 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.86057089 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.859776894 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.862693876 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.872318873 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.868172412 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.863910389 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.862490577 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.860609676 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.860785656 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.869619776 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.881895897 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.860893085 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.863365137 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.865074457 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.869522742 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.864128568 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.867094583 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.865715535 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.868603911 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.863427956 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.859887051 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.863851038 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.873572522 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.862340838 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.86132087 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.862067846 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.865943232 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.863154327 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.862298411 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.862783021 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.862945567 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.863769409 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.872449753 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.862661943 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.863431744 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.862665887 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.86234058 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.862709333 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.861663128 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.864792867 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.863867224 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.863564195 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.863940504 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.864709359 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.867488542 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.861796155 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.866651604 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.871261565 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.862978069 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.862913057 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.863304954 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.862503172 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.865612459 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.862328365 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.862533921 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.865146804 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.862621765 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.864750176 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.865701209 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.871563613 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.865164443 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.86282059 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.863026952 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.867321676 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.863202739 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.862686322 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.865114829 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.870687264 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.86741616 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.875263024 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.871029268 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.864452645 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.865453269 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.871271106 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.870602421 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.865717796 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.863848307 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.864929352 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.866683551 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.866243822 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.864804367 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.865059637 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.866516121 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.869118337 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.865404915 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.865153957 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.865484883 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.865283388 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.867299606 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.866600525 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.869326422 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.865670717 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.864767694 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.863245078 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.865572955 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.867849431 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.868207779 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.86584899 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.865889993 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.866486687 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.868288833 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.869877865 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.865618369 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.865326751 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.86716062 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.867059478 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.865573998 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.866047276 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.866879853 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.865914611 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.869973868 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.875009448 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.86702305 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.868801796 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.868953639 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.870127505 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.866692843 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.86613324 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.865782625 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.866161251 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.875437974 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.866855771 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.866257504 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.866531887 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.867066081 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.871378283 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.867698757 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.870893776 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.866239499 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.867187499 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.867482945 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.870107482 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.876496147 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.870836443 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.870456065 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.875119958 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.872018579 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.869004461 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.866619139 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.866744828 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.868462083 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.868669995 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.871126493 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.868478778 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.870501279 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.868466417 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.868090973 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.867079133 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.871533377 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.868323152 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.867872686 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.87156874 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.876179019 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.877304616 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.86958229 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.869544252 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.868883976 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.87306535 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.877393007 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.868750144 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.869139463 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.867037587 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.869233542 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.86949493 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.876277322 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.876261784 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.872830131 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.869835095 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.874509056 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.886950833 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.872027723 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.878988008 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.898615839 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.870557354 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.869597794 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.870938164 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.872069154 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.869408063 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.872084722 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.869617411 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.878898441 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.870057576 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.870267951 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.876657182 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.871065362 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.869111295 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.869303259 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.871863675 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.87449866 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.870666858 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.877645009 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.870579699 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.868954135 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.870589294 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.871107 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.870532705 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.870211319 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.871837647 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.874081394 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.869871242 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.871007553 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.879012813 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.871745396 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.872681645 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.882809673 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.8815575 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.871344924 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.87174262 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.871635175 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.876360092 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.874709903 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.870047154 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.875461816 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.878164306 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.874524436 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.879228905 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.87302143 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.872591604 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872206152 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.87129496 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.871597072 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.883032093 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.882971087 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.874074681 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.873916039 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.878436228 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.873187382 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.880567125 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.879593257 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.872987465 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.874726698 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.872115053 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.873114658 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.873261294 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.873415163 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.875442162 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.879294054 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.873338988 seconds)
  done (took 1109.845661295 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.873147843 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.873530661 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.873656302 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.873487889 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.873554787 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.874512816 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.873700716 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.874091964 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.874014697 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.872543262 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.873093186 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.87360806 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.872514442 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.874030765 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.873697442 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.874782581 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.872857271 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.873259159 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.874552367 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.874232868 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.873812055 seconds)
  done (took 41.154198431 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.873306759 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.875646099 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.874173259 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.87467344 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.87387987 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.874036584 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.873839212 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.876055757 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.873909642 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.875204775 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.874423638 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.873437622 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.875110623 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.873404903 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875633557 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.876360711 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.874764137 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.87296522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.874336432 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.875155872 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87430581 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.874454062 seconds)
  done (took 43.046759352 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.875640391 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.875509607 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.876198601 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.875627297 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.875101171 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.875547448 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.875005232 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.877996728 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.875971223 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.876892765 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.8830322 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.882511191 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.876029753 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.877841771 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.876957963 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.877261669 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.02375173 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.876472248 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.877471817 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.875529311 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.876379115 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.882062103 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.87796703 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.877231982 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.876960566 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.876726377 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.877103178 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.876470872 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.877489863 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.878861638 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.879883853 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.877203214 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.878252194 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.881586291 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.878715941 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.878048696 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.881499952 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.878129457 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.878564647 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.878023151 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.887677769 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.900172393 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.877154222 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.877197699 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.884232099 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.878296816 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.877944954 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.881425092 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.885330535 seconds)
  done (took 94.012768793 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.877734603 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.878645734 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.877406422 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.88000846 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.878778258 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.877688005 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.877406016 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.87859063 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.877801156 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.87875137 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.876349323 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.878890698 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.87959965 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.877886178 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.878646183 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.877248207 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.879333186 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.877713572 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.878788269 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.879040719 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.878920245 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.877882791 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.878638682 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.877518414 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.879237077 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.879565161 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.879175802 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.879982184 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.878148792 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.880069004 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.878971051 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.878718838 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.879950151 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.879804057 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.880292871 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.880936208 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.880662285 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.880228227 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.881301804 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.880682941 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.881572774 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.879592375 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.879117707 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.88000742 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.880808957 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.879768853 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.879845612 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.880010627 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.879539081 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.880147575 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.880675745 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.880019619 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.880536021 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.880059871 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.881954429 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.879901104 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.881043897 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.880529905 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.881910458 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.881581419 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.88089753 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.879647907 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.880942967 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.880814604 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.881272109 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.881169791 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.881002763 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.879991682 seconds)
  done (took 129.62522225 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.882646155 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.882230818 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.881304447 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882482791 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.882039611 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.88129205 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.880922042 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.883514149 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.882068191 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.882591229 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.881249332 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.882256332 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.882114789 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.882384087 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.882414112 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.883069919 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.88291375 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.883960282 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.882450619 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.883890197 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.883375266 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.883682677 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.88293078 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.883001152 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.882659522 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.882914288 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.883157609 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.883507515 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.882661223 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.883019329 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.884243948 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.885233303 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.884176324 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.882770107 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.882727433 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.88402895 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.882985491 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.88269333 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.884256444 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.884020647 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.883508797 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.883553831 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.883485907 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.883266936 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.884597893 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.88287058 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.882658804 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.884693744 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.884875737 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.884484547 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.88422692 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.883815466 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.884313161 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.883050469 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.884205193 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.883560392 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.884706918 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.886072748 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.883763934 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.885978559 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.883973746 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.884611399 seconds)
  done (took 118.582513144 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.884335383 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.884419218 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.884895339 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.884398418 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.884324894 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.884960287 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.884725438 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.884722313 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.88543351 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.886608899 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.886470801 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.884963979 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886187959 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886431093 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.886575862 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886359247 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.885507111 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.885894543 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.885471809 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.885385412 seconds)
  done (took 39.526313178 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.885079757 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.88476403 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.885990866 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.885199653 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.886951271 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.885970007 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.885944989 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.885525728 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886978915 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.885274372 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.886483127 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.886237255 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886834256 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.886587673 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.88539386 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.885707184 seconds)
  done (took 31.995011278 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.886677392 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.887169667 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.887518359 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.887268765 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.887021177 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.886976529 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.887153834 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.885630872 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.88693726 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.887097395 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.886306871 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.88688867 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.886712505 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.88686681 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.885865615 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.887526833 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.886538024 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.887587674 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.888075702 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.888529112 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.887267848 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.887630026 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.886512252 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.888932763 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.88852509 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.88892043 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.888416488 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.889228241 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.886267007 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.889240277 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.887934558 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.888353431 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.889762777 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.88796775 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.888212311 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.888089188 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.890793798 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.890203365 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.88890168 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.888316031 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.888353141 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.888598524 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.889816951 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.889407457 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.889718539 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.88819509 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.889307803 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.888977568 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.890434164 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.887506875 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.88877027 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.889639093 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.889129512 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.888846975 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.889459274 seconds)
  done (took 105.668423698 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.889020659 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.888828278 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.888973755 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.889699568 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.889460071 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.889309697 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.889415769 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.889423858 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.88840617 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.890476355 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.890233274 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.889256203 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.888547352 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.889005456 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.889759633 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.890712123 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.890964148 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.889006533 seconds)
  done (took 35.833692299 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.890127829 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.890901677 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.889179339 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.890754349 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.888355331 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.891525728 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.889443499 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.890155984 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.890243872 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.890795111 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.891438944 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.890368194 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890139048 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.891239043 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.890605339 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.89039422 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.890430089 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.89149198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.891031532 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.891032063 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.891968907 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.891322073 seconds)
  done (took 43.416099989 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.891568858 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.891832462 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.904744181 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.913906762 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.910784607 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.925554286 seconds)
  done (took 13.262354984 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890490837 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892151064 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.891591883 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893294933 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891929695 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893592277 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891611934 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892266973 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892182667 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89265617 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892184179 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891148416 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891751227 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891778364 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89110955 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892425635 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892881333 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892777115 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891531572 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893496376 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892283025 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891838978 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891760269 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891385993 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893350292 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893992739 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891775385 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892864873 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893208946 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892570136 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893653297 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893743531 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894177916 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892821235 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893261041 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893724076 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893756657 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892543108 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894811745 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892290331 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.894207963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893786116 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892876686 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893162701 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893599643 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893863318 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895036661 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894174442 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893394567 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894718744 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894313876 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895519007 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894302165 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89529277 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894363823 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893559609 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896645502 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895478237 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894451266 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895143577 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894439546 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893955825 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895018389 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894674226 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894638495 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894619997 seconds)
  done (took 126.783738057 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895221091 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.895444428 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895642248 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89535647 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895055713 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897215565 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895354647 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894774421 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894951172 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894958402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895529276 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89701092 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894832404 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896392311 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895644197 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89686799 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896356041 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896546753 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895992984 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897967088 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896973786 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896682726 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896453264 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897365774 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897350505 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89570591 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896193449 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896639644 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895924547 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896217598 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895312814 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897325903 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895952285 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.89550967 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896712802 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896934599 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895350908 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896499977 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896715541 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89650831 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896358416 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896616619 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897627579 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896308185 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897255706 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897626874 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895615812 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897091895 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896340211 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897975829 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896958256 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898567671 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89653621 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898341612 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897701562 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898140436 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898727035 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897435602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897945891 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898134824 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899570272 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897028647 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898410151 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899279043 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898438682 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898685641 seconds)
  done (took 127.015983927 seconds)
done (took 2586.938953809 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.916609089 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.95512491 seconds)
  done (took 15.703259399 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.066774105 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.01823857 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.904635689 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.933466334 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.904862899 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.926399468 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.925856192 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.905376629 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.904760638 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.904861593 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.904311582 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.08774754 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.903357108 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.905752584 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.904894325 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.996591611 seconds)
  done (took 52.935755314 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.910598995 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.910143747 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.91994327 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.909709882 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.909379254 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.922388447 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.939653116 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.912629371 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.946496167 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.923180512 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.979530354 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.920589088 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.909070042 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.959951017 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.923800292 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.927461396 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.007400712 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.987459895 seconds)
  done (took 36.656038183 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.990563189 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.913430592 seconds)
  done (took 10.748106897 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.931188835 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.905486264 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.939150759 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.916375902 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.927844381 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.937526659 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.926104808 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.913877368 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.927191841 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.908695228 seconds)
  done (took 71.075324791 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.911540432 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.909231286 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.910564935 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.905053862 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.904743444 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.910363931 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.90693728 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.903140078 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.588821358 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.944356395 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.917296183 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.915135212 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.906618367 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.90853269 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.905189557 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.933923517 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.047806096 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.903128938 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.902687257 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.912844629 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.905912188 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.963662503 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.919125463 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.906731038 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.937490733 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.589162115 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.91786817 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.912788258 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.016445501 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.903833755 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.906922298 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.11782037 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.912481257 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.367639247 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.183069737 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.91461457 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.918770781 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.914690467 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.90352876 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.022466049 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.907295088 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.913781036 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.855119776 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.155498758 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.001493623 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.953055621 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.250667439 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.911215448 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.907173062 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.94230282 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.911868157 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.908361281 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.923732464 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.425418935 seconds)
  done (took 134.990138848 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.905361358 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.251903749 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.070678765 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.905032399 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.188370044 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110033683 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.909004886 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.951606804 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.909418771 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.130853935 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.16250201 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.011305464 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.908202115 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.905354015 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.904805564 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.903995562 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063127505 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.977006753 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.909393879 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.905921464 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931060957 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.145468391 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.025050418 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.907751971 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.932603905 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.116080926 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.026202256 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.00981529 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.699043114 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.903170036 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.967221052 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.909024166 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.906917392 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.904506349 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.058883214 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.997604083 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.986170427 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.910371313 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.906521474 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.90565472 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.563395072 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.106687232 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.999987812 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.035247622 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.157951215 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.109010852 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.681948853 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.90763524 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.638842011 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.066485199 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.135135856 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.137104448 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.027850696 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.909799428 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.171873589 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.905618081 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.905935757 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.154908767 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.125834832 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.005616382 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.908052782 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.907612642 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.907560963 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.14361862 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.909596933 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.000216908 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.909326644 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.908315112 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.001119968 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.004233558 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.136557671 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.116846652 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.936015526 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.24335589 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.408101114 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.149754261 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.968670431 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.153068857 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.906547869 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.904528886 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.981632821 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.741769637 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.157463673 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.146397687 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.148298274 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.938335697 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.620223641 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.904541031 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.129326039 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.124946132 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.164153244 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150483918 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.142704483 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.237773113 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.904296846 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.904890028 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.13142991 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.028818688 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.909987286 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.25190752 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13585841 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.470500275 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.930623724 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.21006876 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037041027 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.910696157 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.534634443 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.906188682 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.134879772 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.945088116 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.909083822 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.908878413 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.125366454 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.891444319 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.906984244 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.78210907 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.96568354 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.912809219 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13798957 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.908374076 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.175797442 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.912082192 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.137199989 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.088430071 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.937141942 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.08039347 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.15320704 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.914314339 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.150156228 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.148847032 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.022771815 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.17925492 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.794037686 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.907527316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.195608186 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.912235366 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.907364705 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.077834632 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.910906971 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.048813645 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.914788381 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.198774012 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.930412139 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.137675509 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.915175897 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.159956743 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.940581117 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.959678482 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.911638484 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033487546 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.914247548 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.737819848 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.064769045 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.916892623 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.911872273 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.465128186 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.912006971 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.065339566 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.13764624 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.934849213 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.983314204 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.567548847 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.910934331 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.993991412 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.93514757 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.360545475 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.912974159 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.164569106 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.917001863 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.910526029 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.910374463 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.144408235 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.147149746 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.91633137 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.915976762 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.815853131 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.912495111 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.912688141 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.092824061 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.231178868 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.913181188 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112413415 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.914729795 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039454147 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.916668412 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.981676306 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.242016599 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.910921291 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.912709926 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.9102378 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.915293797 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.913510308 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.121705633 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.938670359 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.453301308 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.047619394 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.184940309 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.220314593 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.149621122 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.954810053 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.915781032 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.164274756 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.916600221 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.973378225 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.912557345 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.929727581 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14232523 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.917612993 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.171553375 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.183148308 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.784877947 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.95951192 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.918001887 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.913856725 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.912892136 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.055679121 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.003248535 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.918563848 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.915051113 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.029135428 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.033158471 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.124607204 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.918470674 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.03529483 seconds)
  done (took 912.612188082 seconds)
done (took 1236.55508591 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.91785966 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.916262319 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.921613095 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.921820215 seconds)
  done (took 29.526832006 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.918737248 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.916924971 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.918390059 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.915326349 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.916823058 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.916479712 seconds)
  done (took 13.351440898 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.050174574 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.915320931 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.92007227 seconds)
  done (took 21.734674753 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.994203634 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.325831076 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.061251726 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.356287597 seconds)
  done (took 10.588108523 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.916929111 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.917979708 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.917209294 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.918129673 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.92006031 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.920811341 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.920264257 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.920655436 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.921106677 seconds)
  done (took 19.122551629 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.678612 seconds)
done (took 100.85325565 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.215580014 seconds)
    (2/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.003607767 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.025976233 seconds)
    (4/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.935891776 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.008659184 seconds)
    (6/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.989262958 seconds)
    (7/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.071726726 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.168425646 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.917876063 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.940386841 seconds)
    (11/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.914525635 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.387951526 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.936264172 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.915913163 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.215296977 seconds)
    (16/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.012716952 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.917107213 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.796614503 seconds)
    (19/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.614950465 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.043223147 seconds)
    (21/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.826821934 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.081603211 seconds)
    (23/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.0143318 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.940945148 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.040065352 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.175254864 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.920492779 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.050734995 seconds)
    (29/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.774644821 seconds)
    (30/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.059388261 seconds)
    (31/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.180195631 seconds)
    (32/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.234457654 seconds)
    (33/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.671070924 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.942199138 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.002427161 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.917962542 seconds)
    (37/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.856444116 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.220747835 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.372589107 seconds)
    (40/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.029749002 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.224842203 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.241090012 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.094544373 seconds)
    (44/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.062485072 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.033970525 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.930213901 seconds)
    (47/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.23056095 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.095869066 seconds)
    (49/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.447844922 seconds)
    (50/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.102131063 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.011991857 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.474303434 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.404083465 seconds)
    (54/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.339225726 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 2.133639361 seconds)
    (56/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.922761874 seconds)
    (57/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.015178761 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.944449159 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.686060984 seconds)
    (60/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.084223818 seconds)
    (61/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.326596237 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.316090505 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.157784242 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.047886726 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 5.639105291 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.98124779 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.169154688 seconds)
    (68/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.014996892 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.074592929 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.942198941 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.29818693 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.000487249 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.16527633 seconds)
    (74/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.101831802 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.332406341 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.922387903 seconds)
    (77/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.036473715 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.922717519 seconds)
    (79/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.01296558 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.496271349 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.092028265 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.941706113 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.023384227 seconds)
    (84/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.047684432 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.93749724 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.079468138 seconds)
    (87/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.612467136 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.216931979 seconds)
    (89/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.384028519 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.130943381 seconds)
    (91/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.217675727 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.929710402 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.31179004 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.984753036 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.922993724 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.711696618 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.931910415 seconds)
    (98/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.048734112 seconds)
    (99/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.06213556 seconds)
    (100/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.185004592 seconds)
    (101/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.962749201 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.921815304 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.187024144 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.924788954 seconds)
    (105/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.879395299 seconds)
    (106/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.026912676 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.211104149 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.834455374 seconds)
    (109/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.09432934 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.941669937 seconds)
    (111/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.410955068 seconds)
    (112/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.082493578 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.586778162 seconds)
    (114/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.017670507 seconds)
    (115/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.925925196 seconds)
    (116/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.000705235 seconds)
    (117/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.549666086 seconds)
    (118/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.807052027 seconds)
    (119/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.059947655 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.800632284 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.253756381 seconds)
    (122/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.831305113 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.228334438 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.945081384 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.858749244 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.15545732 seconds)
    (127/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.060414115 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.166640011 seconds)
    (129/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.209909794 seconds)
    (130/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.671364783 seconds)
    (131/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.181152623 seconds)
    (132/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.101608583 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.924288932 seconds)
    (134/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 4.375047532 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.030633791 seconds)
    (136/309) benchmarking ("sort", Int8, false)...
    done (took 4.801151779 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.110818062 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.925551266 seconds)
    (139/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.986298265 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.952251203 seconds)
    (141/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.938037915 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.240656568 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.212661715 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.249478686 seconds)
    (145/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.945474621 seconds)
    (146/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.403808431 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.215690127 seconds)
    (148/309) benchmarking ("sort", Float64, false)...
    done (took 5.699793154 seconds)
    (149/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.929106922 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.94434425 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.052312509 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.227533935 seconds)
    (153/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.940645761 seconds)
    (154/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.103338486 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.116783178 seconds)
    (156/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.617707136 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.22492399 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.013907726 seconds)
    (159/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.942784296 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.29185987 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.259205869 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.944588789 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.530787876 seconds)
    (164/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.933792783 seconds)
    (165/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.226431003 seconds)
    (166/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.926919682 seconds)
    (167/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.180484253 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.270770955 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.687017703 seconds)
    (170/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.039845475 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.022043498 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.334742433 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.922913635 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.944248043 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.952666657 seconds)
    (176/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.134641859 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.926426735 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.318047586 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.984136053 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.4857425 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.166432388 seconds)
    (182/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.25497422 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.929536871 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.630967314 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.219727263 seconds)
    (186/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.320390879 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.932580097 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.953611034 seconds)
    (189/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.338871105 seconds)
    (190/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.834456705 seconds)
    (191/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.931568354 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.940236818 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.926662062 seconds)
    (194/309) benchmarking ("sort", BigInt, false)...
    done (took 6.929453368 seconds)
    (195/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.031298693 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.820515566 seconds)
    (197/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.01518665 seconds)
    (198/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.218994139 seconds)
    (199/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.338054482 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.720836423 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.262851997 seconds)
    (202/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.93800845 seconds)
    (203/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.073041124 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.93816211 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.989275018 seconds)
    (206/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.01915758 seconds)
    (207/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.390815588 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.929858039 seconds)
    (209/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.239404255 seconds)
    (210/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.417143904 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.995729148 seconds)
    (212/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.705314686 seconds)
    (213/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.929932518 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.117579486 seconds)
    (215/309) benchmarking ("sort", Float32, false)...
    done (took 5.626471242 seconds)
    (216/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.960244772 seconds)
    (217/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.197348958 seconds)
    (218/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.227719861 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.158207549 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.039847026 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.226902536 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.035412441 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.922371493 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.710788637 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.225606308 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.003924836 seconds)
    (227/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.634355926 seconds)
    (228/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.1519979 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.928955592 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.246689832 seconds)
    (231/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.217782861 seconds)
    (232/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.299431658 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.872472479 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.727750271 seconds)
    (235/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.964830169 seconds)
    (236/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.926819151 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.930928276 seconds)
    (238/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.188098608 seconds)
    (239/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.641165967 seconds)
    (240/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.193752371 seconds)
    (241/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.059246477 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.92860609 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.05332202 seconds)
    (244/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.319946643 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.061785832 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.929047103 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.092133704 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.286455535 seconds)
    (249/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.027073823 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.10757865 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.935558236 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.965270525 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.325883418 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.704231555 seconds)
    (255/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.385168296 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.544856941 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.072219801 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.41396955 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.350172439 seconds)
    (260/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.045285839 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.241312229 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.754065701 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.065953101 seconds)
    (264/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.948767957 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.038389458 seconds)
    (266/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.009443302 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.927606044 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.945231362 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.804050229 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.326951936 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.948378918 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.964889411 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.899347692 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.280598013 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.500698199 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.07806916 seconds)
    (277/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.170051233 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.055004045 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.030265962 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.930924343 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.830580713 seconds)
    (282/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.11627357 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.930306109 seconds)
    (284/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.945498781 seconds)
    (285/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.153582465 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.947804385 seconds)
    (287/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.098718116 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.007626201 seconds)
    (289/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.450297802 seconds)
    (290/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.743299387 seconds)
    (291/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.051126103 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.935750673 seconds)
    (293/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.413044721 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.777640063 seconds)
    (295/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.014695064 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.123297787 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.962592047 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.17968675 seconds)
    (299/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.928945754 seconds)
    (300/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 3.476912145 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.928619613 seconds)
    (302/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.769950324 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.247853452 seconds)
    (304/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.025162261 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.153583234 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.146981961 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.934105693 seconds)
    (308/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.135393672 seconds)
    (309/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.112364638 seconds)
  done (took 1031.598171808 seconds)
done (took 1033.521579901 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.960977035 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.949591539 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.930402602 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.951643139 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.044164787 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.973647649 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.94479718 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.933841192 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.980900699 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.98124776 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.929845224 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.972161936 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.932649031 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.933287342 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.931627454 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.949708324 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.239135168 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.959908168 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.950738404 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.943517751 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.949793628 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.929830237 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.983466613 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.972020568 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.936228384 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.936365819 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.935723479 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.952193027 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.045838442 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.934863505 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.937235301 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.946272358 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.238938262 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.956741422 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.92999133 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.951983904 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.944788925 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.944507555 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.935774257 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.965955702 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.382462403 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.937080601 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.935104659 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.933218727 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.933582725 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.938958334 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.932548558 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.943118988 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.949013722 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.949580061 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.375255829 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.956827251 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.936943402 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.931840073 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.946962487 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.935327538 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.938657048 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.951432856 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.952840984 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.951770392 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.230456901 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.96609252 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.937965826 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.952118466 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.944359488 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.411094593 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.937543969 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.940471789 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.38224291 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.947658288 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.411373843 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.950592652 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.937562913 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.950328407 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.967931408 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.240963151 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.960579391 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.93460381 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.944310161 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.934325846 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.94714155 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.950177917 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.940279234 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.935850841 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.956103922 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.979970615 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.948384922 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.935437544 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.945574225 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.955235529 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.946015689 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.948019032 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.939855837 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.934751456 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.947707061 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.939781387 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.939353976 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.938910792 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.941077056 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.949490702 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.38352486 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.959266845 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.934389983 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.934701767 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.936579882 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.951253817 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.384209271 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.942965114 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.958414723 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.987453694 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.938522002 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.232455071 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.966101756 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.954888246 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.948519791 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.938747686 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.93614361 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.230921156 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.407862294 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.957538263 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.935505588 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.935018396 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.955888023 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.939746123 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.936132473 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.244708386 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.966637955 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.954353339 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.060925862 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.951928805 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.972084817 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.937036411 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.941258364 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.984189436 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.957160757 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.971349231 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.94046919 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.956067257 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.956492841 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.935363025 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.950371601 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.951623618 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.93717767 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.94560252 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.936541925 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.985194574 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.955065127 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.956152775 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.959975537 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.061335504 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.936506238 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.234255228 seconds)
done (took 304.237862756 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.012313043 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.935394467 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.055328575 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.937937704 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.024492286 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.008757802 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.937184422 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.93690586 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.938291564 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.437963834 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.938064045 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.945847968 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.93692251 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.935807972 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.005565388 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.936698833 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.9379106 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.383270122 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.938751881 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.016904039 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.939546106 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.937234274 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.939026668 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.454995151 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.939668363 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.936804645 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.016241916 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.938622607 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.385629176 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.934335057 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.935439077 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.397801409 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.01527337 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.961050809 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.944244143 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.941118059 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.024675835 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.94835405 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.001493628 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.002296059 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.055239407 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.970885346 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.937785905 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.93594386 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.936737739 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.933813691 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.934493236 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.962186884 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.927400179 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.934121476 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.376946365 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.93289271 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.93136886 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.928314958 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.926679418 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.953836017 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.925542418 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.925209149 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.00460317 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.925203574 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.992702924 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.424799295 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.45421713 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.923581486 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.923164936 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.922716248 seconds)
  done (took 189.663749096 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.988858747 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.992473898 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.984941662 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.924105206 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.969865645 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.988569452 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.923004585 seconds)
  done (took 15.62442805 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.925628658 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.91730115 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.967821554 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.965826197 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.91789644 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.094116588 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.927859969 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.924964086 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.943399407 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.915726913 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.550658448 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.962924936 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.925328388 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.913548516 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.926211937 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.970446371 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.915433182 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.912115005 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.028009911 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.062731349 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.921960151 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.919345556 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.938307134 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.923153002 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.912949952 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.914035455 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.911690652 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.920613994 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.911887848 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.912035961 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.911683298 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.96243309 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.910791102 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.908837144 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.913893868 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.90917081 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.909100406 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908378062 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.914685941 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.907228485 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.906660528 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.908058237 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.903927232 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.904574422 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.903718367 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.928363302 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.909424513 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.905071761 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.903491154 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.905081225 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.930691241 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.903262651 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.903053392 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.907535026 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.946552567 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.911957532 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.904163647 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.901718507 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.901670388 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.902400119 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.903421111 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.050595576 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.954374341 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.901444284 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.953490754 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.054965434 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.900899601 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.904682171 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.901737389 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.989417343 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.899527688 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.949186769 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.902822671 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.012852425 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.898956166 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.078414827 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.922543097 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.903368335 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.902420993 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.899379889 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.907636304 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.895945942 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.897554409 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.903450496 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.901091237 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.900231521 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.895403774 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.897208036 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.901871075 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.895380111 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.946044123 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.895529594 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.896523108 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.037214254 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.896720117 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.013375113 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.921211251 seconds)
  done (took 209.542546715 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.901712065 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.902211534 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.895503425 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.912646305 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.894697242 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.893422272 seconds)
  done (took 13.22569465 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.896135006 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.897811685 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.892341741 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.891573321 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.894258868 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.894233487 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.895749314 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.893618304 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.895657263 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.891248858 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.891821746 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.891485594 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.898148582 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.891192687 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.890604526 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.888903235 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.891903771 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.891445755 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.887625144 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888979223 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.096041784 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.893316424 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885219274 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.893231046 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.890738688 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.88660567 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.900464983 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.890331194 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.886735533 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.894770493 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.890212428 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.885774829 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.890421094 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.890479185 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.8896332 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.888926249 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888927375 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.88929651 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.883995932 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.885311743 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.884617991 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.88382641 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.883454131 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.884224868 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.884896427 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.889253407 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.88750677 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.895688721 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.886010922 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.883043748 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.883673479 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.882881734 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.882724537 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.884137121 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.88527928 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888967346 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.885257489 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.882269293 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.882752369 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.887802297 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.884784532 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.880658355 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.885753062 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.886598248 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.893492542 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.882772095 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.885616457 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.885543534 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.881586254 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.882473625 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.881746078 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.881323855 seconds)
  done (took 139.005169382 seconds)
done (took 568.947653575 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.799047039 seconds)
  done (took 9.61258561 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.128959814 seconds)
  done (took 8.99201145 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.700929824 seconds)
  done (took 10.561073239 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.953972238 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.944655856 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.934475644 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.934933131 seconds)
  done (took 29.639522302 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.31029626 seconds)
  done (took 9.169692664 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.938046708 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.939293405 seconds)
  done (took 15.80873413 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.008532073 seconds)
  done (took 8.866659598 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.303006836 seconds)
  done (took 9.174081402 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.93040159 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.930978454 seconds)
  done (took 15.740266499 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.922665859 seconds)
  done (took 8.774619852 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.307799364 seconds)
  done (took 10.243786464 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.927530865 seconds)
  done (took 8.820470801 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.920637813 seconds)
  done (took 8.767749203 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.979766711 seconds)
  done (took 8.823480998 seconds)
done (took 164.810968297 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.919756391 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.912553096 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.910721185 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.909198687 seconds)
  done (took 29.495727841 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.942719194 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.942646642 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.950696102 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.944800537 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.93007792 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.928843214 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.939115549 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.939694733 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.9288436 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.93774326 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.936898915 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.934164388 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.953442653 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.946854745 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.946443807 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.933140951 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.93612277 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.936196074 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.927408484 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.946503588 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.931079497 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.933195625 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.897847212 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.901843647 seconds)
  done (took 48.286231366 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.088484091 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.967491261 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.050921957 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.947368518 seconds)
  done (took 9.888143465 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.896220384 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.957611524 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.946874956 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.943523853 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.946286134 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.996309337 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.947283633 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.032195626 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.023017069 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.0212246 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.902801694 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.916942606 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.919111913 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.943078676 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.000076305 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.895004469 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.895174128 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.01058564 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.956103105 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.081873453 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.896150167 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.950380953 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.945958423 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.948367999 seconds)
  done (took 48.804052153 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.896516011 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.904730287 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.902496841 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.896670601 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.898853009 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.896943615 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.905186656 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.898438 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.91792473 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.89904314 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.895751216 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.896439986 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.902907105 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.89644254 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.896393575 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.911613113 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.911042981 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.897827072 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.90030114 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.903608104 seconds)
  done (took 39.85822786 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.894613683 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.741607782 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.240660336 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.14720309 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.896673594 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.89868095 seconds)
  done (took 31.647932565 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.908861339 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.901294147 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.895989952 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.952144571 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.036501288 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.902974662 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.895782012 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.908435333 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.941647501 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.961124352 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.919348421 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.924424629 seconds)
  done (took 24.977632693 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.897064729 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.89857464 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.900560012 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.910853125 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.907267206 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.905788271 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.903616198 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.896208442 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.911973774 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.915196801 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.907296855 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.909403282 seconds)
  done (took 44.695814067 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.603211544 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970166666 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895369654 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.771256446 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357962064 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.449406008 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.789290022 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.656323083 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.386242423 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.843388943 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12050672 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.918288971 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001685243 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.918848883 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188603659 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.300118446 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116238442 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161753989 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753145189 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.955119258 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.120003168 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144584461 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.207741548 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917657951 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920095119 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.925479775 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.548845734 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.734224189 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.953671947 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.346965855 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165460753 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.867964683 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976169519 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.919468844 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.931486528 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922467536 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923373164 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191339458 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.920497511 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165452489 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993307116 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169270495 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924948621 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338827318 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.625751045 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.241664063 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.036733196 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920518903 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921956685 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91922749 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846015268 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003783815 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.922183376 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924260072 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.621732527 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918859657 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994146822 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.921199845 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124651573 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.726897632 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606862276 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.92181714 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924042725 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.496626571 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.035574844 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.034412308 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.645369286 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305358271 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349954102 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.018883317 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.923119953 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924232637 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.159505754 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891800221 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.701596891 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960233791 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056385175 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.937651919 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.562474631 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219380758 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.375329259 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.483903995 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837129011 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198375081 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.725922373 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908406292 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133934507 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.745456919 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843508453 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136042845 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951843954 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921432973 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.187591935 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.636054141 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029372626 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.931248395 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355787471 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935631601 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.923906982 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920390751 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13300474 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408402737 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953772641 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036453179 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933229774 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.998730194 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837926362 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.924826242 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.913703354 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.818667251 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914505358 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908475806 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.941502037 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.672419911 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.947047302 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.841965135 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905843935 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.015011135 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943832841 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.854063218 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154605408 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.21227814 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.573042061 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932095177 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.02912934 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.310550219 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12839918 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902295892 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.110522995 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434377231 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.339058538 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.942591731 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18424198 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.957044219 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185443164 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323348691 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970405329 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.683752312 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.519472111 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.111562264 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908020391 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.894544716 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89668228 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899966194 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829785743 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.540855512 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.305460275 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.067415796 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112101258 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.321093102 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.895320752 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.895859724 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200838632 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03175991 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.882372175 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.559724328 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.413246788 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.730681087 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.921788874 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129287608 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.176925684 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.860391935 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908518572 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970986496 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911091236 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.906436989 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.314158018 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261342229 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.896665069 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.898113288 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.849011509 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902933529 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.897822153 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.429774904 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.864731269 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897929958 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.907077233 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.770464072 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974287515 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896915794 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895538105 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.434260317 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.396025445 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.900459753 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.5545493 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.901316921 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066228396 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163365254 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.281652617 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023152575 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.589513901 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.339438898 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005665526 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.589638293 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815915963 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.888784828 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.826656436 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893198974 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897113137 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894962629 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.075216397 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.170393932 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191748935 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.361771556 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958052715 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091119973 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.620938677 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843023365 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.889850763 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893405613 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.891783833 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887849404 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.401605271 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.189390626 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.999982845 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918691113 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.893685736 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017142453 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.898778635 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.814163983 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.889644663 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891462759 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445520783 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.922266921 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.835784693 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.229336324 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.801021679 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006102618 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934972956 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.898345654 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892771417 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.618453237 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.929233722 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811058458 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398855366 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919053179 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.663907615 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370343706 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462549608 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170664665 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200240971 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.210168139 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.950442543 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.090466988 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.960744295 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932182116 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968753153 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813543433 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.802193584 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.546075581 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213449315 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144731864 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887116647 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095987599 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.613497138 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106246426 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905387163 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.646524782 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19072177 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858794986 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892887938 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.301131572 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98631069 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95883983 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88084231 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.83578995 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217057361 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922788355 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.583057606 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894999951 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.232502649 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399683231 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.951745755 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.294738509 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091778426 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882333218 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24305045 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.178353756 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.921203611 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.886048492 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.871067641 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.097255422 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.461157851 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.742088591 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887337151 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.125967471 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185832923 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.790084125 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.883133238 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.120433996 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143090712 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881775459 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.264733266 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252605924 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.990518218 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940456329 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107713508 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.653807808 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189906252 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.435608883 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.370176649 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886407665 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.807278607 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.58212122 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.084798588 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.884014477 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.84677139 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098286875 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11583883 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562172031 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103020078 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.124627044 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.894057057 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155228971 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959911878 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.979258168 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.2303245 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.319561289 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.128689502 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109689374 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424237286 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.100487584 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350854306 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.050316805 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.885137183 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088815695 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100783826 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.098087311 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.294312125 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059986677 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.594387509 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.888423968 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.090778291 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180095735 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945642557 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.304422747 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.057486907 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.969581333 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890137314 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948081076 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.888599102 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891791957 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.297285649 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.416315403 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.898411305 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961602188 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.008880642 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.392471495 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.888335839 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.890208524 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157315883 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24028011 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.226550379 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871959942 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.885345839 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890478796 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012967418 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.810569966 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89009874 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156449923 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.889531372 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422907018 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.037527024 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904719551 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.250707218 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277689132 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.645508322 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.851242535 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891074577 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105447497 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193582791 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.161916724 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.003323203 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158028102 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223327678 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.919884537 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.2939089 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131095123 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890275154 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.760867804 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.889251084 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014955453 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.083184337 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163918885 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.396218359 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.623977996 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157581567 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.755009014 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.889609646 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.681091854 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161231441 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.161262829 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944326062 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952038029 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893731452 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414851247 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.608510942 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020002433 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.865020883 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81497838 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.899156806 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.204522589 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.128831958 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.597976909 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.891074338 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165991149 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195362615 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163770835 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.942503808 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.794177788 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103570225 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891290857 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.900320591 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.1630835 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104852421 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138111864 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894070683 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.891273089 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.697320153 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815099292 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.891176311 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942847404 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116332767 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909536396 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.404841241 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.590216337 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173383199 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941654648 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89315621 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161066541 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.401230848 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.442920531 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896020635 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109213183 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.922199897 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187657576 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.892367177 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413984745 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196116686 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.891491295 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.509909579 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.139149911 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158290602 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823328023 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900026817 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104873718 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.801188233 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.891432169 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.89374827 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411157146 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125278607 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.628187839 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448439068 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.894246087 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.893677399 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418826424 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925890841 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411347986 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926507917 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908554451 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.41126356 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.584700998 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.177915047 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135126933 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.505137747 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.483224399 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.893178467 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.891876793 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893584673 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810112264 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.243043819 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.076867648 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171347417 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926953467 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419593389 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928133576 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.274194495 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008311073 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.14391757 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931785486 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.412691988 seconds)
  done (took 1676.017085469 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903051211 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.951989929 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.928883645 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.896659663 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.905261877 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.917871847 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.981856122 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.90735235 seconds)
  done (took 57.217364687 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.891899756 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.906763733 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.896569303 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.892237727 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.897124728 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.892371169 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.051797271 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.902742209 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.898256456 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.897710595 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.893944701 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.892185221 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.181638019 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.912493322 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.893017694 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.892103673 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.895301489 seconds)
  done (took 74.514570128 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.895051097 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.140615026 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.954542717 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.892289102 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.848221797 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.901981583 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.890027328 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.936637319 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.899737943 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.130148386 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.193953713 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.915966951 seconds)
  done (took 90.422642327 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.897605658 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.893700458 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.893311971 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.892952028 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.893881359 seconds)
  done (took 11.298565705 seconds)
done (took 2189.040320949 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.123066396 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.951058558 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.990717455 seconds)
  done (took 5.766033404 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.040151803 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.085492774 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.197740973 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.960160916 seconds)
  done (took 10.114851687 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.195216736 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.27243069 seconds)
  done (took 6.292015643 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.24996713 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.902146975 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.306634609 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.897258123 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.899799219 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.897708159 seconds)
  done (took 22.52424705 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.896342341 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.895755384 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.89564495 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.895831938 seconds)
  done (took 9.408710178 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.89425115 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.595993928 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.89736265 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.9063869 seconds)
  done (took 21.119108841 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.042106663 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.010792764 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.036632118 seconds)
  done (took 7.914512465 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.039418354 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.741007569 seconds)
  done (took 6.605924068 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.039708277 seconds)
  done (took 3.865176037 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.923902069 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.165848188 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.392775559 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.426960086 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.548378387 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.682461014 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.200697221 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.128963061 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.311511698 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.325941244 seconds)
  done (took 24.932484712 seconds)
done (took 133.950614222 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.240425358 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.911925253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.092597147 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.256258677 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.118795396 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.094877418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.114016717 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.245707527 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.924595422 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.913597881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.252504161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.117375581 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.064806724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.90616674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.069775641 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.906451632 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.114713559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.251672449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.937191525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.154553028 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.124223708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.905015819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.101425739 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.916027554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.118142408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.044055176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.446008298 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.90670839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.086945653 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.455738716 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.045565317 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.298210067 seconds)
  done (took 168.96355669 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.896749275 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.897327871 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.899009393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.899689631 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.342808617 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.899848861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.899196958 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.899041093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.338413726 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.332951749 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.898302092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.335877258 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.897870286 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.899374092 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.899624271 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.898316717 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.54848315 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.899065813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.898744096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.899409907 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.899685342 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.182506557 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.900649917 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.196585159 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.513451774 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.901626026 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.899833282 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.899224585 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.899126707 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.899927504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.899534688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.90010304 seconds)
  done (took 210.20205138 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.906418908 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.899003782 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.899207815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.900808418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.899868813 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.900229591 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.903167601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.900543491 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.739811336 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.724893235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.900023398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.900373663 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.902881099 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.901345454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.90258566 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.900714172 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.901129386 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.902023645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.899740232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.905426623 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.902805149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.580010084 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.900852663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.601491682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.905837421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.906457263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.901758787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.902394075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.902349544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.901896173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.902884012 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.900775848 seconds)
  done (took 221.731788179 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.139712726 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.90246156 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.904004634 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.823675089 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.905394765 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.903356731 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.890684978 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.149428763 seconds)
  done (took 19.451170813 seconds)
done (took 622.188694602 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.253071312 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.086634191 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.07487855 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.925931072 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.16928907 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.967978825 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.92213717 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.985156891 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.756324905 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.995974361 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.550519612 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.940981752 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.649595787 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.946988165 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.045341257 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.979429273 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.46210335 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.560968319 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.063758208 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.994474234 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.103864824 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.844426312 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.997995684 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.798802093 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.569980839 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.894780175 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.943429489 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.469647219 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.934416659 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.08266434 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.616523316 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.216371872 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.936858661 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.922568167 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.972930769 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.955393445 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.145616884 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.933271323 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.050108596 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.638420468 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.985266006 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.659579293 seconds)
  done (took 103.837634169 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.913268513 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.909641848 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.909888724 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.909262628 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.920254518 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.91005411 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.909257326 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.910041441 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.910138245 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.909642674 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.910285635 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.918908273 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.909290449 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.917606884 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.910145921 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.90966885 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.909501016 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.919780367 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.910022021 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.909755962 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.910162401 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.909890432 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.90563918 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.909648324 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.909839092 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.910638467 seconds)
  done (took 51.540988529 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.906404459 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.061386299 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.147059985 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.924442797 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.905692116 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.908745623 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.92336901 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.910322585 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.908960957 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.909582861 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.997421445 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.911252085 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.92348834 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.148078229 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.922342776 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.906109676 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.906426549 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.907951241 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.068131494 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.921582846 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.926299808 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.911047938 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.925570558 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.918948225 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.908790991 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.908199633 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.911046874 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.346703838 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.915161604 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.000180258 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.950330351 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.928832685 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.279402676 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.155663633 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.95986748 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.915068299 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.907633577 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.003589709 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.91310719 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.907427684 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.925150584 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.913235881 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.151918009 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.418680148 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.921026372 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.909227454 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.356396793 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.012548315 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.950449294 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.917763999 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.154855747 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.924337904 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.910151112 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.909650956 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.944418408 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.919712868 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.909191304 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.213200949 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.921725523 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.926805472 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.912143557 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.910075438 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.075838714 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.917006612 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.066521276 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.917219328 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.91579127 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.909090092 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.157028314 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92462797 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.437978647 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.92332195 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.910004334 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.002502812 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.069114255 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.382399891 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.922035495 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.078412309 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.297760839 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.932501752 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.918261156 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.339823376 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.9361193 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.916528822 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.910955903 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.911145411 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.910606156 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.956778477 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.925121649 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.349225117 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.430272368 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.230359919 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.935090173 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.9232845 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.912461023 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.213297538 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.91716155 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.910410487 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.144430517 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.443616254 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.924476984 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.918052997 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.413996058 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.9246778 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.929521293 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.919405335 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.161321584 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.926283791 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.95614272 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.911508351 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.918923512 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.913995301 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.929250128 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.917576985 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.911615707 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.403040195 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.020638754 seconds)
  done (took 236.558982464 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.912643226 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.912718264 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.91122103 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.910976959 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.910799907 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.91224803 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.910726839 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.908966622 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.911535462 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.910717764 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.909908902 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.912579637 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.91303032 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.919088001 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.449832333 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.916102922 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.515475655 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.913008452 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.9141475 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.915017284 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.598003278 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.918496501 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.915169235 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.913672811 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.915516549 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.91315834 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.917696772 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.962098017 seconds)
  done (took 169.289473978 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.915493983 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.100995569 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.93725144 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.945096646 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.925019334 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.916434273 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.054979796 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.93908041 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.922468194 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.91655853 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.916886116 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.977789858 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.931984785 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.015151311 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.952503167 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.022414047 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.023544625 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.927331559 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.918057095 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.918109328 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.947404923 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.927517596 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.978796706 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.045347667 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.935526325 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.031252915 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.937636218 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.918662247 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.918464417 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.030888545 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.938961024 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.979202623 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.950598177 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.937192708 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.036855649 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.037098298 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.024714115 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.026151351 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.927773322 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.918359308 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.919472935 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.920261046 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.031730441 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.939922529 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.921885376 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.035181281 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.93975367 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.919236445 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.91963247 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.919865581 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.933476227 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.9363425 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.983255786 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.051492485 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.958172533 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.943147527 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.018159951 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.044252756 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.919896333 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.017519195 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.930802177 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.032710243 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.942908141 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.920879836 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.922311064 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.925528894 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.949492836 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.026283812 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.027473429 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.930557058 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.018034356 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.961731805 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.927834761 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.920719104 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.921212951 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.034247951 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.040035598 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.958906751 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.957884094 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.950804027 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.929224648 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.920330822 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.921582444 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.936900696 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.92492368 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.034989561 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.041394526 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.930967581 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.921139618 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.922147191 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.92223735 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.945451294 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.04078808 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.959234887 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.02690329 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.989913011 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.99831851 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.937786867 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.935091504 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.926065561 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.984624921 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.938756009 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.934567597 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.206733544 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.983440812 seconds)
  done (took 208.259464998 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.302683415 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.972698715 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.978732128 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.236915883 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.310644038 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.933683504 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.971409725 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.972791244 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.003741313 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.194767157 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.045137634 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.991711467 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.95734451 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.944509905 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.968718927 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.003871644 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.981618826 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.306178359 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.186623734 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.523699017 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.966586147 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.257376267 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.306453122 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.556928989 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.01790788 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.363449742 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.55943237 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.132411266 seconds)
  done (took 64.806684946 seconds)
done (took 836.127202778 seconds)
SAVING RESULT...
DONE!
