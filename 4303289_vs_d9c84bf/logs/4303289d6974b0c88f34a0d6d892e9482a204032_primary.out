cset: moving following pidspec: 4651
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.34909101 seconds)
loading group "string"... done (took 0.544758861 seconds)
loading group "linalg"... done (took 7.046005016 seconds)
loading group "parallel"... done (took 0.151121069 seconds)
loading group "find"... done (took 1.097721527 seconds)
loading group "tuple"... done (took 1.803985501 seconds)
loading group "dates"... done (took 1.166130255 seconds)
loading group "micro"... done (took 0.210305621 seconds)
loading group "io"... done (took 0.912038158 seconds)
loading group "scalar"... done (took 35.91835801 seconds)
loading group "sparse"... done (took 11.055066292 seconds)
loading group "broadcast"... done (took 0.900796998 seconds)
loading group "union"... done (took 11.733002837 seconds)
loading group "simd"... done (took 4.101880928 seconds)
loading group "random"... done (took 8.435560783 seconds)
loading group "problem"... done (took 1.842246235 seconds)
loading group "array"... done (took 19.619163561 seconds)
loading group "misc"... done (took 1.616702036 seconds)
loading group "sort"... done (took 3.107900711 seconds)
loading group "collection"... done (took 16.259692529 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.48337474 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122244128 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113981089 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117776866 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145165585 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113633155 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122163282 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083249791 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.776526226 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146000952 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118066038 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411704867 seconds)
done (took 5.052765198 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.1737711 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082307463 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080890661 seconds)
  done (took 1.28319485 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.0651593 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120482059 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06655336 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065804868 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06586568 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065947496 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065899174 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06510115 seconds)
  done (took 1.636105979 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072557091 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068132968 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068110302 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067464006 seconds)
  done (took 1.397579355 seconds)
done (took 5.690103666 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.762219875 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203375643 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181932786 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.395932004 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127895097 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153186201 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647492702 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312085354 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182797571 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080906537 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103622903 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316693595 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106947538 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643930481 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073738237 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089598586 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138999572 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.407212828 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066893037 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081291685 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088577637 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127281817 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086915011 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07401584 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14107448 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067458169 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129252011 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079674708 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066271477 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207116553 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172133217 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65831363 seconds)
  done (took 10.130748858 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094915285 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096863184 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067939451 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136429825 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095918911 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069808179 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070815119 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066635277 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086446774 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127654413 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088051699 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100718144 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064987798 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068384072 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083945792 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203617182 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08084466 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080442457 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069667448 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074518196 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118059765 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077516389 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077710955 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077171669 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128043314 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178708331 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095428959 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096631952 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066545323 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080261624 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114901414 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125291487 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06541084 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065917463 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123762557 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093834721 seconds)
  done (took 4.57018123 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.279846444 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139652988 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090149913 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131148727 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064242905 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106343524 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064884849 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080209593 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198273485 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.30701589 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108925327 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.572344531 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11012302 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102702362 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067206704 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067946209 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066739565 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.339896695 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106578182 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103632474 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080289451 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069107158 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067783131 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.347843552 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066623449 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063216733 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067324216 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057388221 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063751679 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122533238 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066869612 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.013965808 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.070962564 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124732591 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066607677 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063481613 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.228964031 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088621698 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06400315 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067976255 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141986275 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064569441 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.1500753 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069844978 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065988423 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083567202 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103296466 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112279172 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065163416 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066418444 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160541031 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064315207 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078808108 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.985708115 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153803145 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075739682 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064220625 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244084224 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085578812 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068604796 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064608741 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.177473071 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136256916 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067199815 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065900962 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067968488 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068813445 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361043629 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067667292 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.712195886 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069986385 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075734574 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068537296 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071400133 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07213596 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071957999 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084664578 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.0656885 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075027559 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065760996 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065456582 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06653685 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083557676 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358045898 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066186908 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06763964 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068265547 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085858835 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096485051 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066233685 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064767923 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.199192566 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069154159 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066948012 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105668432 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066506905 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084434689 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069692446 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113435063 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065392664 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093143411 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066946092 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097526821 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069483823 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098933215 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081186993 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06808895 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398000998 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064638108 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.0654677 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067544171 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064373373 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067281429 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066018558 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078821816 seconds)
  done (took 20.773644708 seconds)
done (took 37.877102283 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268358723 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075549557 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07458942 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074823434 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074892119 seconds)
  done (took 1.772769599 seconds)
done (took 2.962687959 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11910157 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098519144 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063728726 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094721493 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063536776 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099646836 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098216565 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080497273 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098304877 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064298882 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094987334 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064011274 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063624683 seconds)
  done (took 2.30864422 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082685553 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082199788 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06913816 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081612048 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063716669 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081791122 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08038311 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087537487 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08038603 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072394299 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063248596 seconds)
  done (took 2.025177876 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081480079 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08309271 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069028091 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081111406 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065479376 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080868167 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080146786 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084737741 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080562686 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072478217 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063121119 seconds)
  done (took 2.02076368 seconds)
done (took 7.532472619 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076576354 seconds)
  done (took 1.24663978 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.583348797 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.025402064 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08139226 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111520166 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.1825028 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119165825 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276508998 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086527827 seconds)
  done (took 8.815880193 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088166571 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081394313 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069512258 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071932923 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071021285 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06915347 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068842973 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068527614 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067862039 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069306308 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070778284 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07174518 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071643803 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068111059 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071576061 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070404427 seconds)
  done (took 2.393893688 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091943113 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090129248 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073007119 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074328821 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071799256 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072021199 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074377742 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073169996 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070516443 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071843812 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074592729 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07323698 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071472885 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064565793 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074057135 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075322119 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071015295 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073590688 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074869658 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074450502 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074023716 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064227174 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070961347 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073808428 seconds)
  done (took 3.050693791 seconds)
done (took 16.689518584 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113593527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071428049 seconds)
  done (took 1.363448079 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081051409 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082762122 seconds)
  done (took 1.349644456 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083410533 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065351511 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092378466 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078612507 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066044932 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065321969 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089329122 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065946959 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065792265 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066054711 seconds)
  done (took 1.926453666 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068685023 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078396488 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071667739 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080635163 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073892946 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064511181 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072700435 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06778977 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078173714 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062458632 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071178579 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082888214 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071419211 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084033451 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07245398 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068677678 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071107577 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067206512 seconds)
  done (took 2.493608566 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065551549 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066712724 seconds)
  done (took 1.323429035 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066893314 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063357182 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067259204 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066800821 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063318193 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06227263 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063417792 seconds)
  done (took 1.639836267 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390559961 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110229539 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.299446835 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070078679 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081233941 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24845121 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065103433 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070090033 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070155412 seconds)
  done (took 2.635041536 seconds)
done (took 13.926965923 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078005505 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08442055 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094462232 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.360738168 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09131668 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065424088 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114409445 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192152787 seconds)
done (took 2.285765041 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213990271 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608310489 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385714847 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196071658 seconds)
  done (took 2.384777078 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327229495 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085842798 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058188093 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066312525 seconds)
  done (took 1.739280492 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065384104 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067998813 seconds)
  done (took 1.334733327 seconds)
done (took 6.876668818 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066233207 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082442433 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0661914 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062878442 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065548015 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062844355 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064307516 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062851014 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065737864 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065509702 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067681496 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065520626 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065599394 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065598792 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063049474 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063037769 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065412612 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067601669 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064467402 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063425574 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062878093 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06507899 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062931633 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062897606 seconds)
  done (took 2.804587107 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083124654 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06666093 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070871544 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070652423 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069498691 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070537361 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070672979 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065909749 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071013528 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067510117 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069489049 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069467261 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067915602 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06970972 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067663505 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069936372 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07091061 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066225775 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068064466 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069751728 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070348599 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065932255 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069523527 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070372451 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069338242 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069130906 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068102672 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066346807 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071173089 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069200001 seconds)
  done (took 3.295581909 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069540336 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063892815 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064159879 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070524628 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063943329 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065309328 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063146114 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063621252 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064197979 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063353751 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064354856 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062780164 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062869625 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064096842 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063755373 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066851249 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078315625 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063785183 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063340249 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064215854 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066568038 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063566627 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063236984 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.171175125 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063036055 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062565666 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063425016 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063042142 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063908212 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062959521 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066204847 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066420577 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063021415 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069957011 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066693456 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062975721 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067167732 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062616151 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063714786 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06301392 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063230814 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062735755 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063272124 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069730245 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063275636 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06476463 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063431245 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06447562 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063255868 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065468268 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.0624125 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062847801 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065389258 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063992715 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067639277 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062408405 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064004233 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062589013 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064649642 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062825018 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062872304 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062552665 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065514091 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063383155 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077062519 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070542054 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062949718 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064605847 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064102074 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065294597 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06487375 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075942123 seconds)
  done (took 5.997302525 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090582564 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08587575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065178922 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064909298 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061762506 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063853484 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067409379 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064082091 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065346593 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069384079 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06373116 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064951958 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064978005 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076309342 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063932174 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065008757 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069571546 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061663022 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063792832 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067093373 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063908974 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066899452 seconds)
  done (took 2.710048717 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154421048 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07029808 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105194777 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072766016 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067697999 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072515541 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069113305 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06936721 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069263907 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067829564 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0682738 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069287597 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066905609 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067950603 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06752084 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067551882 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069196674 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067671038 seconds)
  done (took 2.57685878 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076712673 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066180948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086244225 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066132577 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066070672 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067657644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070070298 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073801555 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068169642 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065704557 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073978849 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068042075 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067845452 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065228619 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067746965 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065587962 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067719302 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065538685 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073465119 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069972499 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070426255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074011189 seconds)
  done (took 2.749775741 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078859433 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068213248 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081980879 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06843315 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062607128 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063782752 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.0695825 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065689544 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069484802 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067343594 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065481758 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06416213 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069009837 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06536227 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068859733 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065593471 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067208391 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065733983 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066906709 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061577709 seconds)
  done (took 2.571966645 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086436745 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067460273 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066922824 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076176632 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067225886 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067074368 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074868034 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066706734 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066624231 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088294094 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066755638 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06682669 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074620652 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071831443 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067034518 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074713563 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074426551 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074746124 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066968757 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067244115 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086718123 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067233625 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074187633 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067294727 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06654244 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067318907 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066861247 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071399556 seconds)
  done (took 3.218299326 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066357897 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065682644 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063166095 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063007756 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063337943 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063543912 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063504306 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063338406 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065386169 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063368104 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065723126 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065606999 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065852825 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065591452 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065668839 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065620787 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065600166 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063378228 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062927189 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063090904 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065553737 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066031199 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06529754 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063137904 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063363655 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065463918 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063418442 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063118531 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065594055 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063105761 seconds)
  done (took 3.155189576 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075171622 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072230278 seconds)
  done (took 1.371310647 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06332583 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079986227 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062758677 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069859208 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070380007 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066415753 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073090477 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069480036 seconds)
  done (took 1.774468383 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08133446 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07699253 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067924409 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079686393 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076475839 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082204666 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132276653 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067399372 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072366699 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064155023 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079464409 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065233494 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072362622 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066236208 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07136575 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071817407 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063818977 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071907645 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067811231 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064464153 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066847529 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074583525 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068682072 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061394827 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066788018 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087850543 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076639442 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065684652 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069420207 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073096635 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07153638 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060460496 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065920514 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06639177 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063687208 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076030058 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080827168 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069026944 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073974497 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066961181 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076566488 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061483608 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070489314 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072548351 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075742836 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066385317 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066691267 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061084164 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064043388 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068764032 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061863744 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066324906 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060807593 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074848073 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069489817 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07659806 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065004413 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067927606 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06874984 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069202688 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072472444 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068354068 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068491737 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06575646 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075523025 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070290127 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074887176 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061276485 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06008826 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064088656 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07604902 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088531117 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072350117 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066685838 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067208439 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063723726 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069337846 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067287809 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071907407 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072083644 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066183865 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071650614 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073744813 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066826681 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068682942 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074666889 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064785449 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069342609 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064279716 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082544715 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065392201 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06409068 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064054708 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076302176 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069189108 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066190188 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064721939 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072914808 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060027694 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066604569 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065911893 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065584778 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074568687 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068950588 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069270815 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073198663 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071849295 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064952235 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067572451 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061690601 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065225122 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063932532 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071522894 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059259776 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067577146 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065484668 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065030181 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198613004 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06518008 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066441114 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074032232 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071983581 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066116685 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063668548 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069420679 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066621976 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070241739 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074227957 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06478464 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061721008 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061763957 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069958717 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066851879 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.0704461 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071328128 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069907253 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061586612 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065044493 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072079251 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075690772 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067408027 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067661104 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072850368 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068051525 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065692957 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073268992 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069732482 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065728006 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071881888 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06743035 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061632094 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069314822 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069124809 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06565831 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070587102 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069253418 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068863238 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067025562 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064611567 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074353073 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066948174 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065503831 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066646176 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06538676 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076884094 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068065604 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061239721 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064250944 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075816518 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064425949 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066422202 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06667369 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068014605 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067460428 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065113162 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065763754 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067935641 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076899152 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07066259 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067278035 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071586465 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077268186 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066220181 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068562572 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066487109 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067709616 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066621237 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075143523 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071264477 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071100529 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068633789 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062894813 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071707141 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073630921 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065409575 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064043577 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065583983 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070271708 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071909097 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070097136 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066639114 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063947508 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066885333 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068917522 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068499931 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065457149 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065244551 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072711493 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064013937 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072918301 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066738278 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075900549 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069348313 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061086521 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069339634 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064181117 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071825656 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061121738 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063705318 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064880769 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06647152 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064515133 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067143175 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059462969 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071274785 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071769533 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064803265 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063772537 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06449819 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071405293 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065959554 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068429285 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068048653 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07055216 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07456981 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064189581 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067929999 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.201529056 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067372813 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060767909 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071929747 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065494122 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065720616 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065803876 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06474096 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068727838 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075323089 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073461852 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06057989 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068938124 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065403488 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066043482 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061897592 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070901815 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070349281 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067156421 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07370581 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067881005 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067969638 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070467673 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066976967 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068524618 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067390899 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069585331 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066992221 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068216093 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065718338 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069656444 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065610284 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064924794 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067975032 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066498745 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067482929 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072666008 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066362357 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06687096 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068812673 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067243851 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066677863 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067619188 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066561382 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070022134 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067021443 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066903064 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069159721 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062113263 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073285261 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066314108 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073678304 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066348122 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063434429 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073536875 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069180899 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07204424 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067664886 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066538455 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06786674 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06578642 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070089201 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072550997 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064758804 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077565841 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074438239 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066470592 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069382191 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066940507 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067932657 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065500243 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066998841 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067056027 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066442971 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065899307 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070768994 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068249491 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066036408 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067411175 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066388743 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066458643 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066751113 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060650145 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065347235 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065310711 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065897832 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075215529 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066423585 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066222865 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065462797 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066777436 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065077175 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063044956 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074179822 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07499816 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066258417 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072747454 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065074347 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06726187 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076617237 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06060146 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064122693 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063758617 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063770885 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072948663 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066856761 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074835817 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065668328 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064764221 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062715307 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065657176 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063835955 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059248491 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062493412 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068086477 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063844849 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063798549 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064859689 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067406932 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065936481 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074148852 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064082608 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065605564 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064996685 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.192803177 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066889718 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066503823 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069413236 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06751636 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065002241 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064125913 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066669706 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067129152 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068269551 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066365283 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067544325 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075774045 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066921925 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070158043 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069312878 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061076626 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069876839 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066667875 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066162619 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066286623 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069687696 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069718719 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067439829 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075562009 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066407422 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067427913 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066454448 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064647064 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066340653 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.0660344 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066281506 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065731736 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067655961 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074542316 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064769322 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069278554 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066630927 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066837475 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073223176 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066783657 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069676049 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073583146 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067320605 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067884087 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076389494 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070693084 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069218339 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067553697 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067815431 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071825409 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065727474 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072580125 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.0669197 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067181058 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069283114 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063814047 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065352142 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065976824 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065119206 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071525686 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067076594 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065644186 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065578535 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064343134 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06713828 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069534716 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074038212 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068845379 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069281354 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06197274 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063447553 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066937423 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063645853 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067710974 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068808156 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071774588 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068147792 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066364585 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065196285 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075027778 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071129096 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069516279 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063689588 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069744439 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0665913 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067962695 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066951382 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06621598 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067253605 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069923758 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067904519 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065903374 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073239731 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069908083 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067176396 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067904349 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067422907 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066639716 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061650803 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066873317 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068364901 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071535645 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068604472 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066228199 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076846962 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063824406 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065940199 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068736996 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065442153 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069880011 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060815351 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067380348 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065969577 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066368735 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060190671 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064213744 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062953313 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06708503 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064283884 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060189323 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075168256 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07318267 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06774859 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06373456 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.195308674 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062292813 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06234184 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066303591 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067104876 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068367274 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077100882 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065721397 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065315702 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06187785 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067378324 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069692917 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069801653 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063945444 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061610187 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065976267 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070155568 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071461845 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065457215 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066273767 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069323401 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068390114 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065274685 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070521886 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063889039 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070424899 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079027152 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067507755 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067490824 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072750229 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074292712 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067116438 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062271753 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067656217 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069626041 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067241218 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067030869 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067512188 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081155813 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070225829 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065616879 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065055074 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069294884 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06567139 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074119658 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067344876 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067292389 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070960848 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068234499 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075427126 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069479571 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073468957 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069642688 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068909387 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.0651387 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066720926 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064990279 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065368059 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067164027 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06716986 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072098118 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07463955 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065396595 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077333161 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075301086 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06817838 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064309338 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065645407 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066508881 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062549826 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066863832 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064776571 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064508836 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064230743 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064956107 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066972686 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071117882 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06708726 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066640698 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065673946 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060460471 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06830285 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06859527 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066781369 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062933624 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065966619 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066679016 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070000657 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069049963 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063598342 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067641271 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067504889 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066741195 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061590071 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072928766 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06510277 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068096193 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065326262 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066231916 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066761158 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069472678 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071290321 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067186406 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068271431 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069584625 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068150236 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06334016 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062829316 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070972572 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063353192 seconds)
  done (took 42.384682897 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101314728 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064146419 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062772168 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062449862 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074464404 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063146099 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062055618 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063252543 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063143269 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065656973 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062367969 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062242527 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071045514 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078534916 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074138745 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06695235 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062151058 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063503218 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062289341 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063218688 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071160916 seconds)
  done (took 2.746820482 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073953511 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070195522 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073400899 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075767534 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067303485 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070671184 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072750444 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070901235 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076710609 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067460231 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085008266 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071335589 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067301195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067427877 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067522287 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071075377 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076391111 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067334941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070685778 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072772837 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071167907 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072587733 seconds)
  done (took 2.873557894 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066475744 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065733524 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0687944 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062155905 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066545626 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06203178 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069876652 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064325426 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069859254 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065255044 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065304979 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065424667 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067806278 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061478924 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066443587 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063784321 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108315406 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069243428 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065731192 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066829452 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061350684 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067759111 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062010007 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062501655 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065666147 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069902339 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066687602 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064155176 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065688112 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065093192 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065710032 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064270497 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067423931 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066679396 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06527819 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06517297 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065644809 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065447853 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061540991 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064183068 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066452289 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062017235 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066194971 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06727642 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064056842 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06382053 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067717855 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065840417 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061202813 seconds)
  done (took 4.544440823 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079592261 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109343136 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068221957 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088811767 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080078849 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075491146 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069915259 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089599093 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063341453 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064315755 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081477659 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079479399 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065897106 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070345957 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069419768 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065690793 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067015061 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064884503 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069657394 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065338863 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069835855 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072031857 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080288191 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078951299 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069834391 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064827647 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065267779 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069964126 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078543276 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070434773 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070164863 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070875672 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080258518 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07093156 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064702347 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06750332 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081482847 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065814339 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067850624 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063006686 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06756488 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069473395 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071781889 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081015662 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065754819 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070833687 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065041632 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062506066 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077582873 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06771598 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073261232 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079334079 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068888979 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065355591 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069847698 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080190008 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065257412 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06356474 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068728058 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07755352 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063394079 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069187087 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079005347 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067771668 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072835097 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079470983 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07063785 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069111441 seconds)
  done (took 6.325466826 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075299801 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072500578 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080370428 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080498699 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072284003 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07229577 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072027148 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072310677 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071706201 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076762289 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072385436 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093320416 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067634583 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075068378 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072023159 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072348801 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072411716 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07239994 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072286899 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072060802 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072219013 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079782495 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072083921 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080144154 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098146994 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067664028 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071925724 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072170237 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080132309 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071977678 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079363385 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072291332 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072191336 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080003189 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079350704 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071943486 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06502756 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071643725 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071863456 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072286556 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066994056 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079664358 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071842401 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067236647 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071707824 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071400615 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079432791 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078753156 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074451294 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076198836 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071684527 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079681519 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071419951 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071542823 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079708968 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104184117 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079434087 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079439857 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071602847 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079284244 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079519057 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085792464 seconds)
  done (took 5.998254922 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083841042 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073876456 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075466062 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06126649 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063910482 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06983378 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064250654 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063847777 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074401198 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074848713 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076621695 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069874825 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072412581 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076523518 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069523725 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072337209 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069568999 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069183773 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073884097 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069164399 seconds)
  done (took 2.741427526 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074765926 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082679166 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067189765 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072079228 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068654456 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07174718 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068401419 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069279862 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06683503 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069097585 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076646597 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075534877 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066635332 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071539911 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075632781 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071437689 seconds)
  done (took 2.458543186 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075061454 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072548001 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079591053 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06637535 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063838996 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062401118 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065344799 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061496446 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062508642 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077602123 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065752998 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068076467 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065699018 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064834079 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06293687 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068358739 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062173804 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063268579 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065665085 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078476657 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076328165 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064246418 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066227582 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065745696 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065982011 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071025451 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065126785 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063355025 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063030192 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06634931 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066111033 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068912523 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063009174 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06339587 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064017799 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063204034 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065461509 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065540913 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068908095 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065233807 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063938566 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065183895 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065749723 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066224492 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062069702 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066303489 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062325232 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06724369 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063271862 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065729059 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065482983 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067875223 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065851504 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072067216 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068440417 seconds)
  done (took 4.971349762 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078919009 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069704489 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061814523 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063837326 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068468585 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067471536 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069131548 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067669892 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067527095 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063711773 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067753207 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068403169 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067737532 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06931852 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067523728 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069067865 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061519436 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067660938 seconds)
  done (took 2.540661788 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071927086 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065388838 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071834186 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066364551 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065909614 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068293495 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061971636 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064280351 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06495982 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065362677 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06559917 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068300226 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064593886 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067962615 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065501788 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065580819 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067880428 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064389358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065558849 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061519475 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068270172 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064334277 seconds)
  done (took 2.772481485 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092518366 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081330274 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136742414 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078814159 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082623255 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071460558 seconds)
  done (took 1.860012073 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090897723 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078305473 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066290437 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087348627 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072755703 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067303453 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067365061 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067637176 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075614041 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076307717 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067365999 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075788495 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075293735 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074875422 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07302233 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072740444 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067468957 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067360261 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065822659 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083931793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067165186 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0754234 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066838961 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066750686 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067094619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074715772 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075613925 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075618556 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067145942 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075747286 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073038515 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067308343 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075941585 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076057771 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06907389 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07593459 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06752037 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084206296 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073040197 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075327061 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068703656 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073437111 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076119096 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072159132 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07580434 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067836493 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072178691 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067350556 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067569287 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086038196 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073232872 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075366353 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073365642 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076061874 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076243854 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085985064 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07626449 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075534617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073498017 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078096982 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075668956 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073232081 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07510869 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076228232 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073954794 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075603304 seconds)
  done (took 6.181403699 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081771668 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085656717 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067829178 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076577793 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075237847 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067971087 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067373992 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0672465 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067646486 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067219391 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107432861 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068405718 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075410994 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07545971 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068045882 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067578168 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068113362 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075795701 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067212425 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086275863 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067534445 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07557174 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075601348 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075406181 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076227562 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073369787 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067693812 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067448049 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067471486 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067590076 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0724023 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067636143 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075420377 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067407541 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075568198 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067584551 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067451557 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072286094 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067648726 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07317499 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075327614 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084056974 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067386923 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067566753 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076002664 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067838344 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067464386 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067093625 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067505714 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066868149 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075781145 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075489 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076401292 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074896497 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06727129 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067335713 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067042039 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067339426 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067458502 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072869068 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074904959 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067255635 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086300363 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067039107 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067470561 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075060029 seconds)
  done (took 6.097096847 seconds)
done (took 127.923414876 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18499999 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165260296 seconds)
  done (took 1.661635589 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068727382 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096933982 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077652419 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128107465 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066181379 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099912513 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099145383 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07879047 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065946879 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066080982 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06621576 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068668723 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131424888 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066523629 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065792893 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068784926 seconds)
  done (took 2.639720797 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097700982 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157360489 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099307561 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065369287 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096796247 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072902223 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065053362 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074731994 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07107845 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064838248 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072706 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070425169 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065369819 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07068115 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07093312 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072453215 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065165386 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07270995 seconds)
  done (took 2.754381605 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10187481 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092270085 seconds)
  done (took 1.524986523 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158584333 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107076953 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150688536 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34576818 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166891297 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230489475 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128239605 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.131357897 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.126260628 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124736599 seconds)
  done (took 2.997479963 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097155713 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151815722 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255780278 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114885381 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072446181 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095567557 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115807011 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077321222 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080867917 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080213391 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080390032 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076303847 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098805052 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07358007 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073155886 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076101077 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102454088 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072259117 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074210288 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076562678 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099531277 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065705064 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073636171 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072327142 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077305493 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077174531 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065489892 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065377234 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076828815 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074016885 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.0771311 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093523668 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077051481 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106690555 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070016309 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108020228 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076437793 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073857608 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073911809 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074488113 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078604598 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078611099 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072118181 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075761413 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06537392 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076236284 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065440707 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065648332 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07792191 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066645319 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07784654 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076661857 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10682505 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066506157 seconds)
  done (took 5.933293784 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101140756 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105056626 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070905639 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110659935 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09959439 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07096111 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100701896 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093312011 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103076749 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06972115 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068225075 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070389722 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082075264 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082784457 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111918361 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104007746 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073769915 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070746342 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103680667 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102573741 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06851823 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094952435 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089146465 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101928008 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067989881 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070180333 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068214753 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070609163 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076614054 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078131286 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069607142 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080522248 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084907172 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078453796 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067126918 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067943433 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068355059 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079129778 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07958513 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079002502 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077479286 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067973307 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0677348 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069499899 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070035638 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067563545 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078794128 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080340388 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079125496 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069309585 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069903463 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068149174 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069209389 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080527127 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077747491 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080547923 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080071517 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068056869 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068002338 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071852592 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081000669 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079674741 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079594025 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069790684 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079113295 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068457975 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080067275 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084388111 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068090716 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069454741 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068589229 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069672066 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069381029 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077745768 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078095565 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069930234 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069234035 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068268296 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079644761 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078367059 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06805508 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077187668 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067023098 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068822159 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070010231 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069945195 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077821226 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08003999 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069901287 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068203497 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069397819 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067982097 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066633954 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075945645 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078579472 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077241671 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077995813 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06864754 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077502764 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077614614 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068735975 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079761526 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067340869 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196896987 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070659071 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079909278 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078673449 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079852654 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070225709 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069061655 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079149185 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08124096 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06853668 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078702175 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081204853 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080794286 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068512534 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081783975 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068966481 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080342965 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070149164 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080431169 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069371754 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079893923 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068861859 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068778245 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069862426 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080423004 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071042804 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06955989 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070103486 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06983213 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080291014 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08372643 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070537051 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081134548 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079064317 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070742457 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079792266 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070082569 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078796267 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069641101 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070203225 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067378162 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082269917 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068811401 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068433918 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069863656 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081854004 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068276232 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079999483 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078071476 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068405476 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081301348 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080637301 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078151086 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079891 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07071163 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069515305 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068139342 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06923859 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077716748 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080011064 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070259217 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068614788 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078361546 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079749497 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06764108 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078284533 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078649439 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079213298 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06834557 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069810942 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.0802572 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080702142 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078637154 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078269259 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078283544 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068606125 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077981658 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078512662 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068497628 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084091978 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068183342 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082256295 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079350095 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077319385 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079077812 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080563044 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080274887 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080291482 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082987388 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067695542 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068470368 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079932505 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067849514 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068764705 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077126701 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068677622 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068720588 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08211108 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067314317 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078426369 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067045202 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07705246 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065883432 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068979391 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081387311 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.196903926 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070357606 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079720062 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069601376 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077821931 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080909407 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078400688 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068655229 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070517964 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080688685 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079756272 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068810359 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069358286 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070739012 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07902293 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078220711 seconds)
  done (took 18.616119819 seconds)
done (took 37.467544152 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209301471 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150303252 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198244227 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117714482 seconds)
  done (took 2.107764122 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121458007 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100791607 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094496039 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06491339 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101110432 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064861959 seconds)
  done (took 1.918265071 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311604153 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210230224 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181927929 seconds)
  done (took 2.068811312 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199152367 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186443348 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394320679 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252724676 seconds)
  done (took 2.505631443 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143502296 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089516539 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066690428 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08277949 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133998083 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160368153 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100875642 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12540951 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078012945 seconds)
  done (took 2.400616625 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147238699 seconds)
done (took 12.523798785 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1669248 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.128633849 seconds)
    (3/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089290233 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.212336582 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.097692037 seconds)
    (6/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.208172933 seconds)
    (7/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.147118121 seconds)
    (8/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.191442656 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071201608 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102612417 seconds)
    (11/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.22122261 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.187696834 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077483193 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19209159 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.194373515 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.10786929 seconds)
    (17/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.0892116 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073274364 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.081969236 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.217195133 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123222839 seconds)
    (22/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07965181 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086953142 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.170558085 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091225806 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074751169 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.207944435 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.169251216 seconds)
    (29/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.138856541 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077012347 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193784793 seconds)
    (32/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157757797 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090311253 seconds)
    (34/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071492253 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18219849 seconds)
    (36/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071175074 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121757974 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072757241 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.188186061 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089173371 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.127518983 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.183553238 seconds)
    (43/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075640722 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107730224 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137644053 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073121832 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07169038 seconds)
    (48/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.096631945 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068533191 seconds)
    (50/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088272661 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091978413 seconds)
    (52/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07242476 seconds)
    (53/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137404375 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090832359 seconds)
    (55/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069081658 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067506987 seconds)
    (57/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076367835 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.205410615 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076975639 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072526757 seconds)
    (61/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07474121 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085258384 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.158452315 seconds)
    (64/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098015113 seconds)
    (65/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.118358629 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08741698 seconds)
    (67/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.148219671 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088702711 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109220344 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066127051 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074665841 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08690565 seconds)
    (73/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.16058215 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071839579 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106458317 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064760547 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.172847484 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.184367196 seconds)
    (79/309) benchmarking ("sort", BigInt, false)...
    done (took 0.325081882 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07487735 seconds)
    (81/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.290564337 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087801693 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.1768818 seconds)
    (84/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052356761 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066296152 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065087593 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.065748244 seconds)
    (88/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.091006638 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07400195 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071991466 seconds)
    (91/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.167741994 seconds)
    (92/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05174189 seconds)
    (93/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172026494 seconds)
    (94/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053249987 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051423776 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.196371567 seconds)
    (97/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104368997 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091018266 seconds)
    (99/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066492789 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094470355 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093069553 seconds)
    (102/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107468882 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067064937 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.150308761 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051254393 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 0.126025665 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051920821 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053186347 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112014667 seconds)
    (110/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064010256 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090089745 seconds)
    (112/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100162274 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.134893467 seconds)
    (114/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073252344 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072215024 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149412905 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06960558 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066114029 seconds)
    (119/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050993467 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135923921 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068881971 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066267011 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.206142189 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087222608 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076048038 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.137263586 seconds)
    (127/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051945375 seconds)
    (128/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050794856 seconds)
    (129/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066610319 seconds)
    (130/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075468778 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.157835055 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078759735 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.133193447 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.0729681 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051340407 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085433359 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070941565 seconds)
    (138/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078798338 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07206448 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071686461 seconds)
    (141/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172390607 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064968326 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088732692 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070365141 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071704827 seconds)
    (146/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05156951 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.164129012 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064987217 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071491322 seconds)
    (150/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060178337 seconds)
    (151/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051407131 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094365733 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064536021 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072036687 seconds)
    (155/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071328404 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175825399 seconds)
    (157/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051350911 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081883868 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067270038 seconds)
    (160/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098299131 seconds)
    (161/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081213676 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051389279 seconds)
    (163/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099716049 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073313845 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051250231 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165128135 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06535637 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066229703 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069519101 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120361473 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053143749 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051248757 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072349672 seconds)
    (174/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073306707 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072052766 seconds)
    (176/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051204867 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067668684 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052185027 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052231474 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064487196 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086635984 seconds)
    (182/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050870829 seconds)
    (183/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069934958 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106425567 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066701962 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072157816 seconds)
    (187/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104246183 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064635474 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149262275 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071016653 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.282771046 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066254578 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134188011 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074246912 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090249187 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090049462 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06584623 seconds)
    (198/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061682189 seconds)
    (199/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079142562 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071619275 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07609276 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 0.139581968 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051538153 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052850953 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052267054 seconds)
    (206/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053296403 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051700067 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064007454 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064073677 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051145773 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075026642 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052602983 seconds)
    (213/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051617802 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065772141 seconds)
    (215/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081325176 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085048418 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072593269 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073890928 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075373812 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112394387 seconds)
    (221/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05244775 seconds)
    (222/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114121664 seconds)
    (223/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075567036 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128073401 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072689703 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071445444 seconds)
    (227/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071298995 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066034823 seconds)
    (229/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099801807 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051977063 seconds)
    (231/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052829225 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063859131 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063103163 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086777276 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051491017 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051191439 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055023685 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065127921 seconds)
    (239/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065449652 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131009062 seconds)
    (241/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061115384 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072260473 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.151718942 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137737548 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093201352 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05208414 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061748578 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17355874 seconds)
    (249/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052025373 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051071501 seconds)
    (251/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061780297 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065093368 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051176953 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088147036 seconds)
    (255/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066659196 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065703955 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064823458 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065955906 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064659573 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078574913 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064839033 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136453895 seconds)
    (263/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052218338 seconds)
    (264/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061495674 seconds)
    (265/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050901056 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07136614 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163110404 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072294766 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071236888 seconds)
    (270/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052171837 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053387278 seconds)
    (272/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06549497 seconds)
    (273/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061437562 seconds)
    (274/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072496369 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087148084 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050944542 seconds)
    (277/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050833799 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070798339 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088102305 seconds)
    (280/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06827347 seconds)
    (281/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052619832 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086751574 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072164836 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064104497 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065831219 seconds)
    (286/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065769087 seconds)
    (287/309) benchmarking ("sort", Float32, false)...
    done (took 0.126854857 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063855493 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072393907 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09392493 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06515893 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135030186 seconds)
    (293/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071873368 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070522626 seconds)
    (295/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072474274 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067118363 seconds)
    (297/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051677311 seconds)
    (298/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066337468 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12456985 seconds)
    (300/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06070589 seconds)
    (301/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052051032 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070395936 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065308471 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066655662 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051892578 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064881967 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070029817 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064423998 seconds)
    (309/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050670199 seconds)
  done (took 30.246966769 seconds)
done (took 31.629494197 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086075247 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091760219 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074377546 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091221154 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080390267 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07585507 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071709155 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077420839 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078637619 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080777366 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077441743 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054518704 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073313537 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073462933 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07400072 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090210385 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077333495 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072234311 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072271773 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064313588 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072737834 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065152003 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066610919 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054467324 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077841933 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071079838 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071883904 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073281324 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065138954 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065472594 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068288478 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07272621 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065030996 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07703938 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071452329 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072411037 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073773413 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075915493 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06734349 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065530288 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074192434 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066250292 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072354132 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073435905 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07129402 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070951377 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073326133 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077545719 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090769281 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067751454 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073789372 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075654886 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075805334 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071817159 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069466169 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072815961 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070629554 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090209886 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073002193 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067919478 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073372346 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073430382 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070453095 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072438779 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072687651 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07424833 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074789278 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070690257 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074188283 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070780471 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064875728 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072515244 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068418639 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065783048 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075116066 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076029634 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064513502 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070880689 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072036716 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070868241 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064776705 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067447295 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066831373 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070759587 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066988055 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054305053 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068684649 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07133817 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063953835 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072465964 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071047795 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072089437 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066560312 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074483537 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064305644 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069721045 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065309246 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065315519 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066356506 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068677179 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064698642 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067152016 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073719608 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06612718 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070799089 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078012954 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06465235 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071132277 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064161635 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06447107 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078516351 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073788426 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064804093 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067151204 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064260205 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072323772 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064450763 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065013812 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064899399 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064906304 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070104787 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064407187 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065977631 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070891158 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076106526 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064152981 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067383064 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066215127 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064098085 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069630741 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064276067 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.197625994 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067479508 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061946202 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067922729 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065270358 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072514716 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067657609 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073174118 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066958185 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07357692 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069960872 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07093055 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070471359 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06463227 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058403086 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067386931 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067579075 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067410842 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065750414 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066978992 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066109902 seconds)
done (took 12.352693399 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066837597 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143197643 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099184023 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094439837 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085627855 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066534364 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075900107 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101660624 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067512572 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102032949 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086771444 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08464433 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111656014 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064594615 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065366611 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069470638 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067042816 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081504046 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10097639 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085964801 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115650775 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064993324 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093925719 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089787254 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087087402 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091942507 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066213121 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069709833 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069354598 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100066247 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085960302 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069548349 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066149958 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099618455 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091739139 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082941154 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065934121 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081812234 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066166504 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066011346 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067245022 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097297087 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079656295 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08021543 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069553705 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068912654 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066985282 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08295704 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088395361 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077991969 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085892113 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102714766 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068568478 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065331073 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064336213 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08479307 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065196994 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068616349 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065762514 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06760537 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065646417 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068471527 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080509502 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081315782 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069867118 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079796884 seconds)
  done (took 6.738306677 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083654793 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089910244 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082475074 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083598572 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065648751 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066116521 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066243756 seconds)
  done (took 2.002987007 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06690177 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087962329 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088584129 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088490939 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084589963 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087309619 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075210576 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066459464 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080451575 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067057387 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086764062 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101585198 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066747196 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07238 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090238257 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066049223 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089598082 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066403384 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068863141 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089421067 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0682693 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081613519 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069402338 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066918568 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080379417 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066272193 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112834105 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07019805 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068168814 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069437814 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064050085 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106333732 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080030374 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074922468 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065848438 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079868942 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080334139 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064653649 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082167756 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071085741 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079820342 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066752285 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067258424 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064370595 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070708789 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.0764818 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067793617 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066965038 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06865109 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085740324 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067028684 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079775488 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069489288 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068932293 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067885772 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070140442 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075960426 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066943056 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085364887 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067531744 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082715024 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082525038 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079332313 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082355694 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068487071 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079436999 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079442772 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068486608 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067830846 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069233174 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082177281 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064508851 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067652177 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076572673 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067726431 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088774528 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089332132 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067485625 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075207023 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066849423 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066360836 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06633515 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088593747 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068353974 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06636736 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070388752 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069401294 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064619449 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064916382 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069564071 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06416568 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067579279 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068884411 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068822256 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06873021 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082400347 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069163853 seconds)
  done (took 8.692974156 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06917446 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067807621 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069503742 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067489746 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068246684 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067679109 seconds)
  done (took 1.901778336 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094558309 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069365835 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079874375 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072097107 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103901067 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085837426 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086831745 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078675363 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083416141 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078545824 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08616257 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087952924 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092226041 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072491422 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086132597 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072033719 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086740468 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075370958 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077934997 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072518958 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086447611 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072686298 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072869539 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081118648 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075084613 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071655875 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066977259 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078536021 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07834453 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078906387 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07223716 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075187883 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070393371 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077838893 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086331083 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070611794 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071541549 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076766007 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072217605 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075199333 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087835175 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073195101 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074064887 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076835439 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078211987 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070396446 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076876757 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075683758 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08610324 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076945615 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07677171 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07125807 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074807421 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077362106 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070542686 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078185361 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077055152 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08631987 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072433975 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070693012 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069195251 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075194773 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077592933 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075097283 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078842205 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076796227 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07010234 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072060456 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072619047 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071503283 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076555636 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068615251 seconds)
  done (took 7.038143609 seconds)
done (took 27.834643503 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545444084 seconds)
  done (took 2.002415729 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.598233228 seconds)
  done (took 2.080389273 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.612497243 seconds)
  done (took 8.089138107 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390177065 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.471366492 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.685127714 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130436279 seconds)
  done (took 3.195147705 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.681904192 seconds)
  done (took 2.164803986 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208197481 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195218629 seconds)
  done (took 1.897739326 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375667315 seconds)
  done (took 1.848781514 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.097389287 seconds)
  done (took 2.574144128 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262685649 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16281149 seconds)
  done (took 1.903084564 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456363575 seconds)
  done (took 1.931766079 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.849549502 seconds)
  done (took 6.33246237 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204606111 seconds)
  done (took 1.741172894 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238510144 seconds)
  done (took 1.719532063 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.677341684 seconds)
  done (took 3.158378838 seconds)
done (took 42.131041478 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080872405 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081120431 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081034243 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077906033 seconds)
  done (took 1.786939412 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077474587 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072584572 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076452254 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072601877 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076313098 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072971273 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073980221 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076227169 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071800927 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072594209 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072273428 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072704706 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075035855 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074140252 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070627866 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075216503 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075727538 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07227772 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075340149 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072553737 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071064132 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074397184 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075275674 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071641567 seconds)
  done (took 3.251628195 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078403674 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073193699 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074833631 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071828456 seconds)
  done (took 1.786816323 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078575082 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092513972 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089546008 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077355343 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091816914 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085891489 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069212808 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069205025 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072645346 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076732161 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067897879 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09623826 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087476569 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076962886 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081513708 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065682689 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068070922 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086622644 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077368384 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077595286 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069824122 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076972998 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067865896 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087837054 seconds)
  done (took 3.374213103 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078341805 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103382655 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077779436 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088123503 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090075356 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065354027 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074683722 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089155974 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122100167 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065296232 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069747542 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065307779 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07236635 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065113114 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076386591 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10482726 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107920639 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068078108 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095577143 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065577539 seconds)
  done (took 3.13724619 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073518887 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070381935 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065219316 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067970721 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07743452 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072183847 seconds)
  done (took 1.917639731 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068780328 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067571215 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067396635 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066933724 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072079055 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067530406 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066344289 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067467698 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067717486 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067072909 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066349076 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066199876 seconds)
  done (took 2.296839584 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.172017934 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068111834 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068853868 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066071094 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070610651 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068352231 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079851254 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067890227 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090662397 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066138545 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066371632 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068305459 seconds)
  done (took 2.44118931 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206971118 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076270985 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235892264 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137056413 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111794443 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11510385 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103763975 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113283699 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143702715 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101809898 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167653744 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165637474 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106823544 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137198086 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089143557 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097436416 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155602208 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162008378 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103166721 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165319985 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143621357 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124796835 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146812572 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10128298 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105397912 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121397746 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07063582 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079645701 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170527806 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131699045 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146833565 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111248916 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09357766 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176931377 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171342669 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142429003 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13439494 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083699849 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103160125 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132825083 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198312685 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088530168 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162562037 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24467041 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081304553 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135473192 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120704025 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120388328 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106307983 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090000298 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145549255 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18191384 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138846483 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087300647 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112300119 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114795173 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116177972 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103315843 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18128288 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161635773 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126954535 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071715172 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099568354 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15338553 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132041924 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108706142 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126457456 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093785639 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133186169 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153929703 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118123331 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144120435 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128723081 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088779648 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118862858 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139593944 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128540757 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170064707 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125223308 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073335156 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125420195 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103905514 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081639025 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141703917 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075315676 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174639491 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098496084 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106333932 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11320748 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109201199 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109302241 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16095111 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141150855 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243272875 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066630125 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105091272 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120586161 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147941679 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087653549 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10868989 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116774596 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078057162 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139822853 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075234415 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123974262 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075109019 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125808554 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132493057 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075872292 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123136236 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101029122 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100667525 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13334693 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161347442 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089470138 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082228997 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167735775 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121886255 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104956637 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144224751 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15543034 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.0992106 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103105668 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15048373 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179681705 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089558661 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163284323 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107872225 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083696438 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088193542 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124256932 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112831706 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122634742 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082133683 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119036814 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168580875 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075643161 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095308881 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133576316 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0788404 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080391791 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103030468 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100484802 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094611247 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100227475 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103733502 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139788995 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12219644 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102981348 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26786168 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099705109 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170701213 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088334885 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100581251 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104030991 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070744187 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135386108 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157709748 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079992656 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164324762 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124094381 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104865146 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119072562 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083258581 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139426016 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079022782 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070593559 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144597176 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111121258 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110167654 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151333938 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105068627 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126985649 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11929393 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134494191 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133292933 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128938183 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105520261 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088818531 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111506226 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125597538 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072847409 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09134984 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080362755 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104357575 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09568378 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083626514 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142656705 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124638125 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100642927 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111679538 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097148648 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147431509 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076810359 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129228313 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118808826 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094087433 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151129878 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151668487 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130935721 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098841976 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143913028 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069601795 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072906221 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.230448832 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124559103 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083073229 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083724009 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117430324 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147437775 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128835754 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138305462 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111805679 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121871421 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154702662 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070185918 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116446305 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14754896 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121632245 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104984659 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090168227 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098689303 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142490868 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108227633 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18247692 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113804941 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125639175 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15314129 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099866166 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079766186 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105635539 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137422564 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105061551 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144229816 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09948827 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08802268 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109645446 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074490142 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100156963 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12727126 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11951185 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13606545 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114510233 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133051831 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077132652 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117226467 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120986266 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12215643 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064014459 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119309681 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160733209 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093661044 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118093082 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152360622 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078856307 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123446897 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318057619 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147253316 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084683156 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109687463 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118722383 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128299185 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120352998 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140005861 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108131606 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133964008 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109300532 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086153953 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087451101 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097498811 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104906294 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094934434 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107912517 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11448185 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095436424 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131711128 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103824759 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109468474 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117655693 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096123897 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089851221 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097227537 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174871387 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11881543 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172094366 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098704363 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144688406 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164449646 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074796207 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078824656 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078177042 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139648457 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083906441 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130900029 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09791375 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10611871 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124247777 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141919437 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095410633 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068750548 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108721084 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137420095 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111977491 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098305884 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103633544 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161726953 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099808629 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078812716 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113136043 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104036666 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101388925 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312255496 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061840069 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09854804 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076373729 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081523858 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128540934 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156624678 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07995222 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102985054 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118902356 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110376821 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128274031 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10159283 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099586778 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114764832 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14940205 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129007794 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090150547 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112270959 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129323385 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15612425 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105830444 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095075707 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171663819 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167874247 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160459872 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088507264 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114108868 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114135883 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107725429 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139124384 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082822327 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163590969 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081791293 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136273314 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104043987 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0900822 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130142579 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099212305 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088486095 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148510242 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117973135 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083053256 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078102696 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117895351 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119587614 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105994911 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074805301 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138451516 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072827588 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131901313 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167393628 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080407685 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248125049 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097696186 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08042057 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108613429 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103527113 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089386523 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099091007 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172356206 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08906198 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150016716 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14175248 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113081614 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136823931 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099548422 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635727652 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077559781 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151261872 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115879094 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173430522 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097422146 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11783936 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10912989 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123318894 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144917982 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10508176 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177013592 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132330262 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116020497 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079759868 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10313879 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103935904 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088715324 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105329629 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113249506 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117809164 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093822685 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115711721 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123958212 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082063881 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095401932 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156364039 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117167652 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144631405 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140206577 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084414243 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117228487 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138141049 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079722618 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121697488 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151165918 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104550184 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239919887 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081641628 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103415812 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170830376 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073969785 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162084787 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118923397 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109293268 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114279026 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113952441 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130930173 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108351304 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121601724 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094510909 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11084395 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113980821 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081743339 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076964933 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104807538 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113479608 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097335258 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098606179 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097848503 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151950185 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071752826 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095456319 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10365421 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145274805 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174518893 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088602841 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082686085 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118156753 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112648013 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11328657 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120153612 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079500971 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082424669 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081854856 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077440645 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108185868 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112253461 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104615703 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111213419 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165040662 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082651547 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225629695 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095107326 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104533297 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069504107 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078863116 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095925743 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097330975 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10752605 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0997736 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16745981 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093935185 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089211404 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091701298 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07227465 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225205951 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129008358 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111111407 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118705856 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098237216 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062741515 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108511478 seconds)
  done (took 58.820439111 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109209604 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082717909 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097409087 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149985544 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122140787 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211949874 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157332622 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199624814 seconds)
  done (took 2.727731411 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069263024 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093393552 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100659554 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083574965 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066519142 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068741273 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223585237 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080845307 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066513551 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088290161 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079277254 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069383934 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.420022603 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.0662748 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067658354 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063303411 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067153756 seconds)
  done (took 3.359917591 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.365258123 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603623934 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372586308 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073495041 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.843645648 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089744795 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.044908689 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127412684 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073714683 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.523673982 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701883555 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125284535 seconds)
  done (took 18.542522595 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076278202 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070197014 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084547116 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084113546 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072694203 seconds)
  done (took 1.981683679 seconds)
done (took 106.970626837 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080485862 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391318138 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053793604 seconds)
  done (took 2.066120299 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083993314 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084669227 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085018043 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082961744 seconds)
  done (took 1.941756116 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07456498 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075566289 seconds)
  done (took 1.74431398 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223877301 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138346413 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086867401 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082809233 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078526738 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07938667 seconds)
  done (took 1.840058836 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072841643 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075395578 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072756301 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076094668 seconds)
  done (took 1.89033117 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076991197 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052378958 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054964331 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055772843 seconds)
  done (took 1.834278714 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086792115 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078488183 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077855276 seconds)
  done (took 1.838948484 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101373246 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085163362 seconds)
  done (took 1.782292405 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082222992 seconds)
  done (took 1.67857596 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099436585 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113491857 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128775622 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108893354 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135853891 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10846288 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085556672 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086721922 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077067563 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08681841 seconds)
  done (took 2.626867472 seconds)
done (took 21.367827039 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079068234 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36685282 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361729442 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089948566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668270122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356520506 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.965418422 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091608955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113590954 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067472124 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083809277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648074803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957670052 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.314678018 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.942840996 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318812641 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648581118 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068181052 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067825538 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067919155 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.953866752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067682479 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067854791 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068641426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647969753 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370729762 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068488024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.313375552 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067872683 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069748519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35606521 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067866007 seconds)
  done (took 15.982716033 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072034133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118168387 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073903562 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083545186 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070959206 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069351124 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071517626 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069221876 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11908478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067698755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084215304 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067723987 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071700205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068617824 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086952755 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067827616 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068584443 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068822564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0680148 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068505944 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086328303 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068083925 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06844803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068414043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067685001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079412574 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06804855 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068075206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068337094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070396371 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071434176 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068867985 seconds)
  done (took 3.999752488 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116192961 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125123842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074521896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102925486 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111507639 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069623234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14235354 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092235537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126647675 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068178643 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083999303 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067766658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100665688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06895349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087831853 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068608012 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069433367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068856939 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068433604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06856685 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08720504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06799311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068307887 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069094504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068228694 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08170868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068389466 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068123092 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068410961 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069933252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071347715 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069257244 seconds)
  done (took 4.258629643 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073621595 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075431708 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083039404 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083890811 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069663281 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071555815 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07247761 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069911256 seconds)
  done (took 2.212427333 seconds)
done (took 28.058540751 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079455664 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068739073 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071912175 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079994562 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072979541 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078962946 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067201327 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074383605 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071947838 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072697058 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074567485 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067598915 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070827907 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066955051 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073137622 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068142289 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078920445 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071589345 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078613592 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082621761 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069615327 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072798641 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073858227 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079294546 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078686171 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078910978 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.0771449 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072501786 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06909327 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070067213 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076681374 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083388403 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068429541 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078529565 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067666055 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067641309 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071158407 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067841101 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078861888 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076418062 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069576175 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076135783 seconds)
  done (took 4.683296109 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088361966 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090637608 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084026258 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061194667 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067103493 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064912042 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088470054 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059425411 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059362055 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087561404 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055909789 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05901935 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062227781 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053715145 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059011864 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056499944 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061604438 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055522633 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058847357 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059144605 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058142953 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054147511 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059804497 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062561046 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058483589 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061759522 seconds)
  done (took 3.308868325 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074879097 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.0839533 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088365583 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126420659 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103253274 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076324518 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077581133 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09276192 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085072627 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066827471 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07096482 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093493772 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087519983 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073744945 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067542898 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083964009 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08180438 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068646973 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073152268 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090705037 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083616446 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083284933 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091994231 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080167161 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067145987 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069410337 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070874895 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080957661 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072560925 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075767463 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070970042 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070665701 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069164091 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077984859 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070841741 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068771121 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090070701 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076644934 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077533617 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067916626 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070921955 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068213147 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088718894 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123622703 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067000476 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073763713 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075120667 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076836729 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067215176 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085623965 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078044201 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067157541 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07013033 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066276305 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067461071 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080023604 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069373045 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069478032 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07649581 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070218798 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085486183 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070812092 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082496061 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067198274 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074828812 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066821257 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06798123 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066463226 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092359299 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068855978 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108055137 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068232479 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068319679 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075919031 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074615583 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073194766 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067479611 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08220593 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077201088 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070782604 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075430744 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070357753 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069912059 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087162809 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069605172 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068844817 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068262318 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073395667 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069583557 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068838771 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08007295 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067269182 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070353294 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.0840104 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066976793 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068250136 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073120858 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071939681 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06692892 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078002122 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071890638 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067966555 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076167052 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067386496 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070297686 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077241029 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073355922 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066571001 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072027181 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072796485 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067781096 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068395484 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069860632 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068700461 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075314353 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072911291 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071216968 seconds)
  done (took 10.484723323 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161100453 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153232147 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070435805 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14404372 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075779225 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078733642 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14689567 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094154703 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067773335 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068209719 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068494693 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109102409 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105376077 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115178752 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078739371 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067902029 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083108142 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113379633 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149114579 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142824893 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083841847 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076661873 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069937214 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069105546 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070073516 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078533227 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08506645 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076598406 seconds)
  done (took 4.355918339 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081625626 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096202887 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07434654 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088551928 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089989066 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067901748 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069893527 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069336164 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080100957 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078555777 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067467744 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073788153 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073997757 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071324209 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068376171 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074567112 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07450183 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06925612 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070898502 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072481029 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077514341 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080324446 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072417048 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066835241 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074190995 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067034952 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064294142 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084578339 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068250827 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089720401 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065727278 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074412959 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080939051 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068357443 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067209681 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067174411 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067385521 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067349027 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069033159 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066449059 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066147981 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057941621 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06660096 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079381125 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073744896 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056196104 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071950296 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072542535 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072392105 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065246479 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070194644 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069890508 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070452306 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074714043 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072684133 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072270606 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068459125 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06570926 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075174485 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067481274 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064616502 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06599225 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071437815 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065533525 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074879209 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071742001 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065619163 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06685699 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068962439 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073142322 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067269409 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070206026 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065116313 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069421435 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071806128 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069139591 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06817939 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065858491 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067195903 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067037023 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05560765 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067153794 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053119915 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069961355 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06581699 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066136772 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067157788 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071868105 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079312571 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068627961 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073228531 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068230822 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066246046 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070637641 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060154214 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070003787 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082587592 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082237754 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067467075 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065614563 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081393755 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072008076 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066390341 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056314358 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074448645 seconds)
  done (took 9.077174374 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089970041 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070111774 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083386401 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090829958 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086268795 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074663252 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076484124 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069234193 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081927187 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073367943 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075949486 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068369799 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077038509 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076335098 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069924064 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076656406 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072416152 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082593951 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082185857 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068526939 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076008208 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079650945 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08878728 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080113425 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078234872 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079906943 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088864188 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07196444 seconds)
  done (took 3.852838802 seconds)
done (took 37.372358566 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.688266281 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.86730227 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.687904812 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.078845866 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.767819906 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.759762632 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.844375963 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.682031971 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.884067193 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.736225223 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.940464359 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.752372365 seconds)
done (took 64.31514106 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.710843202 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.834037801 seconds)
    (2/2) benchmarking "String"...
    done (took 1.957882986 seconds)
  done (took 5.416802434 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.986886092 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.230560387 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.929811549 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.682435566 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.687595982 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.986029494 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.493803237 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.216136673 seconds)
  done (took 29.852281335 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.84653771 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.920324464 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.414169831 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.423752667 seconds)
  done (took 15.286716791 seconds)
done (took 61.972790039 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.711575858 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.71485383 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.718798416 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.667834964 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.741678438 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.687041821 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.798115092 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.922864529 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.681084551 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.669975313 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.683016378 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.100980171 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.688504013 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.830504595 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.683077082 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.69008956 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.684077366 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.1085331 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.839071502 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.698464663 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.700419481 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.705132608 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.681247476 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.695813892 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.729214531 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.684672616 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.09257626 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.684026659 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.500145442 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.689546108 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.732163024 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.069420125 seconds)
  done (took 201.907658837 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.686442264 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.616486151 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.702731013 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.692210874 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.08338025 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.865557717 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.79818629 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.163307581 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.688686517 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.708746752 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.833028165 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.687200829 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.871308679 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.632365309 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.739985272 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.762019626 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.868050978 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.886315247 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.741706236 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.828456588 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.712216688 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.708360455 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.647495089 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.828296895 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.72924586 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.775089029 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.704763125 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.711845284 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.883784571 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.84208469 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.696322458 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.702271467 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.883711799 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.559641085 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.690722595 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.697069662 seconds)
  done (took 166.258007567 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.851905518 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.68909965 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.687126383 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.687793294 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.695563971 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.688379298 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.81642874 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.811741911 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.148146281 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.289637168 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.684962115 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.738025747 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.498066194 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.688435187 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.755539045 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.699353093 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.686607587 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.703071753 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.714713196 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.688797586 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.687690608 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815201901 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.70118766 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.754740668 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.694489312 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.689254443 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.693820641 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.059332568 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.685787967 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.687447305 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.69296888 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.505577224 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.940215125 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.687647902 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.688896068 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.689086325 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.585905303 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769663507 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.687167299 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.69520812 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.689882018 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.689974643 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.909792844 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.687921829 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.689765077 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.693148347 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.867224427 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.687716502 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.814655902 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.687254001 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.187633269 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.688179597 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.689830356 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.579598784 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.355274548 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.695457289 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.689096223 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.69300892 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.6915253 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.690614788 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.696974676 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.368366759 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.763594233 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.692137779 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.693651124 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.695901843 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.692066594 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.910520783 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.693079577 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.22343168 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.749772237 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.808681864 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811947064 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.692193619 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760879771 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784982469 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.68860217 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.696249307 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.69025892 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.693017498 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.774746798 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.691320508 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.812306401 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.698204023 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.694264073 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.742279616 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.762841971 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.690428786 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.58028153 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.692309477 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.691909913 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.008846017 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759962101 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.690650704 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.692422531 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.692445176 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.814948015 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.811396491 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.469695453 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.693656435 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.371564141 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.694091296 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.825945386 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.690586809 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.867773748 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.69372821 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.775990274 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.696158033 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.695102318 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.693017106 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.724913588 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.695740385 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.754296534 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.69119063 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.064496895 seconds)
  done (took 393.009006149 seconds)
done (took 764.714532355 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.372556861 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.325134679 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.441448468 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.354073368 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.341978489 seconds)
  done (took 13.468211952 seconds)
done (took 15.102466083 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.780128698 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.782699545 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.718571002 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.78301435 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.713912992 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.783162097 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.762764924 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.716519271 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.750636084 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.720135099 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.752105607 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.719043092 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.707326501 seconds)
  done (took 24.323959646 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.939439674 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.935309198 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.772216837 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.931176085 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.740867389 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.936548732 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.86506432 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.851587422 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.853916814 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.712461628 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.710370704 seconds)
  done (took 21.884341112 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.937529869 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.937530382 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.771130953 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.939367936 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.744662848 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.941578256 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.861502017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.8527369 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.849753756 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.71330175 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.709238218 seconds)
  done (took 21.894210516 seconds)
done (took 69.736521149 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.706237261 seconds)
  done (took 3.341404332 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.72590495 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.868181398 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.708731824 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.707358019 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.705016923 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.702598789 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.708461376 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.705644556 seconds)
  done (took 15.470316072 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.703924513 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.705829549 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.701575835 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.705336982 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.704293111 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.702169168 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.70158779 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.702230809 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.703130149 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.701527379 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.703951935 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.705110643 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.705080026 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.701590362 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.705155959 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.704619076 seconds)
  done (took 28.894234698 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.703956672 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.702772754 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.70134453 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.702661858 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.70319191 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.704518839 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.704811602 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.703194553 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.702577883 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.702440267 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.703415068 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.702745372 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.702891477 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.703834927 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.703637965 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.703767654 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.705354212 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.70302884 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.707218453 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.704636957 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.705546107 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.703775751 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.70669399 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.70515877 seconds)
  done (took 42.533038714 seconds)
done (took 91.874436043 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.602603436 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.352242701 seconds)
  done (took 8.593681086 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.711455259 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.706181169 seconds)
  done (took 5.10192363 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.707613101 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.707548517 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.70645973 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.708234423 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.706443484 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.707912634 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.70803056 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.706441735 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.70675547 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.705283862 seconds)
  done (took 18.71013874 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.707117389 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.706153936 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.704665542 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.707781793 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.708157798 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.704356726 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.706874976 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.706790309 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.707591208 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.705695109 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.707539368 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.706211109 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.707159029 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.706709296 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.707288404 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.705529074 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.705271542 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.704733046 seconds)
  done (took 32.356179973 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.708240025 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.70839925 seconds)
  done (took 5.056168355 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.707128813 seconds)
    (2/7) benchmarking "second"...
    done (took 1.704731552 seconds)
    (3/7) benchmarking "month"...
    done (took 1.705528843 seconds)
    (4/7) benchmarking "year"...
    done (took 1.706135148 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.706340174 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.706624542 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.704344185 seconds)
  done (took 13.581531745 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.709897206 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.882663184 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.961832546 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.394160186 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.710781739 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.713202905 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.654963193 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.712835439 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.712844348 seconds)
  done (took 19.093253149 seconds)
done (took 104.132027908 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.545073185 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.703739475 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.061035384 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.766493982 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.756426498 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.046079622 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.712116212 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.931367649 seconds)
done (took 42.163438665 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.715350833 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.267634109 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.298882477 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.243593963 seconds)
  done (took 12.450737772 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.689362897 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.236508313 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.746101401 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.311399326 seconds)
  done (took 19.650103492 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.072349454 seconds)
    (2/2) benchmarking "read"...
    done (took 2.070367507 seconds)
  done (took 5.790036791 seconds)
done (took 46.248184002 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711197439 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.70744155 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.709142403 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.707919497 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.71020119 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.707180431 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.708505366 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.709793119 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.710084098 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.71014405 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.709564449 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.711020106 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.711245075 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710724547 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.706929121 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.707682271 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710238136 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.709398646 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.70916109 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70712838 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.707414234 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.710529922 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.706859623 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.709585115 seconds)
  done (took 42.661327752 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.710889281 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.709552812 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.710623755 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.710660409 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.707707686 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.712168678 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.711095568 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.706979544 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.711149371 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.711386915 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.709046222 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.710387386 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.711854494 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.708699455 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710944791 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.708565716 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.712258235 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712761447 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712967488 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.709655761 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.712450218 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709612775 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.710045879 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.713215923 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.710814236 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.711637889 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.712199013 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.710736891 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715819493 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.70871012 seconds)
  done (took 52.970934824 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.716048987 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.720798946 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.712422016 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.713837822 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.712313054 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.714331803 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.713879515 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.713556076 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.712397957 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.715434785 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.713167035 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.712866938 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.712323274 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.713264605 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.713452554 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.717176206 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.714371894 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.712699186 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.713769424 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.714504945 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.713763383 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.716455183 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.713257439 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.713324836 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.714014563 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.712821079 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.714159255 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.714881986 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.714616858 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.714048444 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.714355675 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.714671037 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.715416686 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.714216226 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.715252286 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.714019053 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.720074775 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.722088188 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.712867742 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.714509384 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.715056027 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.714697165 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.714535351 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.715820641 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.715456524 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.71576151 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.716517635 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.715253392 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.714610042 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.715810625 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.71627409 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.714449069 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.715845991 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.715911183 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.716942678 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.716514417 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.718682564 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.716183694 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.717081114 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.717557874 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.716331449 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.716074273 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.715258257 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.715121351 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.716776934 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.716954598 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.716788269 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.718264205 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.716494173 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.718017139 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.717872769 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.716642139 seconds)
  done (took 125.149424138 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.718343855 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.714787954 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.713891661 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.712673083 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.713134107 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.715657196 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.714476447 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716022953 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713114123 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.716798983 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717114042 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.714798243 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716570628 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.71690422 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.717569779 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.714192604 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.717653394 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.713914939 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.718725174 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.716962577 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.718161565 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.716376246 seconds)
  done (took 39.39669274 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.717786653 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.720123648 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.715631456 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.71933117 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.715010777 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.716983089 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.718579511 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.715742523 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718442536 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716242403 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713802867 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718622015 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.71545038 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716661063 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.716067738 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.715893536 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.718091866 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.716177281 seconds)
  done (took 32.55385956 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.716801029 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.716728526 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.719353866 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.716232776 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.716590011 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.722193908 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716845345 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.719946714 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.718576942 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.716775452 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.720834858 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72083348 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.71992959 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716652661 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720439381 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.717368653 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.719147212 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717448958 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719933151 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.717935255 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.716732316 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.718901753 seconds)
  done (took 39.459756349 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719865523 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.720593479 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.717404485 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.715574894 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.716197457 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.720519445 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.72018202 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.718594201 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.720965173 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.720736849 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.717885132 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.721396343 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.717593346 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.720289372 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.717973219 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718257078 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.721237382 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.720608504 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721545943 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.718530953 seconds)
  done (took 36.040077765 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.722218091 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.720983247 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.721979489 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.720456374 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.720952659 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.71958334 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.720956553 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.72162161 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.722845268 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.723635214 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.723488889 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.723058359 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.721734066 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.722227494 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.722472414 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.7243965 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.722189644 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.722266616 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.72151376 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.722607869 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.722283332 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.72157281 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.722437374 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.722882266 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.722713722 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.722929339 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.721234731 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.722766569 seconds)
  done (took 49.873401455 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.723675462 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.721691593 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.719639869 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.721701221 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.721385601 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.720029644 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.71971877 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.720674983 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.723136149 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.720448443 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.723624915 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.722953093 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.722398008 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.723036095 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.721233603 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.723052167 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724130065 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.720143591 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.720784849 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721281514 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.723533349 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722548501 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.724202203 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.720684628 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719944934 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.723979061 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.720750372 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.721490102 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724480279 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.721249492 seconds)
  done (took 53.312541971 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.743292629 seconds)
    (2/2) benchmarking "in"...
    done (took 1.743295914 seconds)
  done (took 5.141368631 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.721265066 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.724061554 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.725312011 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.722473075 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.722062812 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.724414615 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.725277836 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.722095189 seconds)
  done (took 15.443025342 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.725948161 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.72523899 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.725234546 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.723580152 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.726950709 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.72521931 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.730025459 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.724897319 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.726336782 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.726856896 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.732547919 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.734083504 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.727416358 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.723721699 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.724738603 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.728780688 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.722901625 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.72681395 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.725584051 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.723277108 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.725515859 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725542942 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.726729378 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.722331262 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.727645766 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.735107552 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.727802743 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.723810861 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.726229874 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.7321029 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.726628029 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.723376573 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.728005978 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.726561943 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.727168444 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.728165732 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.732224834 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.727077377 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.732889108 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.727177154 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.727308684 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.723934651 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.729493675 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.726233612 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.726461016 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.727519793 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.727510385 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.723940297 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.72713806 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.729856844 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.732556642 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.728374603 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.726297273 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.732743366 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.728390686 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.732781391 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.729303992 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.730966168 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.738165582 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.738419124 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.740973857 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.737258378 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.729429152 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.731615769 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.737844734 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.75308818 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.735794725 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.72588383 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.726025178 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.72816585 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.737975815 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.741034753 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.73853712 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.729844549 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.730160555 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.727918468 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.729267882 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.729878746 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.734291264 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.731255508 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.729404249 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.729587681 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.738771337 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.753694912 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.726738115 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.729729346 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.728815697 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.730151292 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.729392935 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.739233382 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.730059846 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.729234079 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.730608512 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.728926737 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.731242334 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.732094701 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.728002097 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.730102631 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.726139773 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.730448443 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.731634341 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.732893062 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.739220136 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.730573156 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.730930518 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.734637685 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.729540962 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.731223798 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.734972118 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.729970998 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.731471236 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.731347291 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.737214356 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.726716286 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.733011397 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.740347835 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.731522817 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.731549424 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.731336251 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.729332807 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.741421896 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.759456979 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.730316534 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.732220499 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.73651919 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.745109539 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732256373 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.734241667 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.730685794 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.731821104 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.728169336 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.732338497 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.73227213 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.732488556 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.733009035 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733078952 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.728622761 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.733257321 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.734785578 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.735556942 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.73253367 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.734151556 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.733534987 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.735278149 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.733030032 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.733079982 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.737199176 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.732122536 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.734393787 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.731901223 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.730873512 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.732578542 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.735345255 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.73308394 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.733133088 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.734008172 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.734100041 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.733091538 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.732364427 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.734725113 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.734895092 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.735258469 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.738424256 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.734714082 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.736205892 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.731057553 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.731854968 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.733740277 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.734786928 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.734639856 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.733833976 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.731685145 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.737745707 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.743689798 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.735145272 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.734953648 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.738497325 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.73573985 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.73429161 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.73558116 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.737082351 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.743038751 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.734973318 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.743153461 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.736530454 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.736914844 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.734926033 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.735703848 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.7351354 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736469016 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.738818802 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.743626568 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.747927978 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.746132167 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.736631627 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.738725219 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.737830726 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.739248695 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.73923427 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.736300348 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.734330697 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.735046409 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.73469934 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.735380956 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.736216079 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.737315407 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.734100853 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.735768013 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.736042547 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.736540956 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.734804057 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.736167643 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.736014397 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.732215424 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.735821701 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.737694138 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.73591606 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.732932534 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.736033451 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.738448919 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.735446934 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.737190698 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.742715522 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.733692141 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.73800004 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.73596196 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.736082294 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.735193939 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.736874033 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.737732567 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.740520977 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.740261977 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.738323639 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.737037446 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.741936727 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.738016221 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.737366091 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.740888247 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.737027177 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.73518191 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.740729669 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.74642477 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.741513623 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.739810829 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.738711565 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.736058515 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.737658217 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.742837169 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.73554979 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.736970188 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.737735196 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.740044375 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.734778398 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.73826136 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.739714927 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.738001775 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.738888993 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.737527181 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.738511342 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.740217692 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.739058861 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.737511215 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.737830162 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.740858085 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.746050068 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.742251058 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.739421714 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.740535963 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.73822879 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.741804485 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.738621015 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.739485227 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.736949819 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.752538325 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.750485816 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746277866 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.741221978 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.739091232 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.744140653 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.741401955 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.742409178 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.740684264 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.739610893 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.738939886 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.738574231 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.73472519 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.741999837 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.738971265 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.741906535 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.740944998 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.743183724 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.739940363 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.738400957 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.739137701 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.740997767 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.739407115 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.738792386 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.741195811 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.744509182 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.742978848 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.739655064 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.741416042 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.746662629 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.741770627 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.741556649 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.741467177 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.742146311 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.741024883 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.743066597 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.741755734 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.74423761 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.750622424 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.744192085 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.750444852 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.744305699 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.750009593 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.742991318 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.745258953 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.751494937 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.738998016 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.741522753 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.740827606 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.744064897 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749000408 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.742649358 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.742916146 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.74515773 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742773338 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.742572207 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.740943389 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.744925699 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.743038845 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.742525313 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.750134943 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.743433493 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.747169087 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.744198766 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.738833446 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.742586598 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.742560249 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.741682314 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.74788633 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.742833092 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.743623561 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.743293807 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.744217649 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.743402272 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.743933582 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.743940246 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.742115383 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.741749302 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750991431 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.744193587 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749048297 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.742539585 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.751581929 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745528735 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750464645 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.746340779 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.744353636 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.744460164 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.743559513 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.745595896 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.744250119 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.744028603 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.74558489 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.74537508 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.749334759 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.745403189 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.746860178 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.744592693 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.743697487 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.744615083 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754221017 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.771884033 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.745630373 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.749785822 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.741660642 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.74710538 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.75179229 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.745656914 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.744315215 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.749056367 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.75563329 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.754052412 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.745867079 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.745170418 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.745143112 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.746287038 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.744306901 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.745041372 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.745298906 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.745314824 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.745890501 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.745646642 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749038218 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.744248303 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.745093027 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747509137 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.745507296 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.75549407 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.746383343 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.746637547 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.74629381 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.744521501 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.746150254 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.745808864 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.745917421 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747767479 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.746098009 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.749075957 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.753986298 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.755273791 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.749277957 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.746234723 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.746994721 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.748927025 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.747960812 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.747547048 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.748821899 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.748909019 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.748511615 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.747889586 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.748505505 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.746831454 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.746129778 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.749104397 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.747331275 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.750022628 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.754933027 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747273992 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.745302902 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.748381147 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.746990752 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.747814217 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.747381923 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.754610442 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.750471397 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.758724118 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.758345752 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.753245626 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.746496501 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.749920067 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.755285055 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.746754307 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.748949185 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.748553394 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.749083785 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.749762173 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.75072851 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.748162462 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.753097499 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.749292346 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.748154988 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.756286307 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.749867885 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74916577 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.749954687 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.752532922 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.748818151 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.745015888 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.749145858 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.748825879 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.755995724 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.751219077 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.75101848 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.751318735 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.747562118 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.751646116 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.753534958 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.747718435 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.750957538 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.745389956 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.750260265 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.749382874 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.749092553 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.747145641 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.749988788 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.749485149 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.752910757 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.757679768 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.746300371 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.752052018 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.750722363 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.749725768 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.750463885 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.749872024 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.746688096 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.748303568 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.750311569 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.751283158 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.751179517 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.752291887 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.749088707 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.751620307 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.75247519 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.750573564 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753718882 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.763020619 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.759188213 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.749245716 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.751847901 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.751776738 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.753839479 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.751690656 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.751661505 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.751035844 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.751925582 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.75100929 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.752545496 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.750961163 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.753900567 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.765795907 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.750200383 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750517954 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.751769377 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.752750183 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.750617295 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.748226157 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.752168304 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.752829935 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.754229169 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.761318373 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.752345854 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.758795004 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752781025 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.753925072 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.754839285 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.756462264 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.762018507 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.753751769 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751988706 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.753201978 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.757414718 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.769638787 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.752292006 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.762722216 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783264232 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.752042956 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.754309657 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.753253177 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.752776753 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.753820533 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.754901507 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.753719395 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.753128583 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752214147 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.754154584 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.755119165 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75832373 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.753300606 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.753646161 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.753523964 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.753590163 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.754407065 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.749724155 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.754980123 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.753512482 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.754620474 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.752789819 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.752522103 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.753232456 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.766543212 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.765634463 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.755254434 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.754730484 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.750993014 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.758439182 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.756109025 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.765157872 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.761759416 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.75535265 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.754986174 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.755169301 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.75521683 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.750291179 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.755904053 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.753529788 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.756150905 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.753248691 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.767460983 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.765788316 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.758144073 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.754787429 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754989179 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.756387604 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.756930494 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.756337042 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.756146856 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.757105889 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.757008036 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.760648487 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.755348537 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.756049591 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.758875784 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.762673922 seconds)
  done (took 1040.120771832 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.753687469 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752104742 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.75279736 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.751543765 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752710337 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752674066 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.752090639 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.754529139 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.753593502 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.752317186 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.753561636 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753276446 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.752434922 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.754018882 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.753379328 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.753506537 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753573885 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.752758638 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.75352119 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753499481 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.752580434 seconds)
  done (took 38.500422116 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.757063025 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.752847182 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.753497266 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.755668095 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753601059 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.755861076 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.753939655 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756615677 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.756935648 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753717589 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.757301509 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757199692 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.754304449 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.753667345 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754845934 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.757330845 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.758161152 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.755023316 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.75634619 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.754839216 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.756649832 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.754124354 seconds)
  done (took 40.307454243 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.7597968 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.757814355 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.758048852 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.755635661 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.757719941 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.755159998 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.758679231 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.75795035 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.758550569 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.759180346 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.756926785 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.760626127 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.765618858 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.764301116 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.759992654 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.757608456 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.901924135 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.759337729 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.757511539 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.757983938 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.754532405 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.763321158 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.756359979 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.755598188 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.758299966 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.759929071 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.75868654 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.758312004 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.758954855 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.761155539 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.764161182 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.758427425 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.759104615 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.761068968 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.759581945 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.760312171 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.762832019 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.759848561 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.755028664 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.758098926 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.770875866 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.782719125 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.76068609 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.764826361 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.758965004 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.760615905 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.762431131 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.768082468 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.757198215 seconds)
  done (took 88.080681472 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.759522518 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.760134275 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.757104224 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.759371995 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.760372269 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.759793548 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.759603336 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.760193702 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.756590385 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.757538891 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.760399415 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.758547587 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.756195723 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.761331462 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.76160409 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.759129776 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.757751432 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.758045847 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.759274958 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.758605815 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.758488631 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.76102283 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.760245215 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.759002396 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.760348854 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.758025101 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.757477918 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.760584075 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.758715724 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.757738237 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.761134774 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.760693765 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.760858156 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.759312328 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.758002004 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.761602527 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.762684645 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.759796742 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.760957481 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.758677486 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.76233799 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.761820357 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.763369045 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.762627077 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.760297221 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.759489275 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.759424675 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.75974831 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.76058619 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.763665769 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.761667517 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.76153335 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.763115072 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.761286444 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.763695637 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.762395716 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.75914153 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.760029597 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.764421416 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.762056061 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.758730303 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.763380393 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.761178001 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.764519427 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.764333423 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.761199131 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.760557074 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.76172521 seconds)
  done (took 121.397868895 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765206092 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.764192897 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764855705 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764558478 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.764347244 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.76424219 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.764903316 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.764022809 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.764568894 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.764926276 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.763831531 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.763197564 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.764248601 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.764227588 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.765669548 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.765016235 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.76534461 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.765029514 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.763892468 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764393993 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.763737267 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.764408245 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.764318383 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.766684034 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.765628726 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.764206688 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.764748805 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.76402923 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.765393425 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.764538623 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.765371294 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.765655764 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.766441189 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.765666158 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.766037298 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.765442678 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.766690377 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.766685988 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.766837156 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.766700784 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.768355942 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.767414531 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.765266733 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.766468554 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.766682133 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.766940341 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.766608325 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.767996958 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.767070852 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.767411173 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.766884436 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.767119356 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76646597 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768415522 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.768237983 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.766041207 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.766180023 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.767131745 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766845141 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.767410903 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.767727097 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.766685239 seconds)
  done (took 111.170200844 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768029087 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.766597142 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.765212468 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.763573317 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.767213496 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.765704981 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.765440363 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.766754509 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768082144 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.767805721 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767829969 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.763204087 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763492646 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767573811 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.765338812 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76443587 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765590272 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.764684209 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767040276 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.765704173 seconds)
  done (took 37.018015424 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.765995932 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.767886836 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.766233208 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.765700724 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.769662656 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.765014104 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.767988298 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769194693 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764998221 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769416697 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.768124824 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.768843867 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766632346 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.767602298 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.768428746 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.766983477 seconds)
  done (took 29.977215091 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.767584842 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.771444429 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.769254869 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.769177928 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.765945097 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.769076731 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.768393942 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.768274638 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.767673622 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.769211608 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.769774706 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.769728374 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.769754789 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.772495061 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.766923219 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.770586378 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.767248214 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.76779403 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.770833026 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.771368588 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.76948764 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.767554812 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.769421308 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.770542557 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.768102757 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.767852031 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.767316577 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.768259549 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.768770499 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.770282387 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.767934423 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.768717409 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.768793762 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.768213255 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.772602331 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.768014911 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.771102767 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.770515561 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.771057699 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.770455342 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.77055605 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.769758183 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.770795927 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.771554308 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.768254144 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.770000952 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.768636955 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.769153116 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.769311529 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.769131855 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.771102494 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.771956908 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.772283475 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.77084479 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.771608993 seconds)
  done (took 99.022917912 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771658706 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.773122084 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.771129805 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.772209472 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.773304405 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.769022818 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.771772878 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.769700448 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769245454 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.771831479 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.770813958 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.772792006 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771113431 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.771975086 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.770865696 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772183632 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.770131828 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.771279674 seconds)
  done (took 33.586634331 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.771142274 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.770987126 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.773694101 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.770355596 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.769944452 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.771865168 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770599559 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.773293928 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771728903 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.770526983 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76932853 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.77350574 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772999762 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.772641188 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.771538025 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770413939 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.773325123 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776979096 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.77114891 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770772956 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.773981523 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773310926 seconds)
  done (took 40.688685704 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.774419204 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.772837687 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.790127408 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.796733362 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.796608335 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.811585598 seconds)
  done (took 12.445288328 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773195866 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774944147 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.772150292 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774975276 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77404481 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771914531 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771704383 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771779895 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775312552 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77203585 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771895234 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775426528 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774597152 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771788286 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774910244 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776150951 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772725773 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770967726 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773152064 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775454695 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772355007 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775113419 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771992055 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771896827 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773085386 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77246473 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775366934 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772978841 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771828874 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775686792 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775220883 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773411969 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776419126 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774520545 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777331581 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776964172 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773404392 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774974703 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776411265 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77438247 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.776451758 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776226234 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775409148 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774626475 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775618403 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774585484 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773534066 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773152938 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774016933 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778184788 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776233378 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77222608 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778151482 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776868819 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776813837 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777393616 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773457663 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774543402 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776463884 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773803532 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774429046 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777417489 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774549677 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775573378 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777364417 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77468344 seconds)
  done (took 118.823119146 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774475122 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.775859707 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775782624 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77561643 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774472585 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775115139 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773861586 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774371577 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774411803 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775736531 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778577724 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774487477 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775892477 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776497403 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776043363 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77651708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775503072 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776068694 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775860141 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779248076 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775415711 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77631653 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776334723 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775995 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775599488 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777532753 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775466396 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776238756 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776769933 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777079042 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776965536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775633991 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77679679 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.776732972 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776178772 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775787763 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776834035 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776489345 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776548316 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779224493 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777194035 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77958617 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777199391 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777054397 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777743656 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77731986 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77776631 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776613572 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776637121 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776995866 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778632066 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777206926 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777219107 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778108399 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777079434 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778646573 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778191625 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777179693 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777788479 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782074812 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778638271 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780192059 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782341454 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778450264 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778284733 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778080165 seconds)
  done (took 118.988609052 seconds)
done (took 2423.771306254 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.775270116 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.764228971 seconds)
  done (took 15.249885692 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.942943194 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.895162727 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.778724519 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.808117517 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.778734624 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.79696473 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.795474068 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.778093443 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.779353005 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.779606576 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.780843676 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.965841127 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.800139275 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.7782123 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.780494108 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.876245209 seconds)
  done (took 50.831645565 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.784104961 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.785166734 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.795358164 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.78655156 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.783037403 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.796760147 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.81534707 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.786668205 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.817779067 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.795944501 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.853726352 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.794270666 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.784667654 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.833419168 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.795431283 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.799065502 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.869336361 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.859567491 seconds)
  done (took 34.248059616 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.863260609 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.789456142 seconds)
  done (took 10.372430448 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.785183512 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.796822467 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.78787129 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.789914452 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.792921119 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.803790813 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.794939124 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.799254246 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.784148274 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.801225515 seconds)
  done (took 69.653847881 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.790942024 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.785535608 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.784478637 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.783039965 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.778309293 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.780925849 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.785435275 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.784684197 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.464791813 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.819656208 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.789342899 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.789180315 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.784117878 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.786573053 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.782227313 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.80857763 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.897887905 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.781213772 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.782213464 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.791263286 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.784159347 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.854374286 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.79791875 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.785639665 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.815300208 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.46956693 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.791930744 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.792619739 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.919860677 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.783299283 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.785570543 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.78703732 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.788321068 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.175462834 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.08922405 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.783876242 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.794188829 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.794068527 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.783224042 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.923154417 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.785984932 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.791128881 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.780324003 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.068787673 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.880515186 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.826534052 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.122555058 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.78803533 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.787856891 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.819312509 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.789962123 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.788948814 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.79947568 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.307851516 seconds)
  done (took 128.106389165 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.782586661 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.083012426 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934998597 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.781656027 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054367524 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984707702 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.72320133 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.832207153 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.782028364 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983702422 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.002655086 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.891753856 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.782066823 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.783120255 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.781088926 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.778906242 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.944465241 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.850181247 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.784642482 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.780065319 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81055448 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991121279 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.904757631 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.785359695 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.804440204 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.995167215 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.903705797 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.889114971 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.235111617 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.781024995 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.849304682 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.781400183 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.784147406 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.78029058 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.939753935 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.882462624 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.871456073 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.782550262 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.782214392 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.780866538 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.447847123 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.981763089 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.880457145 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.926717941 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.935122511 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.986735593 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.431863629 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.782414573 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.423853307 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.949767242 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.998806782 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.990692775 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.908267162 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.784972424 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.138366951 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.782116685 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.783955511 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.019073903 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927709227 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.886284542 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.784857193 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.782685315 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.781112023 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.027765477 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.785871685 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.879598659 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.783982107 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.783293174 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.883087557 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.889640573 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.924976101 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998472222 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.818418214 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.508291662 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.003633262 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.999792597 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.853564287 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021920652 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.785803936 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.782744437 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.871983353 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.540347792 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.987438287 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.033995022 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.006622455 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819212076 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.380804993 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.784180023 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.97921144 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.969313826 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.980518201 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.933124785 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.94020063 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.104925139 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.784181596 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.784691725 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.007890285 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.922685297 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.788373194 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.146768206 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021515598 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.420078151 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.809262349 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.085366344 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.921186247 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.105153595 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.412448464 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.787602255 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.955258968 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.825167653 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.787620015 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.788257987 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.977866856 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.590449301 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.787610685 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.574135364 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.849870263 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.789561729 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988424981 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.786424487 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99433006 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.789322933 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024389733 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.229598697 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.820925581 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.011086198 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.93440927 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.578010563 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.035041952 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.032114179 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.90608046 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.080645696 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.515510878 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.788569859 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064023951 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.789017863 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.786674358 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.954496221 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.787842679 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.93642585 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.791298079 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.018575949 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81328742 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946364985 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.792088418 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.023066077 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.82466062 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.839208166 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.789743454 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.911714664 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.78895746 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.671676379 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.945004627 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.79096904 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.788878877 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.408354383 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.787589777 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.935951614 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.020566365 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814331404 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.861156191 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.316605018 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.789376055 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875974374 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.816051298 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.201883979 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.789848286 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.00628682 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.740718169 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.237425959 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.789240738 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.031410238 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.041318527 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.790475425 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.78931525 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.53378795 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.474924497 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.789388332 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.949986884 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.288985631 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.44492459 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.994817591 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.793516238 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.919637929 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.795301567 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.868908047 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.139640019 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.788941012 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.787212171 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.792388049 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.789592993 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.790713242 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.049553437 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.823552827 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.288493044 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.927307494 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008088825 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.100119776 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.013236655 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.836479045 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.795434605 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.05201389 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.792261651 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.858087858 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.791587235 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815588466 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025622651 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.793822157 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.029560587 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.046640496 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.693846441 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843516408 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.795354816 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.792350855 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.790616408 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.942188761 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885889022 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.791868823 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.792740568 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.904741869 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.916547359 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986963581 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.384273713 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.876730218 seconds)
  done (took 880.688312923 seconds)
done (took 1190.85997742 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.794761717 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.790693501 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.780091281 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.794371871 seconds)
  done (took 28.887966853 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.803502392 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.799579716 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.802786465 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.800742293 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.802794854 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.799982663 seconds)
  done (took 12.538896456 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.858893039 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.792579377 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.792783858 seconds)
  done (took 21.173564035 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.869531971 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.205880618 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.904492508 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.242426099 seconds)
  done (took 9.952857684 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.801591004 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.802602145 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.803080386 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.804028333 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.804361873 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.806740921 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.804852869 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.803856204 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.804014437 seconds)
  done (took 17.967124807 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.203915444 seconds)
done (took 96.45053494 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.905028725 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.79723812 seconds)
    (3/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.171114262 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.77985303 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.52561506 seconds)
    (6/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.204668191 seconds)
    (7/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.801287922 seconds)
    (8/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.996166325 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.93408406 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.395880547 seconds)
    (11/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.082153203 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.798240971 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.838814389 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.974888331 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.053992509 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.689332653 seconds)
    (17/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.831961704 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.823275672 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.018216975 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.978159412 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.981645841 seconds)
    (22/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.796552148 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.978336383 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.042765371 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.167083561 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.710180149 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.456140365 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.867918868 seconds)
    (29/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.169464728 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.826860428 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.783983908 seconds)
    (32/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.591777126 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.585675538 seconds)
    (34/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.890987228 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.156429839 seconds)
    (36/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.881511694 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.784605153 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.919229031 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.997245495 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.174501329 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.969002181 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.149322432 seconds)
    (43/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.802538293 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.775856861 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.820652241 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.824662729 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.906894445 seconds)
    (48/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.954484914 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.866366388 seconds)
    (50/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.88325752 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.492683765 seconds)
    (52/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.841238361 seconds)
    (53/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.965134699 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.592008112 seconds)
    (55/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.319182723 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.871498679 seconds)
    (57/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.884723451 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.154323195 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.892466699 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.907381995 seconds)
    (61/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.90702042 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.054338584 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.997739663 seconds)
    (64/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.139908414 seconds)
    (65/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.931562803 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.098899714 seconds)
    (67/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.864516635 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.176403905 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.877253674 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.855941135 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.801144561 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.762811372 seconds)
    (73/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.807459031 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.828929001 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.945313931 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.885203423 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.028148765 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.786786967 seconds)
    (79/309) benchmarking ("sort", BigInt, false)...
    done (took 6.831863144 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.325717513 seconds)
    (81/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.006130589 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.807268394 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.101695744 seconds)
    (84/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.7663659 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.144231869 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.092282522 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.513226664 seconds)
    (88/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.709808927 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.890993675 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.152097161 seconds)
    (91/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.003669349 seconds)
    (92/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.934312283 seconds)
    (93/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.804194256 seconds)
    (94/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.982862125 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.015047527 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.792581263 seconds)
    (97/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.87262676 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.781752422 seconds)
    (99/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.852403114 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.801884585 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.909888054 seconds)
    (102/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.077621592 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.861130075 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.102441801 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.100044274 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 5.626139269 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.104006331 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.32922311 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.88492061 seconds)
    (110/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.900613455 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.18094657 seconds)
    (112/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.942156551 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.787731727 seconds)
    (114/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.910051435 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.00610286 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.988609394 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.935600958 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.929849196 seconds)
    (119/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.892532006 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.802977111 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.871379292 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.34678278 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.796980052 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.818876397 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.042094879 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.212720271 seconds)
    (127/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.788653844 seconds)
    (128/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.444592147 seconds)
    (129/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.905073561 seconds)
    (130/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.891069091 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.001389469 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.482457251 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.263137233 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.826735751 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.105007612 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.711787676 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.919740873 seconds)
    (138/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.317130284 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.067380743 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.904685712 seconds)
    (141/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.806099304 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.023118075 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.04773437 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.020966051 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.066930114 seconds)
    (146/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.935889813 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.684846929 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.04760236 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.911927644 seconds)
    (150/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.973970222 seconds)
    (151/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.797358815 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.867751632 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.025446917 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.832998304 seconds)
    (155/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.830086757 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.803993522 seconds)
    (157/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.425410253 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.641992577 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.942441202 seconds)
    (160/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.134160052 seconds)
    (161/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.317309532 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.115926472 seconds)
    (163/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.952227057 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.829038876 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.099493255 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.812418566 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.495767718 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.806259674 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.512484149 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.828934964 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.792484657 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.045010988 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.830735141 seconds)
    (174/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.83021536 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.205332398 seconds)
    (176/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.961220017 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.876409812 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.789236653 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.67247291 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.20964205 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.7075908 seconds)
    (182/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.245032619 seconds)
    (183/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.946837497 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.508866601 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.889208547 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.806090852 seconds)
    (187/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.06646532 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.198984477 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.901480665 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.833360373 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.805855947 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.469251385 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.805626483 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.852647361 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.967941879 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.455914199 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.14494076 seconds)
    (198/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.319673725 seconds)
    (199/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.921953083 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.934318922 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.815579655 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 4.774617476 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.887387611 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.241601886 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.741166738 seconds)
    (206/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.853512726 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.061097573 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.895664394 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.86280446 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.18212932 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.806565153 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.378067266 seconds)
    (213/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.887685194 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.100594973 seconds)
    (215/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.674129616 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.830233607 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.01485472 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.605331428 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.219041713 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.020137568 seconds)
    (221/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.809049625 seconds)
    (222/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.336325958 seconds)
    (223/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.817115158 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.927013273 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.817253392 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.830550456 seconds)
    (227/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.83360657 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.808240596 seconds)
    (229/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.02450822 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.157842366 seconds)
    (231/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.502369872 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.84890509 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.046941662 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.06992989 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.140697671 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.413367285 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.793303161 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.409103229 seconds)
    (239/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.809872554 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.762338926 seconds)
    (241/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.321332164 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.836456718 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.907835582 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.808971908 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.861822672 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.991664929 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.098512027 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.808097101 seconds)
    (249/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.027202371 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.180067079 seconds)
    (251/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.112048595 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.13766635 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.085731548 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.854791756 seconds)
    (255/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.168064868 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.86188548 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.004454587 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.8146193 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.652602859 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.38089553 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.820468051 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.861093992 seconds)
    (263/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.230836189 seconds)
    (264/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.105927146 seconds)
    (265/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.186559734 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.834110475 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.772662012 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.199133193 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.079996116 seconds)
    (270/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.191486977 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.874128632 seconds)
    (272/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.487018768 seconds)
    (273/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.139697262 seconds)
    (274/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.842701734 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.813183934 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.952936564 seconds)
    (277/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.123143332 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.825401099 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.459047747 seconds)
    (280/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.592153909 seconds)
    (281/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.549679211 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.798002296 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.907251553 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.895010222 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.19689631 seconds)
    (286/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.813810675 seconds)
    (287/309) benchmarking ("sort", Float32, false)...
    done (took 5.591845453 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.936130694 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.551447995 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.797735748 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.202972948 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.814613004 seconds)
    (293/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.840648639 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.855195972 seconds)
    (295/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.820974522 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.959226613 seconds)
    (297/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.954311417 seconds)
    (298/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.898343874 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.918808514 seconds)
    (300/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.013342539 seconds)
    (301/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.055719161 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.839200673 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.135255311 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.813465826 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.362392944 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.114621646 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.006319218 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.958109534 seconds)
    (309/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.011005192 seconds)
  done (took 996.435756891 seconds)
done (took 998.240442272 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.849172096 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.839545031 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.824543029 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.846160564 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.937750176 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.858652536 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.836743331 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.826573862 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.873280371 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.874463264 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.824256628 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.857380799 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.828171886 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.826435166 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.825655647 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.840049306 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.134822019 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.850600727 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.843506369 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.834592689 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.843696645 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.824585556 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.875109519 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.856964235 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.830717223 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.829217177 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.829585558 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.846721828 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.937191433 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.831437104 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.830001607 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.838078753 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.13596064 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.85179433 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.82417704 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.847750225 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.839632665 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.834974891 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.832208159 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.858087644 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.275268787 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.832783284 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.829483708 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.828359024 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.827515049 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.832063139 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.829196292 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.832859386 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.8399827 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.841584325 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.278294029 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.848761249 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.831300326 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.828505766 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.838802827 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.82734489 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.830694305 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.84231945 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.846493123 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.844061657 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.125140451 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.855725851 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.828922766 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.843630532 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.833573166 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.31449627 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.830087088 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.832158435 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.272827534 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.839468408 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.316154668 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.842673972 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.829603463 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.843574985 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.860371359 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.138096679 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.848615025 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.827609631 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.837707488 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.828385665 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.838410148 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.843043247 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.834581741 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.830371817 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.842093347 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.861019918 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.840002885 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.830093891 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.837962488 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.848811031 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.837325467 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.84087774 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.833424482 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.824795639 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.839416916 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.831967551 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.83242868 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.832139319 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.834547658 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.840643102 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.274347348 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851317617 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.825892391 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.827844132 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.828789178 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.844602257 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.273453072 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.836214582 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.852127563 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.880105708 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.831009962 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.127943596 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.857891419 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.845685945 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.838406663 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.834423267 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.825214241 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.13091095 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.305661355 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.851752124 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.834285949 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.829996366 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.847405219 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.831852728 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.828037381 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.140339454 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.855408101 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.845533478 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.952875279 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.843736923 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.864699383 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.830071433 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.834767895 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.859521392 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848657215 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.863346407 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.835246285 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.847599346 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.848561446 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.828233641 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.844070507 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.842244035 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.834344216 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.837369675 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.827276161 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.860702134 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.845050021 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846128028 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.85382637 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.953480097 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.829684066 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.128909653 seconds)
done (took 287.79487929 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.898664813 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.82378696 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.92714493 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.828369848 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.913047217 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.91335876 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.825526962 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.826557032 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.824884052 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.207829986 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.825719327 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.827187017 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.821524562 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.830419703 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.913594398 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.829303629 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.825572392 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.17191964 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.831080763 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.898918492 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.8312243 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.826792644 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.828744819 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.212071609 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.825323603 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.824015582 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.902520595 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.826734171 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.173320502 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.819754082 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.817046631 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.171093001 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.912336392 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.838740376 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.830756907 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.828025535 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.910616741 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.821716906 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.899947462 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.900708618 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.917856014 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.858890353 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.821674346 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.809131169 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.816717012 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.815617489 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.811703471 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.844975543 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.804856644 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.811171678 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.158534277 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.820945944 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.808909009 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.808942422 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.809359561 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.844272879 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.807894211 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.810041409 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.903711448 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.811698757 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.872647234 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.192332508 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.190458124 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.808268359 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.8037591 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.804530055 seconds)
  done (took 181.091736566 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.876116071 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.880633921 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.874040755 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.809446795 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.296767289 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.880509499 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.808372902 seconds)
  done (took 15.162110821 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.812948958 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.805298887 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.855040578 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.85530215 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.807027138 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.954468648 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.803621011 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.815594528 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.801004279 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.858165546 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.806210302 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.803571795 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.810771062 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.797002742 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.853461099 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.815680668 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.919482951 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.806985558 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.806908198 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.955779701 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.801986693 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.810560236 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.860280746 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.816435761 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.805322908 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.810666272 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.389841427 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.806957547 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.801709725 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.804468571 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.802369547 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.849312232 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.804506335 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.800546564 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.802872019 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.922371415 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.804747542 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.803091387 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.804159567 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.805634797 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.805564883 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.805569504 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.804812269 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.8024396 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.802915979 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.82999291 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.806048193 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.805358929 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.804011507 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.805340204 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.856316356 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.805804241 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.803879453 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.803470145 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.861940347 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.81399636 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.80688711 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.804222886 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.80563563 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.803842568 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.958511896 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.854266234 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.805431268 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.854220535 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.806873721 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.806113679 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.805830404 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.805351757 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.8608327 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.806700926 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.854945344 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.803700371 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.966770923 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.831846552 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.807024349 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.810744405 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.811384617 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.808642399 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.805460718 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.814827204 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.804297623 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.810019323 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.813666255 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.805574278 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.803381028 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.919567469 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.918391478 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.803302878 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.819264584 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.812996219 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.803424763 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.860460298 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.80569856 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.80384758 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.857570335 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.921721374 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.862520595 seconds)
  done (took 199.53421486 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.810910341 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.814082159 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.808295916 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.822206236 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.806962129 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.803833115 seconds)
  done (took 12.600531659 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.807827718 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.80572405 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.803151335 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.805397123 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.803586418 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.803876367 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.803565059 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.804816485 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.808360993 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.806149807 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.800782099 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.802148708 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.800838585 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.802854209 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.802975427 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.800378019 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.799227706 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.796711679 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.797281102 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.799871433 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.95357036 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.796307444 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.796584867 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.796508904 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.801366332 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.798986268 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.799578491 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.791769435 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.79285257 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.797514395 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.797284921 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.794641579 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.793287532 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.798255819 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.797828375 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.792967061 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.795239997 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.794483379 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.790021594 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.794487062 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.791208039 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.791920769 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.790396345 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.792350115 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.793231763 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.798325535 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.798975231 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.800785559 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.792932729 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.796421449 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.79277176 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.791898649 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.795082682 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.794846423 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.791423541 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.797175154 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.798857065 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.794328861 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.793618026 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.794581121 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.795777376 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.793384151 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.794860382 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.798310784 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.793058049 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.792893144 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.791837217 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.800780559 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.794716187 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.793831595 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.793776838 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.789098691 seconds)
  done (took 132.287710443 seconds)
done (took 542.448176272 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.029577308 seconds)
  done (took 8.749582341 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.864996038 seconds)
  done (took 8.715714983 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.395409055 seconds)
  done (took 10.146035735 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.835724822 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.830753311 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.826174023 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.818539789 seconds)
  done (took 29.072609621 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.9334233 seconds)
  done (took 8.684551136 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.828202168 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.813990646 seconds)
  done (took 15.432435589 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.870989376 seconds)
  done (took 8.621051474 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.309732737 seconds)
  done (took 9.064256466 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.84126834 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.842404012 seconds)
  done (took 15.452617591 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.79918352 seconds)
  done (took 8.547734963 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.522220042 seconds)
  done (took 11.284713667 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.822654384 seconds)
  done (took 8.58539388 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.86121585 seconds)
  done (took 8.608014168 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.023171831 seconds)
  done (took 9.766993375 seconds)
done (took 162.45129121 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.808629009 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.808966577 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.803864665 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.810154932 seconds)
  done (took 28.972333892 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.848123849 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.847776877 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.850951072 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.859713226 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.850260199 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.850373307 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.841877981 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.842351476 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.859186151 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.850227604 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.85128443 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.851526232 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.848686657 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.843529878 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.851034147 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.852207407 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.860808616 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.850967085 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.83984861 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.853219376 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.816563477 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.859532659 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.853319508 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.817813568 seconds)
  done (took 46.096226874 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.012661339 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.886131034 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.969459125 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.868352965 seconds)
  done (took 9.484857138 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.866948673 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.870232915 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.880864103 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.920839675 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.952851954 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.879796296 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.843955037 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.838521495 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.824125666 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.870218375 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.946047373 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.88719614 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.953943589 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.817429076 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.005943185 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.818585881 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.816970541 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.867754213 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.92189426 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.93669899 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.817059648 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.868972085 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.872601532 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.883971396 seconds)
  done (took 46.909717487 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.817192585 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.826140503 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.822796476 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.819447768 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.814085477 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.816708004 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.821675581 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.815462 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.838540323 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.817768548 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.81654566 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.817359639 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.81386257 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.816994665 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.817247069 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.83031501 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.828518683 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.816267689 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.820086061 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.821802364 seconds)
  done (took 38.15698438 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.809665924 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.757380929 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.163797163 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.066233764 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.81138032 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.811972363 seconds)
  done (took 32.166644538 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.830221391 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.823798408 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.815981235 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.87504989 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.957087571 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.825504392 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.819123074 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.826725339 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.863996973 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.882333384 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.834394831 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.845226537 seconds)
  done (took 23.947243237 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.81173385 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.814249043 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.81334641 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.832001127 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.827454506 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.82949437 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.825433561 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.812867919 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.830774723 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.837561455 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.826269019 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.829625813 seconds)
  done (took 43.642525352 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900591574 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.857096082 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.873205416 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502859646 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.191861566 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024895743 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.41253279 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155250848 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.815997487 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085586199 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994911245 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921816425 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070694172 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.309355507 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.847320424 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.28688674 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117416127 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036889346 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847261551 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.542003125 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896558153 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.013043213 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.636402101 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.889487364 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041544761 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.964015265 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.093707607 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.830259941 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968342213 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868819843 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840358632 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.829778177 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105945402 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216136034 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93539233 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839973353 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.448669931 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.546977544 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.813205049 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.620492088 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.625942566 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.967919238 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843418892 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831594075 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766851385 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.988221193 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228062098 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.840260907 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.5458185 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.834386495 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846128191 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928359359 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.838655447 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.650612705 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754585261 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.83540914 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.83271034 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842676551 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404055761 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.999553335 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.032930983 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.81027181 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.92704373 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.652363966 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229478453 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.986506482 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.83743959 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.838219137 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766364048 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.627246457 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889812574 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.161397651 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.852086706 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481769432 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143885814 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.080599434 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.772491963 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116798649 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.36330024 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.80598084 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060515491 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832450277 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767990188 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.778699555 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.76505425 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114641548 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873917706 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.595331565 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876640832 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.173194857 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.842262629 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851555412 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856495725 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057479217 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.718543018 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834586811 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.797646585 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979886667 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852494658 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18966698 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765719985 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.835396234 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090946278 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.043171567 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.906091712 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.337695926 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999506729 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404044563 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.88654505 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.981410072 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.882294614 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.107903304 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89661866 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.99204165 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897307033 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.838379461 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151347448 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.437995468 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.977628785 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.035832112 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966130595 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.17621542 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869027486 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922693163 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.844580745 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.83809244 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.648448769 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394779055 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.842655273 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.842627154 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.920436131 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.890432185 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.844603306 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791528529 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.472317885 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.051114879 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.855241087 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.066106361 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.411944941 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15415142 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774039467 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.173490651 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.93387391 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.062963417 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.493637735 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.925397776 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101844393 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920210921 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.960159791 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888652752 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861301073 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938885481 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86527788 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.990402618 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136554215 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.844383129 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.846610836 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.675255521 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.881204226 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850940615 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.848293751 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.596417902 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122756377 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.873997138 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.856653426 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.734061337 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.861592171 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910961088 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851952622 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.856024717 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.383764152 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.559778791 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.852490599 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.431764612 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073481374 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857016915 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.667754692 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964937226 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.93786312 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126544386 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913703827 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.784936798 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.560415823 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.54205926 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848015554 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.782600779 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.851289641 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856766049 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86021304 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.046527332 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130543541 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893907141 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.582158643 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.898373954 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861887299 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.858064394 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851332975 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.361254106 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.01920967 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.042162025 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900003899 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993442943 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.867983015 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.785842588 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.853513349 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8546868 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.850409611 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.852676153 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881849361 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.587953689 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250334081 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116230262 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.464057851 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864818105 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.693452841 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.916408851 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.850795764 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.812245645 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.024605972 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.994327517 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865712264 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.866170472 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.59520701 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.554424731 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.419984551 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170229376 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168895204 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304920157 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.076476711 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887127951 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.199848307 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789691766 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.409880238 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913528566 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204123115 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799138811 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943034354 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.506260004 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205614959 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869307728 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086096165 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244625087 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.747168439 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008040952 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063903099 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893345777 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.018604307 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819569307 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.142468554 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996355207 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.616972626 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071725156 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196323795 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.670105905 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.994670314 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.856633278 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.577216714 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949611944 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.572975072 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.029058818 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.030909872 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.956340975 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343234539 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.864799209 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082010232 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213003767 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.0158899 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.984001228 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790941854 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.868006797 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.865196808 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.854772522 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.854823615 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.719321393 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.110965022 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868842654 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790678958 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.981890726 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158601144 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.762847051 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.861227641 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858486323 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168564623 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406147904 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034107403 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.966095147 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.380951496 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857921153 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.783198161 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784862812 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.542316949 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860512026 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.82371287 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066884349 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.95821711 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764284229 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.935784843 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.102334047 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.108736057 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.863461268 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.129058729 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131299107 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.550309781 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876505007 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.953695932 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.666038963 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.971816554 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.854975386 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.089995115 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.607443932 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.078516344 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.927969657 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.820788215 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.850412485 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065840826 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853601039 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.912899699 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098906989 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.57692507 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.000233769 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174493847 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939579676 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.930528 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91542467 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.951385439 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869351783 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940600225 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872416038 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.870696613 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.87213218 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911886321 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.928586829 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.993331581 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.873399936 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954359082 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.032361642 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.388487307 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.865885134 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142812106 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228951423 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192011585 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923794258 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.862874023 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860859365 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798284915 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011270926 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.087918896 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133585642 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.992618888 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.9758091 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884656893 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674521817 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.080242604 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102845182 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135563363 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.754345946 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.366036107 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.900924503 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.858137133 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871198588 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.070190721 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080191203 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174544331 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.011456249 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.94088673 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.24629588 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133947846 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.860153995 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861697433 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.452017831 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.007738074 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.578609573 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.910080339 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.924901858 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148629829 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870875452 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257765643 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.885647074 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.019764824 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.636615464 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.662097538 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155877092 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.856658389 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.928335047 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142455576 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257870461 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181813118 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929147653 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87318954 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.964336646 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009788636 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.723873372 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.863752027 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.862754816 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912127018 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.574164331 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.874138951 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143283506 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176971602 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.861688603 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.723114493 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890306447 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.872517776 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085663284 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143387596 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1224085 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873134927 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.869906349 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.685756444 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148464235 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928292058 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797526487 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.86740763 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965920453 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113470279 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886042441 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.317333086 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.576645893 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146597326 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.868050796 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886876626 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.023166614 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.237703843 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195959953 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.410956605 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08916168 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.456700731 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.445383641 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168541619 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.87140739 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.017402677 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170299366 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.870270156 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.949718454 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906701395 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.14060156 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18466647 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.868858974 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734804349 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.841881749 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.206378653 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420696934 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80450802 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874471063 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.924671773 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865405712 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.997947703 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876616045 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.729592335 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.015096541 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.649333218 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.148065986 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.869041573 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.85719281 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.732970962 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.171083882 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901049964 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00921364 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875405554 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.541416327 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.220779342 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.124026639 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.949296069 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.877297487 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.872532116 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868689278 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855923993 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.068584524 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.065613753 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151166457 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.984492989 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.903022601 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871836332 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.084249553 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079933285 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.944260764 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018544937 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.953397976 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910832932 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.782313648 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.374012932 seconds)
  done (took 1669.793919768 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.905361661 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.879090979 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.876580563 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.888653472 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.872209121 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.919414005 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.894599634 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.873369987 seconds)
  done (took 56.913253218 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.866547497 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.057678652 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.868229652 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.859500401 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.863830726 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.85523383 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.029254628 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.865214417 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.860191415 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.861563079 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.853811609 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.85241007 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.169008909 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.876183926 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.864002815 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.836209454 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.860753288 seconds)
  done (took 74.098920682 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.855026363 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.945535992 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.891377437 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.8725408 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.807723497 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.863098745 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.633149403 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.876479712 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.85383978 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.083770017 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.490383282 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.863234933 seconds)
  done (took 89.821355489 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.864780592 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.860620725 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.861625377 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.860711687 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.861564242 seconds)
  done (took 11.099009479 seconds)
done (took 2172.873454746 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.107166847 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.085978688 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.094940927 seconds)
  done (took 5.96686754 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.00077138 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.049818864 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.172506648 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.176352302 seconds)
  done (took 10.189627431 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.143922607 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.223638072 seconds)
  done (took 6.153897666 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.255701571 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.865781338 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.241495882 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.855629685 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.853678181 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.853402768 seconds)
  done (took 22.353827504 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.856233149 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.860769444 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.858636439 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.862004873 seconds)
  done (took 9.223832176 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.838850382 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.525561279 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.839918383 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.856044697 seconds)
  done (took 20.845801659 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.608758072 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.618845069 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.601701076 seconds)
  done (took 9.616381036 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.411516883 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.758276306 seconds)
  done (took 8.955543434 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.121568833 seconds)
  done (took 3.908011454 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.989846151 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.169360198 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.341654128 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.384090554 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.472547027 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.554068467 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.17323373 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.098492334 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.268030301 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.306877787 seconds)
  done (took 24.545205412 seconds)
done (took 137.016548581 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.233281443 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.858606412 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.05399865 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.192562925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.089568477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.05654057 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.078365175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.178221209 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.698799501 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.696434975 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.191905268 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.100142985 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.021860715 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.090849745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.018898247 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.086399692 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.066831848 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.242680827 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.871701805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.07329041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.071739948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.813988185 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.024495087 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.821121766 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.058723456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.985971209 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.389523118 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.06958057 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.015920196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.390345758 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.979433624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.211867684 seconds)
  done (took 170.520813143 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.739221353 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.827886344 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.822650847 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.821177781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.17646234 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.819103197 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.824238594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.817218422 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.9742509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.966488199 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.814184757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.150479171 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.811804535 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.810496665 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.814805845 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.805722608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.1345558 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.740840376 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.801546307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.798344554 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.800218156 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.001903253 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.79897171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.017519306 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.070497898 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.801419907 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.798597496 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.807607752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.798064111 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.798706809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.804652412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.798550995 seconds)
  done (took 205.53424374 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.800363829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.800697841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.798679331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.800094028 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.800576788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.800872284 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.802027074 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.799956534 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.467288671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.461662671 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.800120836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.801434296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.807920709 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.80048439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.803315015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.810197637 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.822390256 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.822910389 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.814051699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.819162798 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.826885753 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.658640905 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.832660323 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.642029034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.810614546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.811576482 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.80212669 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.814961792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.818406389 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.817536264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.815814124 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.800606465 seconds)
  done (took 218.628589069 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.998333984 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.808242728 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.810934383 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.740540704 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.810956188 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.808362438 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.805991237 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.999722667 seconds)
  done (took 18.539924934 seconds)
done (took 615.024912706 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.23922478 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.082441118 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.984354161 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.830791317 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.070796314 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.865511452 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.827922951 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.891237059 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.56465051 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.895010889 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.516678824 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.845216803 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.615251899 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.851246969 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.957705261 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.885347407 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.394368156 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.484920664 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.007097808 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.886713475 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.002298957 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.764800681 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.902859589 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.595586062 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.633937399 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.804756277 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.010361587 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.403090508 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.839254162 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.994571619 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.550812777 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.212845908 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.839563722 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.82670025 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.879952838 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.862583436 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.181257523 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.837748423 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.951537367 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.56836665 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.875943531 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.449945541 seconds)
  done (took 100.420983738 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.801376147 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.800462605 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.799462231 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.798951104 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.800667298 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.799542203 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.799268787 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.799339441 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.798404531 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.798139509 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.799972406 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.800651679 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.798101629 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.800943325 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.799235503 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.79872102 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.801547676 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.803196223 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.799582989 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.800503388 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.801850905 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.800114751 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.802548968 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.802163226 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.802174757 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.801404507 seconds)
  done (took 48.557558337 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.813419143 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.952823857 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.034722788 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.830015949 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.812406031 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.817727398 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.831630681 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.81891543 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.816907028 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.811554264 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.904818481 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.81601548 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.829565446 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.035026123 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.821431049 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.807237581 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.807259897 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.807998838 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.953379895 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.824574051 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.824147203 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.809904425 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.823217765 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.816220265 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.80684965 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.802265882 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.805969034 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.235010371 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.811450823 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.899523002 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.844296683 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.822277759 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.190005733 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.037661263 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.855778975 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.808968605 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.803613952 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903777083 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.807076562 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.803532672 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.822576217 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.808632433 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.027293562 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.303842834 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.81733639 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.805230438 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.249686031 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.910537037 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.845276842 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.816918611 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.031589421 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.820580025 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.804976469 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.806508539 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.838915987 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.815045563 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.805998037 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.109657251 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.815143524 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.822693098 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.808973194 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.807151617 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.958816845 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.810897638 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.954075804 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.813760517 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.813439427 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.808897482 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.029091352 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.820483603 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.303869036 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.816526363 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.806735204 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.900471837 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.957760313 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.274414684 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.817674265 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.959555797 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.209504248 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.829312353 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.813787197 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.22805071 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.833423 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.811235994 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.804847737 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.806353469 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.805536348 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.84989428 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.820507341 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.239344672 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.305198491 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.124039189 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.83219334 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.81854543 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.801975803 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.110394117 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.807457182 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.803818864 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.025732627 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.315605399 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.81252337 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.810038335 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.287263973 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.814841083 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.82103649 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.809482652 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.030419999 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.814657799 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.844115843 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.800442265 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.808029077 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.804061563 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.820158365 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.809231508 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.801242306 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.274043373 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.912560668 seconds)
  done (took 224.014926644 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.795559263 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.806069939 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.796499714 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.794092199 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.793727593 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.799919231 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.793804549 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.793897041 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.801977636 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.795164678 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.794733939 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.795098571 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.795523523 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.802804257 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.840955377 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.79946622 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.446540944 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.788231709 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.788930273 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.800281521 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.429435088 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.787439499 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.780744764 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.802415414 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.783401648 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.784854885 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.789127796 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.816494564 seconds)
  done (took 165.325382221 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.790023948 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.904729676 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.80459242 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.818617161 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.797255486 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.786410828 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.811927925 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.805495641 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.793096031 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.78688273 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.788039844 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.851672378 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.798574118 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.888725184 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.819512265 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.818692163 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.891231364 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.797153085 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.788983046 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.788472805 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.818257979 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.785909148 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.850110448 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.912063363 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.803646606 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.903319149 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.791765404 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.79058593 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.789833622 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.906768219 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.802628461 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.848268059 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.816836019 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.809304096 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.907665813 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.902421395 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.894186435 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.818067489 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.792983381 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.788856927 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.787585855 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.78046503 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.905429862 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.80735104 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.79315752 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.898753797 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.807163916 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.794170218 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.800541008 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.791019383 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.804167535 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.808238807 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.855032492 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.919000039 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.82030706 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.816184251 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.815987423 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.073740178 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.80370589 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.893239925 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.785076886 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.905936629 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.808920959 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.779845036 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.791797268 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.797760871 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.821444517 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.821735723 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.89584221 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.80076398 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.892848216 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.825559409 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.796577246 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.791385635 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.792875577 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.907082856 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.905743933 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.826593625 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.828916701 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.822857317 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.788707299 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.792685495 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.78202088 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.809681692 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.796238204 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.906404573 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.907453798 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.798089524 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.795441733 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.793905539 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.79603289 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.817578095 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.914266012 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.823973712 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.891120444 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.858699195 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.863015708 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.805031714 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.805984058 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.794928663 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.855274301 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.803450777 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.804315252 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.121163054 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.865086766 seconds)
  done (took 194.148616486 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.273595979 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.846123887 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.848000027 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.066027478 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.214310481 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.562332478 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.839416825 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.84120413 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.868191379 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.998484027 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.89766311 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.855932578 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.831251232 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.817343762 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.843821114 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.863285752 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.846916098 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.140806882 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.961025927 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.958891375 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.821284911 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.141773931 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.164595553 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.222123339 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.876438095 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.167067523 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.517949157 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.085175993 seconds)
  done (took 59.100150096 seconds)
done (took 793.302088304 seconds)
SAVING RESULT...
DONE!
