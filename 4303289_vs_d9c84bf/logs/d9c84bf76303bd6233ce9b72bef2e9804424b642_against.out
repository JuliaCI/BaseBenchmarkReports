cset: moving following pidspec: 26028
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.36829054 seconds)
loading group "string"... done (took 0.553430375 seconds)
loading group "linalg"... done (took 7.092126669 seconds)
loading group "parallel"... done (took 0.154684092 seconds)
loading group "find"... done (took 1.12020448 seconds)
loading group "tuple"... done (took 1.848075618 seconds)
loading group "dates"... done (took 1.190288315 seconds)
loading group "micro"... done (took 0.211486563 seconds)
loading group "io"... done (took 0.921190981 seconds)
loading group "scalar"... done (took 37.143656057 seconds)
loading group "sparse"... done (took 11.648209512 seconds)
loading group "broadcast"... done (took 0.913144286 seconds)
loading group "union"... done (took 11.946328531 seconds)
loading group "simd"... done (took 4.120637253 seconds)
loading group "random"... done (took 8.423406981 seconds)
loading group "problem"... done (took 1.857937286 seconds)
loading group "array"... done (took 19.674263215 seconds)
loading group "misc"... done (took 1.622267457 seconds)
loading group "sort"... done (took 3.122193667 seconds)
loading group "collection"... done (took 16.251872077 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486639525 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122372161 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113738608 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118641753 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144925706 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114342799 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121734387 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.0832335 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.762083456 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147418707 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118636794 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413394591 seconds)
done (took 5.073690804 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174375656 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085567776 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082669269 seconds)
  done (took 1.310888249 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065088879 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124374085 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067776396 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066930093 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066465124 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06599737 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066222724 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065906695 seconds)
  done (took 1.666831055 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074669215 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069865953 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070257541 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069778717 seconds)
  done (took 1.428437566 seconds)
done (took 5.798401932 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.770994285 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.19923241 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18564529 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.395794322 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131095366 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156549544 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.632852249 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.292358952 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182021798 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081350984 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103730992 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316053471 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108169408 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635146911 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073627352 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089894435 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137598092 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.403248919 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066846448 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081749722 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088113762 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127362928 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087623525 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074237754 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.140516356 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067150432 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129036157 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079405605 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066042464 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205952875 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172642773 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.646244205 seconds)
  done (took 10.111873581 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097587041 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096505193 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069138254 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136234232 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098487695 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069345577 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070830937 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067290197 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086199269 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127126883 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087836419 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100331814 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065413341 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068379781 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084280513 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203568093 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079949655 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080865502 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070128435 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07472862 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118176673 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077595149 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077577292 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076921888 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127543268 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180488313 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098072132 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096784748 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06642848 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079774902 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114279352 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128021111 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067774288 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067951104 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125200617 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093722131 seconds)
  done (took 4.614941914 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.294040664 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143332372 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089477407 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131986998 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064367695 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106319499 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065403075 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080085812 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198571127 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.349735622 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.112365162 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575499205 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110363977 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103315072 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067846005 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068071167 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066295094 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.347294239 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106577267 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103212188 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079659143 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068336811 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067944634 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341905543 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066802711 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062954451 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067246219 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057392458 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12260519 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066853687 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.930002965 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125085812 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066593219 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100185386 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168220308 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089593818 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.198676237 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142114746 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067930475 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064377972 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149552077 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070114321 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063440261 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066004804 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082929248 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103199139 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113094248 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065289592 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066503803 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161171091 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065061072 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079035713 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.002129017 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154155066 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078979929 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06587435 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243746689 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084809648 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068774771 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064630152 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.203502266 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136386527 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069061909 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067413922 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06744472 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069109228 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.34910762 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065632638 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.979947991 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067071102 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076805987 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068698941 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069420973 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074677424 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071954069 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084864363 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065858523 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075175202 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065945089 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065218348 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066587652 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083757523 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358002329 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065653694 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068089609 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064871776 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090063227 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096531963 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067896336 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066395211 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101546937 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.172111549 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068232985 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10539325 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0668568 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063783405 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08392789 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068684245 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112466003 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068946769 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.109402501 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065330691 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095848747 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069566375 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098346423 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080702857 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068129246 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.39611051 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065007371 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064774686 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068045514 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064621067 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067506319 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066012509 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079357037 seconds)
  done (took 21.210833262 seconds)
done (took 38.372999532 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.277350661 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078194421 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078747038 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078739984 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079801138 seconds)
  done (took 1.830158673 seconds)
done (took 3.046957049 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122351365 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101619226 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065538539 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097122753 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065511648 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101355478 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09876615 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080167725 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098647449 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064134122 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09507597 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063787606 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063772042 seconds)
  done (took 2.354925348 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084624612 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08464803 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068886313 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081705339 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063904373 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081600846 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079848093 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087820333 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080337023 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071747329 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06354145 seconds)
  done (took 2.05978883 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08414371 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084977695 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069946796 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081896185 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066413599 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080538693 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080536706 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084641773 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080564132 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07279856 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063181645 seconds)
  done (took 2.054348608 seconds)
done (took 7.674533005 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079038083 seconds)
  done (took 1.274254946 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593540855 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.033383903 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080665844 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111093015 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182408875 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11850053 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274470933 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085850435 seconds)
  done (took 8.866148285 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091412821 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070635533 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084011142 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073626311 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069461965 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071162672 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067936856 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068101241 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070330723 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070181178 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070498554 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068139574 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071722726 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069263211 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067906691 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070913968 seconds)
  done (took 2.429361552 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094076151 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089770288 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072834816 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073916059 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071557181 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071745873 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073788546 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072571805 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070440827 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07172874 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074450468 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073066149 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071104825 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064337213 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07352843 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075152241 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070362032 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073165597 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074823867 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074232878 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074541528 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064210085 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070959459 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073510419 seconds)
  done (took 3.082912993 seconds)
done (took 16.855921376 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116973835 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072178157 seconds)
  done (took 1.393881841 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084379035 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085669218 seconds)
  done (took 1.381893602 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085906557 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06668399 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091636694 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078436984 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066057481 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065894233 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088991819 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06619251 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065750402 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065867749 seconds)
  done (took 1.953084224 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07094532 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079693181 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070810336 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080775616 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07365943 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064213474 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072404326 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067634687 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078017405 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062304477 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071206434 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082476907 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071272751 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083763804 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071987558 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068719932 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070708896 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066902818 seconds)
  done (took 2.523083847 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067853341 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068379475 seconds)
  done (took 1.355488879 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069427204 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064526524 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066623565 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066868155 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062952756 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062664601 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063344041 seconds)
  done (took 1.671208528 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393921661 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110360694 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297567543 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070342171 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081050565 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250178051 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065195212 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069987824 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07031052 seconds)
  done (took 2.666809922 seconds)
done (took 14.16465473 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080661004 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086643502 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094394299 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36043241 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091547667 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065902414 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11322968 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192528193 seconds)
done (took 2.31555209 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216901613 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.622015971 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385257131 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.19649599 seconds)
  done (took 2.425665619 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335476442 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08652908 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058743995 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065970562 seconds)
  done (took 1.777849466 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067177707 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070581662 seconds)
  done (took 1.364580214 seconds)
done (took 7.013248575 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067555121 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085386745 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065618078 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063737104 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065421192 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.0630562 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06416957 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06551001 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063248837 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065393697 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068296252 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06544326 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06543885 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063188989 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063026913 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065877279 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06307606 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063487303 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066179973 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062913801 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065130135 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063083077 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063075436 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065076831 seconds)
  done (took 2.835728488 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086375948 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068334118 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072508504 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071159233 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069735425 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071035916 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070583608 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065653546 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070667793 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067840587 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069138617 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069590007 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068068236 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069942621 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067637955 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069911808 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070824878 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065889917 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067403349 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069762925 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070391312 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066017745 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069674018 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070613362 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06906008 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069214305 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067478531 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065749768 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070579427 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06890698 seconds)
  done (took 3.327621242 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071166188 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064729657 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065249169 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07024428 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063659207 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064519625 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062780461 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063401108 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064391355 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062856919 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064652003 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06312683 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063497262 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064320356 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064024663 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067172018 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078090839 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063877666 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062969932 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064089057 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066580363 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063155015 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063782533 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063079405 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.17585168 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062574931 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063834158 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063398238 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063801619 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063036509 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066035192 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066719366 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062918491 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069366173 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066487313 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06267696 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067229571 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062678319 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063514891 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062702393 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062530825 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063132569 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062852171 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069652923 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062959413 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06432631 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062979546 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063851613 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063068606 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065736685 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062836331 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062951911 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065092663 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063983587 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066960437 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06242925 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063665134 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062273812 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063945854 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062702841 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062430753 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062754092 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065275418 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063282839 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076961435 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06935902 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062953463 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064232656 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063467047 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065036653 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064138087 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075853367 seconds)
  done (took 6.02063834 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093623526 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088990813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066234945 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064765015 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061565294 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063418653 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06758566 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063562468 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065172932 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069152212 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063976316 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064569778 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065164818 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076057207 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063758183 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064893268 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069283793 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061738988 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063812418 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06661315 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063608561 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066790851 seconds)
  done (took 2.745845531 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157635092 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069422217 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104814862 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07258695 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067234999 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072278378 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069265039 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069574289 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069762066 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067816248 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067449584 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0696365 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067334033 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067749768 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067596178 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06817973 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069388789 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067993665 seconds)
  done (took 2.605272675 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079136872 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067443044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08651356 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065512288 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065747358 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067749872 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070423029 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074102518 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067866196 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065559178 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074074864 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067750467 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067762532 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065773878 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067872635 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065422874 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067662582 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065219821 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073484091 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0700162 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069874804 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073499817 seconds)
  done (took 2.778275711 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081409625 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068477546 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081300269 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067893309 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062124626 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063511391 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069695462 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065478358 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070132972 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066805153 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065762033 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064214283 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068754441 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065576902 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06876971 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065036411 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067213817 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065344601 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066860379 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061241785 seconds)
  done (took 2.596046263 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088698761 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068907479 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06673944 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075880791 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066977417 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067050513 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074589333 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067228763 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067256842 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088249542 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066676934 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066578602 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075005393 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071510763 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066884735 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074495002 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074889519 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074352446 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067034878 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067290802 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086949953 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066865456 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07429487 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066563924 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067028645 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066636618 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0666067 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071339476 seconds)
  done (took 3.24533518 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06832277 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067280827 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064487689 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062921022 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063060192 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0632578 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063385031 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063195163 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065305436 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062858455 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065445314 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065613782 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065293226 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065328247 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065606324 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065330061 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065030242 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063199729 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063312985 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063052837 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065143736 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065546306 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065378171 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063029613 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063145026 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06562836 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063230992 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062817733 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065281334 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063606623 seconds)
  done (took 3.180146153 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077398834 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074815237 seconds)
  done (took 1.399272271 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064963079 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082188137 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063596399 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06960542 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069561794 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066653586 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072889835 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069849633 seconds)
  done (took 1.800662786 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083586678 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079768867 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068866395 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081418748 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076027109 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082317608 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131848791 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066683542 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073036604 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06380737 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079466178 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06505311 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072105364 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066316874 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071766128 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07169044 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063520799 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07153854 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067664533 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064494542 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066898495 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074601175 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067804427 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061343732 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066783733 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087293238 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076344455 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065514822 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068857175 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072530898 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071412081 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059808612 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064998252 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066059289 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063494693 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074777288 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079988361 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068510452 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073862547 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066538872 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075849967 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060782944 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069792369 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072155517 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07516201 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065977724 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066331184 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060581379 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06333667 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068013729 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060865877 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065702755 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060342838 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075173033 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068895922 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075870696 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064000605 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066982081 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068390566 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068434864 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072054297 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068140397 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068079912 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065163935 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075291804 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070205972 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074256874 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061128218 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059723611 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063899513 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075283666 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087336945 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071564538 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066365723 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066166039 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063280801 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069079727 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066606863 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071321084 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071738153 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06564642 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071207253 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072860966 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066332103 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06788452 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073658863 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063652551 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068234245 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063739052 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081805737 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064116853 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064106414 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063422415 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07609185 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069049407 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065168595 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063859954 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072671676 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059587371 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065633102 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066096302 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065321044 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075156524 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069102136 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069400356 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07333659 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071532993 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064930179 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067490684 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061418416 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065045196 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063711855 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071314518 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059039771 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067368796 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065093088 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064911506 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200239488 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067775972 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068835805 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074638826 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072140309 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06505371 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063226055 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069453266 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065668539 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06872622 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073692395 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065614443 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06159766 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061003756 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069653469 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065969107 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069865908 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070909866 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069752562 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060995381 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064027786 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071381662 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074850751 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066646496 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067637828 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072099999 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06808208 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065322829 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07246233 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069008482 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065567237 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071886963 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067361984 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061031303 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069831745 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06926688 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064768827 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070106251 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069113305 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068843866 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066384732 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065658606 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074326633 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067359428 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065703348 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066315003 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064489183 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075867112 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068190369 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060762549 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06384972 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075840236 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063935373 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065729852 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064794744 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068120013 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066756889 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064393822 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065408927 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067696947 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076222889 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070371704 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067043345 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071221563 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07675427 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065981783 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068408488 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065638439 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067055005 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066829119 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074264798 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071104923 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070267666 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068733146 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062542889 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071716694 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073096792 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065006399 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063356495 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064698795 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06991667 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07132498 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070772506 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067753483 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064924878 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066773338 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068566752 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068463843 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.0657133 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064889926 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072519726 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064275466 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072520119 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066645746 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075395444 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068805543 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060873309 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068898915 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063997918 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07172035 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061124412 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06348316 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065244114 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066205259 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063843165 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067154255 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059095589 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071392822 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072381306 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065413252 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064530366 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06456928 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071175775 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066152418 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067940557 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067730653 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070420128 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075144473 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064043898 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067429829 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.203752681 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06854466 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062572313 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073827487 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066674259 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067582989 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067421413 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065593457 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071057709 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077128674 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07507374 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062070082 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071195764 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067003844 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067469504 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06380615 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071430968 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069043738 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066786712 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07360455 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067887392 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066792598 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070125186 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065669039 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06747431 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067868058 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069749483 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066338785 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067756816 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065787339 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069219813 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065734999 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06435798 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068457842 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066555046 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06677948 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071941942 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06621778 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066606845 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068387898 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067177062 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066683355 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066760682 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065772234 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068811633 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067045462 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066705444 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068797541 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061150569 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073632114 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06556568 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0738684 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066390236 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063416597 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072849409 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068263619 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071190374 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066896393 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066606196 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067321893 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066054873 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069389235 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072798964 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063581333 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076241237 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074138224 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066656759 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069295948 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066255834 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067912539 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065326903 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066603632 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066603237 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065947206 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065861911 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070106912 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068174522 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065745633 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067236429 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066279493 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066276892 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066725761 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0604382 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064823802 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065675661 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065759285 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075530631 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066138141 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066696562 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065098522 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067170765 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064822143 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062745058 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074024263 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075136044 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066263221 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072937598 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065638039 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067252779 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076317938 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060303294 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064111038 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063791873 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06395774 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073162684 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066113166 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07470096 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065575261 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064782357 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062441605 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065809554 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06281079 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059040284 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062212933 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067737633 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064131526 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063348465 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064613141 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066941633 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065346928 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073711655 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063490215 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064975621 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064623748 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.194795907 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066412424 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066254533 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069727784 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067114528 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063877021 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063766129 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065854739 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067292141 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067741858 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065841802 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067958015 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076288895 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065885429 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069468095 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070087332 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061987703 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069245349 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066821641 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065834472 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066624393 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070628781 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069764314 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067422662 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075349962 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066169001 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067878871 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066354297 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065256538 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066400292 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066902875 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066593553 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065658669 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067499871 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07402889 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063981464 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069922362 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066504204 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066888356 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07295933 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067351559 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.0687695 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072800309 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066665119 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068380364 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074821993 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070218523 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069663446 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067213053 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067503565 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07228777 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065934822 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073483658 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066825742 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06773972 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067718049 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063629483 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065942833 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065816485 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064961964 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072811111 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066892675 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065703531 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065150673 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064069585 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067082139 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069594125 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073392235 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068938973 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069767269 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062057047 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063715471 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06755834 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064298349 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067991683 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068236447 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071470454 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068244524 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066441055 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065006559 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074785442 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071737647 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070017007 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064129571 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069564685 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06676637 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068908193 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067792141 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068069167 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069267282 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071891448 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06966009 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067361466 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075512687 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071854263 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068856841 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069742242 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068792 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068604695 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06317599 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068841782 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070097015 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07358373 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070424871 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068173807 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078790174 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065726025 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067913186 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070559874 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066458714 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071036203 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062378896 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068941337 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068058432 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067681326 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062510174 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066360821 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064866808 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06902457 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066458219 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062231754 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0773931 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075504119 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.0701684 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065975348 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.199859976 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064457047 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06434807 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069044391 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070173963 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070142561 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077601743 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065759644 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065962309 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062127683 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067105951 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069583686 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070326582 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064192158 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061375564 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065389968 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069428055 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072372255 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06550877 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066155744 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069417946 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069208059 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065007922 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069942895 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063570501 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070210035 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079631249 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067572182 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067511548 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072682032 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07429904 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067443606 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06264739 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067988314 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069697761 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066896876 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067733619 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067759663 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081204479 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07046446 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065344031 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066051917 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068744692 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065757211 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074347753 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06755272 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066853861 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071804543 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069066679 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075665259 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069385323 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073627483 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069439667 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069214715 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065420855 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066391558 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064411585 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06514562 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067180034 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067228446 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071659096 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074577839 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065549417 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077993853 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07526102 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068324387 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063113483 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066194804 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065392647 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061820822 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066809023 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064497056 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064376483 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064082842 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065426706 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06714547 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071220095 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066923909 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066676384 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065615853 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060830594 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068120462 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068179028 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067043908 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062820627 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066376976 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066462883 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070057388 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068816118 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063998705 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06774674 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067414642 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06673585 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061905243 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072714189 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065394371 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068050998 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065400244 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066146199 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067351209 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069797106 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070857746 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067414356 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068122719 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069907076 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067604102 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062775568 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06271782 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070521934 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063813928 seconds)
  done (took 42.434873551 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102991335 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065067919 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063679598 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063912793 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07541113 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064256258 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063193276 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063861309 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062907289 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064907022 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061794218 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061688176 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070060816 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077381554 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073510324 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066119718 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06193599 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062800369 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061829082 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062789529 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070707491 seconds)
  done (took 2.768817562 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075684978 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072035229 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074706131 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076568501 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066805637 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070220065 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072368572 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07021792 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075541441 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066764274 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084558178 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070362801 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066695538 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066541119 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066647961 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070532834 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075080397 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067076853 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070309701 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072087348 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070795682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071753813 seconds)
  done (took 2.895515908 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068340645 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067191805 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068466074 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06115185 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065864421 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061229636 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068814669 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063401648 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06915695 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065299388 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064509483 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064551189 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067243736 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060706854 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065243477 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063372355 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107901404 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068603692 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065142185 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066408104 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06098819 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067438279 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061108915 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061771933 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065022863 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069177022 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066185093 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063795641 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065143311 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065010013 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065281772 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.0635214 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066978496 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065910366 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064400339 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06492454 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065083267 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065400224 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061005063 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063428006 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066081849 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061379387 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065923827 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066703596 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063562758 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.0633131 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066803443 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065602274 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060707695 seconds)
  done (took 4.549537723 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081599064 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110466819 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068878103 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090144268 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081422458 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07518198 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068719141 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088328733 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06292051 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063804782 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081021473 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079379686 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065113006 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069780645 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068836016 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065136518 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066415877 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064190197 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069009288 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064863051 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069612723 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071620937 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079711258 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078188417 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068787155 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06414154 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064466358 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069517232 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077626664 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069536714 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069533856 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070476428 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080570785 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070536916 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064377353 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067208812 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080676835 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065333439 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067181188 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06295249 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066935032 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068873099 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071191749 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081417858 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065191042 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069820935 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064955512 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062241877 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077238339 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067357169 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072420723 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079212286 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068395056 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06510558 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069217347 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079018894 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064957269 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063168594 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06778765 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076589586 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062547365 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06855039 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077989863 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06666951 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071836077 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078870515 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070140629 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068552375 seconds)
  done (took 6.336779834 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076719177 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07352434 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08186905 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081747208 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073806248 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074193248 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073755457 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073509564 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073245533 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078515666 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073276472 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09354315 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067534012 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074364226 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071960319 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072025034 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072180827 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072170548 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071801538 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072104429 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071916551 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07904913 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07141192 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079691106 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09741012 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067087279 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071508869 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07180753 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079583143 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071489984 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079138612 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07151778 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071947752 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079794248 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079135036 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071246628 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065027335 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071290504 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071571809 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071523539 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066886132 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079281877 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071320154 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066794802 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071315331 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071243883 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079407528 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077963985 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074184284 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075603657 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071394961 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079100119 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070938354 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071370105 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079471992 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103326615 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079847447 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079104301 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071875472 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078808647 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079175616 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085137947 seconds)
  done (took 6.028517742 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086550537 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076233623 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078122144 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063124305 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065411581 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070216218 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064555757 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063543488 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073914061 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073560297 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076530008 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069658156 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072126517 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075956052 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069317521 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07275178 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06904228 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069304791 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074005449 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069050133 seconds)
  done (took 2.783772301 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075946056 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084636994 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069440835 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074010085 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.07074743 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073878552 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069518718 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069094793 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066902372 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068366353 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075600624 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075498704 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066667081 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071076183 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0755336 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070928965 seconds)
  done (took 2.50102999 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077312687 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073667422 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081623213 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06762593 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064747519 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062205434 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065348643 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061157808 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062103788 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077577347 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06554067 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067745621 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06532007 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064202523 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062547853 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068305607 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062245373 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063381439 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065443771 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077403555 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076199263 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06435437 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065917563 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065361564 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065901009 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07077339 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064860347 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063296058 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062632706 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066107507 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065649436 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068803145 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062506672 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06322864 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063866496 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06287682 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064928116 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065265307 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067718559 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065091104 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063312639 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06508966 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065663453 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066100373 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061589888 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065416676 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061656046 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067637146 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063210031 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065324842 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065474532 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06805291 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066148761 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072262117 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068060144 seconds)
  done (took 5.000815437 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080928526 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071350855 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062587997 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063941747 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067972064 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066902863 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069054969 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067364256 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067258774 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063655009 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067181746 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068331658 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067112015 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069333647 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067293986 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069237967 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061489163 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066767585 seconds)
  done (took 2.573706337 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072499682 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067431724 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074702234 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067628809 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06750154 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067771581 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061587569 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063910756 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064079086 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065285376 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065637302 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06778339 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063905631 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067407742 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065188165 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065405412 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067742366 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064620109 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065559943 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061627738 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0676046 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063925157 seconds)
  done (took 2.805709371 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094005282 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082889192 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140683193 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080413655 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085383825 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073827802 seconds)
  done (took 1.907101174 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093083906 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080522467 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068840412 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089196763 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075261269 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068567197 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06865 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068511954 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075630627 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075323875 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06750485 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075660155 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075439452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075015756 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072960258 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072700039 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067092676 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067067553 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066103372 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08321954 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067190738 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075549587 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067832595 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066846082 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067297352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075121827 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075587365 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075599155 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066938646 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075372262 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072910414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067155138 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076244711 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076045027 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069678457 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075605442 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067130179 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083966852 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072816654 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074984066 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068847493 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072684128 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075411348 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071503668 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075527874 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067061446 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07129854 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066968111 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066813089 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084872825 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072501 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074403151 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072819591 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075218271 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075263721 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084851488 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075138179 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074110998 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072487429 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077858215 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074703757 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072143969 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074136944 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075209314 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072544395 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074546959 seconds)
  done (took 6.212237716 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083731126 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087605652 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068961888 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077310408 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074919017 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067462229 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067639979 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067543144 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06748264 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066839886 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107028759 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067259607 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075239937 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074899901 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067764461 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06724118 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06736949 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074818167 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066954419 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085508666 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067341776 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074746974 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07473208 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07514972 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0760803 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072829219 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067124315 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067289211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067043126 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067496936 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072101301 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067444036 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074872291 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067015881 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075036502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067546333 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067073034 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071990397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067165235 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072990923 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075288264 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083474419 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067214219 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066930099 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075652593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067214855 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067150075 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06665947 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067274608 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066834987 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075516492 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075646035 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075428755 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074483585 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066999884 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067014329 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067047822 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066871975 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067005351 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072585933 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074587454 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066742101 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084990248 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067202432 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067001824 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074465023 seconds)
  done (took 6.116435385 seconds)
done (took 128.671295337 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185129586 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16553631 seconds)
  done (took 1.697174944 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070991397 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099778006 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079242268 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129870863 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066547891 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099997078 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098650718 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077573098 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065634758 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065795339 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065984853 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068364399 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130753907 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066295551 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066042728 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068753839 seconds)
  done (took 2.681887775 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100765881 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159905614 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099423556 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064890865 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096639989 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072729244 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064695286 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07468253 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070853555 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064707256 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072817354 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070540696 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064606593 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070125024 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070610547 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072487093 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064897958 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073220196 seconds)
  done (took 2.793912016 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104078021 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093315752 seconds)
  done (took 1.566117297 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15798306 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106050957 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150129694 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343608034 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169787183 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228641438 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126230413 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12737407 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116469264 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12269094 seconds)
  done (took 3.011482352 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101117805 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154393098 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254726554 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114786884 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071916716 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094522427 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11640933 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07775792 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080538637 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079677048 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079925747 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076307155 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098316569 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073544622 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072942623 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075852422 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101357939 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071952531 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07423193 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076198475 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099032692 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065483167 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073179046 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07201784 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076921844 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076696531 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064847613 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065382869 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075996272 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073523005 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076067385 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092932568 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076927888 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105817681 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069650643 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106740551 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076291981 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073459539 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073713621 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073575948 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078102839 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078379556 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071793692 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075452119 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065013687 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076267244 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065068537 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065185431 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077307728 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066211187 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077244255 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076616019 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106144112 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066348926 seconds)
  done (took 5.953803372 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105124952 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103760131 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070582035 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110812726 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09941594 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070779723 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10065568 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093211305 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102117838 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070402358 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068076751 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06986768 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081827011 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082956717 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111079113 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103676273 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073322135 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070257486 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103435182 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102759035 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068201769 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095007207 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089565205 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1013471 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067655749 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069764971 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06756678 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07021558 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076831496 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078121621 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069686529 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08073453 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084275421 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078003216 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0670566 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067850314 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067883184 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07942086 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079086983 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078991507 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077355636 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066887149 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067209938 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069523141 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069540485 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066818003 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078511772 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079844641 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07844745 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069102247 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069592942 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067169929 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068821096 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079437435 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077203725 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080122975 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079587066 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067739661 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068325206 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071005776 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080444886 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078396198 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078977567 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068755136 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078281235 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067833301 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079669094 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083339086 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068390166 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069409924 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068373214 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069296793 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069171275 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077630022 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077970033 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069603989 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069487135 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067856176 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080016359 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078240822 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067990892 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076623977 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066857234 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068122101 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069250291 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069281919 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077248395 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079040489 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069292927 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067829206 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068943029 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067560097 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0661377 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076000617 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078200481 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076624082 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077040687 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068436247 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077403416 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076826142 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068002317 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078951487 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067357166 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19811987 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071984051 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08139959 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078470292 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080032428 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069347931 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068896497 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078484399 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081563642 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069076712 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079098801 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080281968 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07963297 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068486019 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081592396 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068944599 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079886133 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070947922 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08054141 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068328358 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079498038 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068596894 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067953763 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069135631 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078987088 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069981707 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068537558 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069688467 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069766316 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079322541 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083007399 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070233418 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081453071 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078827939 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069360325 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079150983 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069001157 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079434492 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069649991 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069498666 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067656252 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081369158 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068249508 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068825303 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069185081 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080731451 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069015048 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079535741 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077797685 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067634337 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081264952 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081067285 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077778684 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080285916 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070300495 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069710752 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068564321 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069681165 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07856289 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078967573 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070457077 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068647246 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077300188 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079371826 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066841552 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077910935 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078138452 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078414786 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068124979 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069022756 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080123424 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080538486 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078099781 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077729281 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077976873 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0681307 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077129325 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078012109 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067811048 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084113327 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068115841 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082069441 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078993006 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076474848 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07876439 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08037158 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080237467 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079638936 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081900895 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067252849 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067650789 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079203199 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067711245 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068120041 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076349779 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068193732 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068032328 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081225607 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066611153 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07754856 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066176384 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076658081 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065480453 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06791094 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080753644 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.19906978 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072920386 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081536011 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070517282 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078155321 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080861927 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07874056 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068569093 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069783193 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080292849 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079283624 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068198892 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068171339 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070380963 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078826643 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077383179 seconds)
  done (took 18.585791863 seconds)
done (took 37.662130432 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211742706 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150313301 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.197263643 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117527665 seconds)
  done (took 2.143655145 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.125691615 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103563844 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095669912 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064880294 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10131166 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064463782 seconds)
  done (took 1.959276462 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319400184 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209742057 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181183018 seconds)
  done (took 2.10697451 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211838261 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186457824 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392208919 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252270429 seconds)
  done (took 2.554868869 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14690295 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092089514 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066713648 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082444625 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133613345 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159704449 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100577883 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125247141 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07779112 seconds)
  done (took 2.443543701 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146180137 seconds)
done (took 12.756408918 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111919921 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.210505817 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.131607247 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.185375383 seconds)
    (5/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208033589 seconds)
    (6/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.108864568 seconds)
    (7/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073483639 seconds)
    (8/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081795687 seconds)
    (9/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.196803128 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081125774 seconds)
    (11/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090157938 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175679695 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077203014 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073036992 seconds)
    (15/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.216878948 seconds)
    (16/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.184903241 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.109765733 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218179175 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.172423426 seconds)
    (20/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.163749767 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099972389 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147361538 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.172057491 seconds)
    (24/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.204536555 seconds)
    (25/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07676668 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070394584 seconds)
    (27/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.15042616 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073548279 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091108145 seconds)
    (30/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072675964 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.19336853 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071416406 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099647921 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052206113 seconds)
    (35/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.118392292 seconds)
    (36/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.149515468 seconds)
    (37/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075658247 seconds)
    (38/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.061600921 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151039953 seconds)
    (40/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.194796461 seconds)
    (41/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072817353 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.177741699 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.101990544 seconds)
    (44/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066031515 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.167646062 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.0754415 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072392374 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073449874 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12100805 seconds)
    (50/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.203881915 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084621539 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097173795 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120376113 seconds)
    (54/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086775416 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111097939 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065446222 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072861273 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090822701 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081419023 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066377906 seconds)
    (61/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.109079045 seconds)
    (62/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068188526 seconds)
    (63/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.145615893 seconds)
    (64/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074453745 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075614771 seconds)
    (66/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.096811149 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.060589437 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093540083 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.147588586 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066084387 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069029347 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.203737864 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091634663 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111837368 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.148949186 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072080567 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 0.06500336 seconds)
    (78/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051683537 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.146941686 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.184871998 seconds)
    (81/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.212016332 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.355390192 seconds)
    (83/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073149237 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156676318 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062902743 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.184678773 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06783552 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081219369 seconds)
    (89/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05101045 seconds)
    (90/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.193801882 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086302504 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096338555 seconds)
    (93/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085413946 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065701595 seconds)
    (95/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087070122 seconds)
    (96/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079820875 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088577434 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.1731301 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05135123 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052284302 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066116365 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106737423 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071428073 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139474115 seconds)
    (105/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061929081 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111624661 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071602808 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084727122 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065498025 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07897982 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.087377742 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072684383 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051121889 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136400039 seconds)
    (115/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075330008 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051284945 seconds)
    (117/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052727062 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065043501 seconds)
    (119/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150383776 seconds)
    (120/309) benchmarking ("sort", Float32, false)...
    done (took 0.125663157 seconds)
    (121/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050634997 seconds)
    (122/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051183473 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134862526 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064835584 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.131777259 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073051066 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050742303 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071108669 seconds)
    (129/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051421772 seconds)
    (130/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071967628 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070446321 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.0841818 seconds)
    (133/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076092172 seconds)
    (134/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07400531 seconds)
    (135/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074847408 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063992337 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067068733 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095249665 seconds)
    (139/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072671004 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071611163 seconds)
    (141/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07494545 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.075806605 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071744765 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072460548 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.157611759 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.0790317 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086092262 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087903978 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064410376 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050832005 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07160829 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064456379 seconds)
    (153/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104424761 seconds)
    (154/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07406163 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064654488 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087851574 seconds)
    (157/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051835364 seconds)
    (158/309) benchmarking ("sort", Float64, false)...
    done (took 0.124465885 seconds)
    (159/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054057207 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088657516 seconds)
    (161/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070860236 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072734902 seconds)
    (163/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107986385 seconds)
    (164/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065955659 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076661414 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052112134 seconds)
    (167/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070572869 seconds)
    (168/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072932103 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064494436 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070157903 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053222995 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051257434 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107262619 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068641093 seconds)
    (175/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068190354 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075911371 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074188643 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064697548 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.074346043 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071955652 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.154208227 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107870884 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.193533743 seconds)
    (184/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079161185 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070530408 seconds)
    (186/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.105883896 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129782574 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064825804 seconds)
    (189/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108005446 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072100231 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086327966 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050743915 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050881816 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.146840927 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.223933661 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137307627 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064300031 seconds)
    (198/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052838545 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088129545 seconds)
    (200/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071948633 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185176327 seconds)
    (202/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05279205 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089673721 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051430618 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052441692 seconds)
    (206/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106602304 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051230586 seconds)
    (208/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073009644 seconds)
    (209/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052084958 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072257803 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073645752 seconds)
    (212/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064992668 seconds)
    (213/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069922451 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064348811 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065048689 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086117162 seconds)
    (217/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079381053 seconds)
    (218/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073550175 seconds)
    (219/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052153178 seconds)
    (220/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118007666 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070957417 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176570229 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05259202 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064570695 seconds)
    (225/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052237966 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137104648 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167390163 seconds)
    (228/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06899394 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150125387 seconds)
    (230/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051988119 seconds)
    (231/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069199663 seconds)
    (232/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086934502 seconds)
    (233/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05110979 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.130820541 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065662188 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052035811 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052369915 seconds)
    (238/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051994646 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067022271 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065196185 seconds)
    (241/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066634456 seconds)
    (242/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060452606 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051024487 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051366203 seconds)
    (245/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099712349 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086177431 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050975477 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065606599 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050860473 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06479232 seconds)
    (251/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051927171 seconds)
    (252/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051522938 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162706444 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051718786 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070373684 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072647154 seconds)
    (257/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067146661 seconds)
    (258/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06781009 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066419317 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065703992 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085154511 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071013336 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071294914 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072422326 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051466552 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05189273 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050933812 seconds)
    (268/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067512096 seconds)
    (269/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148068924 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08836778 seconds)
    (271/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.110687005 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065724559 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06733575 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.173363981 seconds)
    (275/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051105034 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065045899 seconds)
    (277/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05177327 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051378386 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064925994 seconds)
    (280/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052466946 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136983412 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054645395 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072238445 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051179818 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064830927 seconds)
    (286/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052911008 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063416106 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134609435 seconds)
    (289/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071385214 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090437016 seconds)
    (291/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061562288 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063650284 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064768655 seconds)
    (294/309) benchmarking ("sort", Int8, false)...
    done (took 0.137442854 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072163385 seconds)
    (296/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052388456 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06467657 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070300439 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050985508 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123711904 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052730724 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070217567 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06356871 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07011123 seconds)
    (305/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066828411 seconds)
    (306/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061305459 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125225612 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169971957 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064611523 seconds)
  done (took 30.217524816 seconds)
done (took 31.62918644 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087901212 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096199019 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075451465 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093164639 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080771534 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076773463 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072691205 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078307412 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08041413 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081573733 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078545361 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055019198 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073930493 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074026682 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074598569 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091510367 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078015919 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073541127 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073058385 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064607649 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072695834 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065893281 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067468779 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054692939 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07790426 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071936389 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07270183 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073926933 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065714839 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065773957 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069163184 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073002283 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065938094 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078424062 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072266543 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073303255 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07521567 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076231697 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068161202 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066160311 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074300283 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066340889 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072464635 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073924803 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072081491 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071346533 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073384267 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077979118 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091186388 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068138198 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074432679 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075676978 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076155401 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072452195 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069547724 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07283694 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071262735 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091178277 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073669413 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068709599 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074111263 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073512534 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07076661 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072990873 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072844258 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074968293 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075242359 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07107911 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074658201 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071203177 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06560497 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073119437 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068765306 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065548142 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075714217 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076554709 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064601985 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07116936 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072120198 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071479774 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064749631 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067795901 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067268779 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071649146 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067374002 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055401723 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069227704 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071617548 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064441779 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072956395 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071274059 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072087719 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06688184 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075180036 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06457935 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070201993 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065662564 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065151802 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066824128 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069094728 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065072653 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067210853 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073991851 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066643152 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071274546 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078897849 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06550133 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071463061 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064351723 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064758837 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078836144 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074281597 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06484893 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067158705 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064428012 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072272812 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064273748 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065357797 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065294357 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065596796 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06990986 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064502989 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065726733 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07052099 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075679417 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063979387 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06725085 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065635289 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063995318 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068954625 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063949613 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.200764817 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069785398 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064650608 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069201246 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065686761 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072526528 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068106308 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073184075 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06789165 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073260992 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070611473 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071202995 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071228172 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064550051 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059092538 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068687572 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069060647 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067523191 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066063171 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068219662 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066088819 seconds)
done (took 12.462538298 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069452121 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147858011 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.102617845 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097125336 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08571579 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066754274 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076081453 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101801701 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068171488 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102607661 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087267611 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085291285 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112934876 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064410914 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065940616 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069544164 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067386688 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081732209 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100862783 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086855898 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116383923 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06578376 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094676556 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090587992 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087345703 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101929507 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067114273 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069931796 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069675348 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091249209 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086501514 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069902473 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06695098 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100686625 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092012801 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083280981 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06664065 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082237794 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066860129 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065896947 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068187727 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098087898 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079564148 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080055675 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069706609 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069092844 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066752664 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083154786 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088963553 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078342427 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086152679 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102517364 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068503709 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065886863 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064672908 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085180587 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065274793 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068761704 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066188318 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068264514 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066233863 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069565031 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080919117 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081849333 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069375363 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079904427 seconds)
  done (took 6.813341551 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086617983 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092246185 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083517713 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083648569 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066274753 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066155645 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066433913 seconds)
  done (took 2.050004995 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069721387 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091584698 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088909219 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089802484 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084436993 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087319425 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075666684 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066731772 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080559873 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067794583 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087443241 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101763163 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067261678 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073147965 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090601728 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066581986 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09046323 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067093319 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069861535 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089579676 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068431134 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082125179 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069723579 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067004469 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080391437 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067008311 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113190518 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070771009 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06808965 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069730311 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06439818 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107401227 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079784423 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075412765 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066192991 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080508703 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080399063 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064442283 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082336407 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071082614 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080024187 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066387773 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06749578 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064302371 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070711829 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076462819 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067210001 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066767957 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068829509 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085474814 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066787908 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079127514 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069512001 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068939667 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067465281 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070347237 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07563428 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066812736 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085795051 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067548692 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082392562 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082658689 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080181271 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08254755 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068698151 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080000266 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079949135 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068759829 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067824968 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069923809 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081981486 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064784036 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067719504 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076683394 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067795675 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088817525 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089212701 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067349378 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075272169 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066397267 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066153808 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06616732 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089292424 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068714682 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065927792 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070348544 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069009716 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06427223 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065048408 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069437899 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064128902 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067499476 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068806905 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069181003 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069100491 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08249071 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068810999 seconds)
  done (took 8.753380853 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071438868 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068423649 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069332269 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067426036 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067735118 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067780054 seconds)
  done (took 1.938284387 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096459664 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070888064 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080485163 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072906832 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104256388 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086941913 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086494357 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078600946 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083825155 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078767809 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085929316 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088543446 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092391149 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072776407 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086592943 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072226869 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087316576 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076260885 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078174849 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072976528 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08660146 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072857482 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072982453 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082227555 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075724308 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.0719419 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067651333 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079209814 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078519027 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079017573 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072272607 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075467237 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070682399 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078457299 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086920923 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070446516 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071864521 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077295556 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071987896 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075252535 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08744154 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07371682 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074555867 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076962287 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078179425 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070801968 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077055298 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075892195 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085990628 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076744769 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076966163 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071294461 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075119459 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077252934 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07076705 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077881704 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076730183 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085975568 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071719908 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070026896 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068580589 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075222392 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077502723 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075120096 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078389602 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076717312 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070250679 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072236723 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072429422 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071895914 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076849884 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069104885 seconds)
  done (took 7.088894735 seconds)
done (took 28.132621545 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.547311326 seconds)
  done (took 2.037711504 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611367657 seconds)
  done (took 2.128475649 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.613172663 seconds)
  done (took 8.128469716 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400244241 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475025671 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.690892944 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130436769 seconds)
  done (took 3.251119424 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.675486811 seconds)
  done (took 2.202028396 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21510615 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19591678 seconds)
  done (took 1.948964826 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.381260987 seconds)
  done (took 1.895503336 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.110894573 seconds)
  done (took 2.627039383 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.268155111 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162763483 seconds)
  done (took 1.954305311 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.46399331 seconds)
  done (took 1.983109049 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.86888721 seconds)
  done (took 6.392086378 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211242923 seconds)
  done (took 1.777027798 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246911143 seconds)
  done (took 1.770959463 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.669259928 seconds)
  done (took 3.192140505 seconds)
done (took 42.810195474 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083152568 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083891907 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08122575 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07819944 seconds)
  done (took 1.838349015 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079820015 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07512718 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077740735 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072087523 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076195821 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072788024 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074597051 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076578567 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07231324 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072930353 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072461578 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072513398 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074881693 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074021063 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070576438 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075344367 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076538189 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072376093 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075657646 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072941086 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071207325 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074870055 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074908028 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072188981 seconds)
  done (took 3.306935574 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080862507 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075119459 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075488361 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071518136 seconds)
  done (took 1.836401576 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079809154 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093057701 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088653588 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077783041 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091793946 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086167022 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069090566 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069208263 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072934925 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076826409 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067802952 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095995035 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087381415 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077056264 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07892063 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066102459 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068475475 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087342512 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077121439 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077462545 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069693802 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077109019 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068352791 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088062283 seconds)
  done (took 3.420771258 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081288328 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102898761 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078138593 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087690614 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08997637 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06579403 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074106603 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08929027 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122657876 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065755417 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069994816 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065392777 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072305273 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065161257 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076351248 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.1047735 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108289814 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068154178 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.0957961 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065623354 seconds)
  done (took 3.192517512 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075985374 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072549243 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06579593 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068969016 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077949155 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07331582 seconds)
  done (took 1.974203357 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071016441 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070151627 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068558183 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067143138 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071434518 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067227221 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06587852 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067322635 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067529828 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06710317 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066447302 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06603209 seconds)
  done (took 2.350599905 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.176871707 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068872662 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070566727 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066024116 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0709774 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06632804 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079789775 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068106262 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090677135 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066497066 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066958189 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068599404 seconds)
  done (took 2.496722757 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210673216 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078058192 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236384896 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137182363 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111485893 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115364251 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104318639 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113818901 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143617149 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101725288 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167308883 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165610935 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107386166 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136962235 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089357779 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098219517 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155279278 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162610295 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103286929 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164934834 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143530838 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124946241 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146605011 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101386729 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105519903 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121392687 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070952393 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080291164 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171091364 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131441513 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146346057 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111430716 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093860011 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176836038 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173233172 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145856039 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134693082 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083937048 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102333068 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132300742 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198426303 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090484816 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165339268 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249914848 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082275089 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1344441 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121808091 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120360167 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106994623 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089877664 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146280357 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18363302 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138937692 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08767142 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11222203 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11603178 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117264469 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104189514 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182908826 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16128568 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127578338 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071123092 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099266549 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152612656 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131556707 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10813746 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127926801 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093508431 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133687491 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15473343 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118566916 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144228369 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128790364 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088945628 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120173364 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139603787 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128230417 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169973564 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124809127 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072828893 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125294864 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103325833 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081401371 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142712881 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075695569 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17393907 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098338449 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106342524 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112777734 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108748704 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108693145 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159907165 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14077448 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.248874918 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067214897 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10474491 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121292104 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148634737 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087245952 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108220622 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117436297 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078544207 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140436125 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075311141 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123721049 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075761717 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12626181 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133238764 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075930777 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123106758 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10110185 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101525857 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133313856 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161689617 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089494417 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082518872 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166874305 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122729129 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104406822 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14433118 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156405105 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099147744 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103332138 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150011726 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179275468 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090414319 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162943123 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107266081 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084006067 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087750683 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123810772 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112403868 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122285614 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082219786 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118559305 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168310563 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075114077 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095038795 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133770917 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078818304 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080332157 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102408543 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099698461 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094745221 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099790555 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103870025 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136144079 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121813991 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103126074 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275321688 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099650175 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172423046 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088901532 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101715216 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105551487 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070216858 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137360286 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156682994 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079899883 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164950838 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12452401 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104795293 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119828712 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083372766 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13981237 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079360871 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070327594 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144711773 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110155485 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110595815 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150897201 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104967867 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128452737 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119640472 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134520495 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132172942 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130300563 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105520992 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088636232 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112015324 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125498071 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073133851 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091195167 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080172079 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103902014 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095979834 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083667452 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14264469 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125029627 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100559828 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111860673 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09694691 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147452788 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076857209 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129030431 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118307011 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093680571 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150839787 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151545696 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130756206 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098545503 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14311546 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069411068 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072989788 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.236888299 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125476058 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083916124 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084671205 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117627207 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147970776 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129579381 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139042623 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112674147 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121128757 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155122895 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06972793 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116978332 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147793706 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121428263 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104831299 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090484467 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099661039 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142715583 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108731175 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182563177 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113779838 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12689608 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154532549 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100638442 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080203454 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108725008 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135600761 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105070766 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144558656 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099958811 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088055069 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110297809 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075251091 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100191025 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127457785 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120545231 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13608822 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114640233 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132868057 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077322964 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117037914 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120508887 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122023798 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063996579 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119127796 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159895523 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093541717 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118190355 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151388681 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078846191 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123550452 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.326834601 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149409792 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085259433 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11070889 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1192009 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128162528 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122074706 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142002481 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108517913 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135546932 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109436275 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086040889 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087928024 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097501095 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10533838 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095904442 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10863474 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114704578 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095232518 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132254343 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103062652 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1101201 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11794723 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097596447 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090911002 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096974057 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174393413 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120028498 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171402047 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099374369 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145869851 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163678864 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075123099 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079147045 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078695372 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139934836 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084198621 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130681346 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098038419 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106129948 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124033801 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142162584 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094917506 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06862532 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108879654 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137276562 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112190475 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097548074 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103733217 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1617941 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100004154 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079143055 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113651834 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104312301 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101474986 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318234288 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062826972 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099511317 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076570092 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081907742 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128997026 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153913555 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081449326 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102965807 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119824329 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111317565 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128156466 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102765968 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099688454 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115225845 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150580571 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129107267 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09028731 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111939413 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130401374 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157307434 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105545681 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095855164 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172587026 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170227302 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160627582 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089269191 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114683461 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113975862 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107803166 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13950833 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083085999 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164242856 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082136249 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136497317 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104002779 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090339757 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129965563 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099404762 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088128031 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148308254 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117604185 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082851421 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07816007 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117740293 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119978185 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106075143 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075257347 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138371185 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072793329 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13169907 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167712347 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080539134 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254170322 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098913511 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081521341 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10927133 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104436503 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090204429 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098980549 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173067255 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088527395 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149785282 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142130174 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113538674 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137661393 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099885685 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63676645 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078842341 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152245741 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117306063 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174227988 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097449463 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117739316 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109227787 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123734766 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145883953 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105286975 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178364174 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132637521 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116652651 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079767111 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103082828 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102775493 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089215386 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105092269 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11399843 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116212231 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093940727 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116016661 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123767678 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082338344 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096139396 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156407415 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117039449 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144484044 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140288681 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084427637 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117383603 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13774762 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07935836 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121494619 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150444148 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104602753 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246227413 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083045504 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103238479 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171532625 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074560062 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163704621 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119643774 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110096289 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114118846 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115304791 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131625279 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108651797 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122676374 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095356122 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111518863 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113687687 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083107783 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077307079 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105176959 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112527277 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098414861 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099158166 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098442699 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151564387 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071335031 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096768679 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10365964 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146064728 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174709751 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088441605 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082874543 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119136371 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113337684 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11315681 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120775553 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07957432 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082722749 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082260536 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077609203 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108862924 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112385564 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104652643 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111535676 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164618706 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082725495 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225734814 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095232209 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104853751 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070104234 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078601548 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095967344 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097323572 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107490805 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099526463 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167749336 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09406565 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089103555 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091405154 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072303903 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231843443 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129656384 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111593016 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120109396 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09831287 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063741072 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10962018 seconds)
  done (took 59.046411396 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111864707 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082548019 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096999763 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14973255 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122593522 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211949897 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157694765 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199922039 seconds)
  done (took 2.777055363 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07135824 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094610615 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099772631 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083960271 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067397375 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070228842 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22554522 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081708733 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06662951 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088623013 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080469766 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070518194 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422223292 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066060267 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06951434 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064480555 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067588725 seconds)
  done (took 3.423510201 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.371815825 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600677872 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373913615 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073926407 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.869838912 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092131816 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.055046835 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131889497 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074316222 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538482035 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703637357 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125331512 seconds)
  done (took 18.654450375 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079008453 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070901016 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085022852 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084785006 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073615283 seconds)
  done (took 2.034412883 seconds)
done (took 107.930952916 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083247441 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391414629 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053952169 seconds)
  done (took 2.117422034 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086805739 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085196771 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084729809 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083461524 seconds)
  done (took 1.992597153 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076749873 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076141123 seconds)
  done (took 1.795179849 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224642086 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139861398 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087001234 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084659506 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078385342 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079220694 seconds)
  done (took 1.889104166 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074707005 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075623023 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073332639 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076948292 seconds)
  done (took 1.940221031 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078740075 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05303851 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05568292 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055997271 seconds)
  done (took 1.885745733 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089704908 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079459701 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078679932 seconds)
  done (took 1.891794296 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104557392 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085196557 seconds)
  done (took 1.831561426 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08410282 seconds)
  done (took 1.726993653 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101721628 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11444626 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128128637 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109594702 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137397981 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108978469 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08678894 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086676824 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077813534 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087736808 seconds)
  done (took 2.680148206 seconds)
done (took 21.924234312 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081646946 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367904948 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361117167 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089315886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667626025 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356877709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984356934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092278218 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113516847 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068135884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084432071 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650046357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974976072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324275396 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961893737 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323884329 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650183225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068342127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068112552 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068591731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96843087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068580936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068174502 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068879896 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649283583 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37125285 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068283527 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323568283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067747745 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069833515 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355165177 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068460432 seconds)
  done (took 16.135386765 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07418691 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119059071 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073813989 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085384697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070683459 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069798993 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071687329 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068829368 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119760518 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067957222 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084727707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067832175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072258284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069304892 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087807799 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068506311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069427526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068749589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068491614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069160661 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086813997 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068126913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068547678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069300798 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068710223 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080497558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068965963 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068760071 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068488187 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070107251 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071796311 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069341674 seconds)
  done (took 4.065209019 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118314399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125312487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07514633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103538734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112336853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070648189 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143741747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093139811 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127890366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068652709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084737645 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068662374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10136774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069028646 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087849773 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069431918 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069859076 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069094153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069024413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068755256 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087660268 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06823753 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069005477 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069485447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069465581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082282193 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069328425 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069577703 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068783317 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070558331 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072120671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069424978 seconds)
  done (took 4.323744163 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075671943 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077318871 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084042191 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084028694 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070455899 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072416132 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073145257 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070162529 seconds)
  done (took 2.268164441 seconds)
done (took 28.442447328 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082497133 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069647692 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073689273 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081427184 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07403224 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07952963 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067837602 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074957088 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072464176 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07366056 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075233857 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068421064 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071121519 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067301407 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073909662 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068130194 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079571304 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072326863 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079226581 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079966464 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070449704 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073579686 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074767735 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07946795 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079320214 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079343547 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077905142 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073139469 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069585799 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07120406 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077315796 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084326645 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069162419 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079830289 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068107102 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068019723 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071501923 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068137047 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07973677 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07713826 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069871513 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076486281 seconds)
  done (took 4.763836025 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091844756 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091546567 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084999465 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061560336 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066486709 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065157314 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089127547 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060216732 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060163647 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08815193 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05626992 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059607155 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063084263 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054306145 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059510804 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057039463 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06190252 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056065986 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059730711 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059701066 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058396536 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054619872 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060349337 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062851364 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059424182 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061946883 seconds)
  done (took 3.374580207 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077647246 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084811313 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088429798 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128213192 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104171402 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077181791 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078631529 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092584774 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085374157 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067092414 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071389144 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093777608 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088502754 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073928447 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067838023 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084874098 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.09348024 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069344353 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073440587 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091288477 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084730485 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083649705 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093491387 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08134856 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067197916 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070205582 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071948616 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081477824 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07244235 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076670708 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072430455 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071266109 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069750059 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078869906 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071342929 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069451536 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090732794 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077438804 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078042048 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068409347 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071055319 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068893242 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090218611 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12311775 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067211117 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074568771 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075550367 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076817051 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067617692 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08620786 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078926635 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06725385 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070561782 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067036675 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06770467 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080586514 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06985109 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070493973 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07687083 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07095652 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085769724 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071825116 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083222523 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067796977 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075202103 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066851764 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068504784 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066481323 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093018815 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069213054 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108836338 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069200555 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06870916 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07641272 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075818703 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073730179 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068134947 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082425861 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078041595 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071088785 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076236518 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070999648 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070617986 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087735193 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069945192 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069217685 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068770334 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074119991 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070222023 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06938508 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080583849 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067933096 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07064361 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084184228 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06764302 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068849918 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073342278 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072763479 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067087027 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078508446 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072863449 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068894897 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077031684 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067689623 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071200472 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078094582 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074250829 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066878499 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072525767 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074078646 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068117054 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068718354 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070142619 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068874279 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076313919 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073740717 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071707277 seconds)
  done (took 10.617546239 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165656173 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154812515 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071093426 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145518212 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076877931 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079623443 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148690384 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095168297 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068173206 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068730558 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069420869 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110245542 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10700608 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116012885 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078971698 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068189164 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083998746 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114607322 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151036624 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143851733 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084236478 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077225016 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070584191 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069368987 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070901863 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078846509 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085569141 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076918835 seconds)
  done (took 4.43737215 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084736601 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097725015 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074448021 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090105232 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092066067 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067947571 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070415263 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070350004 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081244839 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078790785 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067673303 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073701061 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075074892 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071358273 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069064069 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074914389 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075429359 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069755575 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071202855 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073444076 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077810158 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08083956 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072537902 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067408098 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074189355 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067175425 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064496907 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084670157 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068276918 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090306827 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066073702 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074851802 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081869061 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069005179 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068028558 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068015445 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067577269 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067823193 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069488203 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066664288 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066686591 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058109562 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06736892 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080095933 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074129616 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056881337 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072857302 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072972539 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072952497 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065938432 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070851006 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070747651 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071465647 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075182582 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072835073 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072768567 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069038168 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065840309 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075276257 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06763324 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064939646 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066542263 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072251995 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066232395 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07546944 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07255114 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066362338 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067371549 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069576119 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073802366 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067590302 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071010305 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065415558 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069654572 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072579361 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069564662 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068886421 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066173945 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067658814 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067994124 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056063847 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067925582 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054214515 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070699647 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066083655 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066537844 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067798562 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072515532 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079686804 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069134833 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073372833 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068526137 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066857641 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070496421 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060370313 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070741075 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083065249 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082655536 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067807013 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065818135 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082297477 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072767906 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066763534 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056382561 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076190326 seconds)
  done (took 9.186106453 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093214676 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070224427 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084856582 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091950319 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086532778 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075204079 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077170474 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069331711 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082478134 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073844943 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076743137 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068532447 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077141148 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077121485 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070402807 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07727769 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072704966 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083735116 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082308784 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069408003 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076701028 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080316481 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089600166 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080626432 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078730445 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080472091 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089615116 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072371815 seconds)
  done (took 3.91811681 seconds)
done (took 37.954508975 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.731036108 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.919355008 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.73788553 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.127163055 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.812258204 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.967866305 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.83887778 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.73200621 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.843082189 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.774396717 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.981134741 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.781478626 seconds)
done (took 64.915233624 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.790942694 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.873288919 seconds)
    (2/2) benchmarking "String"...
    done (took 2.00761406 seconds)
  done (took 5.556089949 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.055227269 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.45134882 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.979531864 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.733086756 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.7382858 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.040246259 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.541965749 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.269788139 seconds)
  done (took 30.426641391 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.825022714 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.966332598 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.437263021 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.434413989 seconds)
  done (took 15.381031007 seconds)
done (took 62.96882133 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.766428751 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.76441928 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.760120971 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.714768247 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.79039264 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.740044072 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.073155763 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.749559627 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.730359797 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.721463279 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.734642313 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.168582758 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.745401043 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.135043435 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.733388393 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.742257987 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.737923661 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.245401171 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.88948796 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.748339701 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.747952468 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.780182677 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.732187756 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.740874664 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.74480531 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.733854101 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.172024146 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.741208578 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.357673164 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.735406659 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.762455729 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.288574451 seconds)
  done (took 202.900425262 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.737740238 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.85015024 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.992880969 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.77758128 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.408388952 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.913028746 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.850682648 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.445143788 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.732790984 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.761468502 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.953971097 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.734809225 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.989009215 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.728799896 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.785704121 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.740876936 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.016941316 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.038199574 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.786136314 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.896614323 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.737438411 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.913120175 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.877329929 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.96490876 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.765341085 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.814992475 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.744690732 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.745265405 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.928711763 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.989593459 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.77089506 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.742980421 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.865227816 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.609702889 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.760626094 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.764136235 seconds)
  done (took 169.810037839 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.895920125 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.738234395 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.736683434 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.737189815 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.743353814 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.74255772 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.859450732 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.859764936 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.193884917 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.181643158 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.741418775 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.78829796 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561094222 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.734307496 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806445208 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.747275106 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.734796085 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.75250042 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.764030175 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.738185629 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.739740635 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.862929573 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.748593994 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.896792363 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.74094947 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.73799532 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.744368947 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.108821258 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.735038293 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.742783578 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.984650167 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.740466654 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.740047678 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.643339301 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.119591502 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.00694146 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.735145922 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741372876 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.744964302 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.737568095 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.969890522 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.738712678 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.739492431 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.738963388 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.741425671 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.028734105 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.736468673 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.863059956 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.736298175 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.260406084 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.736650358 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.738427379 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.480348792 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.465212669 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.738739202 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.739040204 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.742017817 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.738607151 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.739383096 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.745818942 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.488661847 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.817686068 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.738830953 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.744258426 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747320215 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.741595847 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.755310314 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.740175157 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.13742531 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.800201889 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.953196502 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858760026 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.740496691 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809066858 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.832832306 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.73747321 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.742087418 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.740755149 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.741380299 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.822403998 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.738119826 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.900235456 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.746891403 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.741562691 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.79381405 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.810061702 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.738457799 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.642877524 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.74074979 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.742185064 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.064841104 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.806256794 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.73874515 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.740938799 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742775795 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.740661235 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.873772571 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.860968272 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.539491842 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.742248666 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.4614847 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.739596584 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.893132336 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.740227037 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.93772117 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.743264871 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.8257263 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743823788 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.742481671 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.745413244 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.773234066 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.741409854 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.802959587 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.738898226 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.112276039 seconds)
  done (took 399.399974445 seconds)
done (took 775.736674632 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.422405327 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.390141319 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.503189315 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.416043743 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.38799479 seconds)
  done (took 13.799625844 seconds)
done (took 15.483293181 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.836157496 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.834361381 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.766233261 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.83345461 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.761935221 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.828814098 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.816217624 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.766989721 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.80177471 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.766922234 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.798967354 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.767423851 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757185716 seconds)
  done (took 25.015525537 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.97926767 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.985868974 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.813691696 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.992545376 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791767547 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.98503314 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.908134037 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.897794434 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.906161433 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.759567916 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757754125 seconds)
  done (took 22.459126646 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987189517 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.983206965 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.821075995 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.986713483 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.793688724 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.98769157 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.913929722 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.900979309 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.897980285 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.759778581 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.756676315 seconds)
  done (took 22.469466443 seconds)
done (took 71.624615407 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.754070567 seconds)
  done (took 3.435506107 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.77751722 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.911631943 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.757003315 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.757224957 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.751792459 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.753222023 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.755554038 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.753025475 seconds)
  done (took 15.90094487 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.751445103 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.751226757 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.754257697 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.753987906 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.75256273 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.752690293 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.751286073 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.750994803 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.752933724 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.753532554 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.754258822 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.755225601 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.754111499 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.750361576 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.752297616 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.753190102 seconds)
  done (took 29.728322106 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.756739532 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.751553577 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.751897268 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.751041293 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.750999711 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.752801355 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.756283366 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.751078489 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.75070298 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.751549985 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.752594407 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.75296761 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.752847412 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.751777404 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.751938185 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.751661486 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.751390442 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.753382626 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.757523184 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.75222701 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.753340878 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.75115327 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.754118379 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.75421979 seconds)
  done (took 43.752972145 seconds)
done (took 94.497911472 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.669931074 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.191954252 seconds)
  done (took 8.54661554 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.757871941 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.755192802 seconds)
  done (took 5.241210652 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.754944251 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.756234675 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.755298159 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.756049377 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.75654647 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.755402649 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.756458642 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.756248279 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.756096735 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.756707296 seconds)
  done (took 19.245559598 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.757210794 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.75844923 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.754664407 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.755648523 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.757626681 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.752873316 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.754091426 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.756661724 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.754919294 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.752612081 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.755936148 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.753160956 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.756375032 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.754188822 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.756144494 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.755278101 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.754140699 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.752992398 seconds)
  done (took 33.2799395 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.755798032 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.756502269 seconds)
  done (took 5.19997568 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.753886807 seconds)
    (2/7) benchmarking "second"...
    done (took 1.754132926 seconds)
    (3/7) benchmarking "month"...
    done (took 1.754592799 seconds)
    (4/7) benchmarking "year"...
    done (took 1.754491455 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.754006343 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.754452576 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.753923232 seconds)
  done (took 13.966604679 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.759675705 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.918565958 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.99300124 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.419853991 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.757940087 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.760766638 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.697762497 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.762401204 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.763738672 seconds)
  done (took 19.52156244 seconds)
done (took 106.684682233 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.582185994 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.751557935 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.119264876 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.811990307 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.806648483 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.095256867 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.796391492 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.975713804 seconds)
done (took 42.627029743 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.774514649 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.298671894 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.326937046 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.032364689 seconds)
  done (took 12.345160619 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.738356289 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.283457599 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.787347938 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.352577912 seconds)
  done (took 19.873349217 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.123017884 seconds)
    (2/2) benchmarking "read"...
    done (took 2.112945357 seconds)
  done (took 5.929121488 seconds)
done (took 46.611783845 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759865838 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.759141805 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.759178308 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.758072144 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.758184028 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.756556574 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.757162591 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.761070127 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.756609114 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.760118324 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.760741925 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.761229332 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759477101 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756959411 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758084607 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761351837 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.758766878 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.757676897 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757766453 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758138941 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760683692 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.757370385 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.757994534 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.76114067 seconds)
  done (took 43.900912103 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.761438669 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.759426292 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.760449102 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.762246901 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.758250686 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.761230371 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.761009537 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.759290478 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.76080874 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.761609677 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758978352 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.758811071 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.760287975 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.757024265 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761674686 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.757734142 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.761801475 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758985592 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762191566 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.758405663 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.761466903 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757726223 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.759230754 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.763270576 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.758125891 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.75729828 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.760450389 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.759981052 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762153217 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.759149647 seconds)
  done (took 54.491186807 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.766432368 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.770401688 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.761110177 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.762610578 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.762921815 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.760657523 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.76149599 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.763300465 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.761822558 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.762793057 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.761904215 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.763789761 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.762066943 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.760972855 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.761536167 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.762373245 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.762473215 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.760840752 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.762707965 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.762540715 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.762728099 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.76255586 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.76335655 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.763293399 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.76300146 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.763048094 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.76221329 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.763092932 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.762494427 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.762732418 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.763775321 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.762086239 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.763198575 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.763636082 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.763491269 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.764565915 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.768551938 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.77152581 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.764660808 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.764671297 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.765252917 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.763913318 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.763760934 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.765093028 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.762171479 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.763066893 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.76516649 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.765148406 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.765271321 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.765626453 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.765680598 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.76492147 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.764307251 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.765640558 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.766134969 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.766367062 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.765995809 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.766026779 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.765444992 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.766008862 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.766148732 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.765015344 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.766585298 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.766265903 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.76689325 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.7648428 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.764830106 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.764842973 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.765037231 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.764723497 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.765453444 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.765697803 seconds)
  done (took 128.713886439 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.765570827 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.760132611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.760099208 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.759190886 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760020329 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.761240936 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.76038457 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760650006 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760201644 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.7618576 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762869276 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.760465302 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760594655 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.763277962 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761035118 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.76108687 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.762591991 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758682046 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.763929495 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.762229426 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760833447 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.75949717 seconds)
  done (took 40.442511419 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.76316602 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.764110896 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.75767971 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.761194754 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.758623078 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76119951 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.764624977 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.760681396 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760305633 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760059183 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759759704 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761982129 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759375962 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756196139 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758219336 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.756583302 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760712359 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.757394126 seconds)
  done (took 33.374359011 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.757871866 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.757167993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.761363495 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.759726982 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.758002889 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.760446705 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757381954 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.760580072 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.760400701 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.757569724 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.760698949 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760102281 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.762179046 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758401186 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761534472 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.759334322 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.763314828 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754802735 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761085525 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.757723502 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.757586458 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759032459 seconds)
  done (took 40.40121869 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761672352 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.760183314 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.758466727 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.758109519 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.763420778 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.754761527 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.754633346 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.75447315 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.756057191 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.755177769 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754220781 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.755245432 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.752395144 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.752715846 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.751190084 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752727664 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.756152849 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.751342776 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752752256 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.749422948 seconds)
  done (took 36.797509823 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.753474878 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.751136925 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.748978572 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749568429 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750042919 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.748447271 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755372875 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.749816785 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750952208 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.751643925 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.747442469 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.747734057 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.75081385 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.750810642 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750333134 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750836841 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750860847 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75095645 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.750578386 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750442414 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.750232901 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749505257 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.749608271 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.750017832 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.749248118 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.749275917 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750310485 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.751545006 seconds)
  done (took 50.694104632 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751286011 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.750226359 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.746399411 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.74812409 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.746840109 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.746235564 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.747600928 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.749544925 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.74930501 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.747287564 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.748087426 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.74921914 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.749126088 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.750369423 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.750130558 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.749841185 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75085075 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.747457316 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748598097 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748667657 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.750844396 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750850496 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.749765215 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.749517132 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749546694 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.751664979 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748324939 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.75036644 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752466699 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.753105586 seconds)
  done (took 54.162422936 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.771028806 seconds)
    (2/2) benchmarking "in"...
    done (took 1.769778496 seconds)
  done (took 5.219743222 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.752632849 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749651064 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.7519754 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.750000958 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.749626627 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.750832523 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.755461024 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749533556 seconds)
  done (took 15.690008213 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.751848952 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.750891754 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.751824862 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.754810585 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.752018089 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.75238308 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758545034 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.75388716 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.753192084 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.754523286 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.758843859 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.76184335 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.754651305 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.751064473 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.751620743 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.752945353 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.752034588 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.752855953 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.753202537 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.7540458 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.753778767 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.753658509 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.753264063 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.749099259 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.753725866 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.761988673 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.755648046 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.751433933 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.751184008 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.755145972 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.751683772 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.752638701 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.753108084 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.753952852 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.752932445 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.751493599 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.758991762 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.755688715 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.753691488 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.751707821 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.752037454 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.748344346 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.750361449 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.752687003 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.749386453 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.748802646 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.749951247 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.746284331 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.749815612 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.753900363 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.758062799 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749169928 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.745616181 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751689089 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.752107153 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752724928 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.749154172 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.751823898 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.759765671 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.75900878 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.766014964 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.75762633 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.749060562 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.749351048 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.75828696 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.774538673 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757654549 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.746917448 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.744879444 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.749616079 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.754649164 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.764180511 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.761037436 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.747897549 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748712122 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.747501639 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.747771131 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.749942295 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.754789817 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.753195585 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.749247219 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.749381166 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.759792419 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778570009 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.750438271 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.750357744 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.751126199 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.750876889 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.751546231 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.758544216 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.749480919 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.749638174 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.748120642 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.748175532 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.750064047 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.749164995 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.748166616 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749806086 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.745310595 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.750438035 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.750482704 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751868141 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.760494495 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.751994865 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.749911811 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.755555469 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.749977527 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749118959 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.754704526 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.749403126 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749738649 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.752676111 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.757122273 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.74697583 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753297177 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.759871378 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.749532218 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.751158024 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.749640299 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.75029705 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.758017291 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.778311409 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.750038629 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.751675407 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.754742729 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.764571412 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751719491 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.751521669 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.753247969 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.746581327 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.746999032 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.749918298 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.749941684 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.749670179 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.753357868 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748883033 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.745199744 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.748390571 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.749825916 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.749010287 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.750466219 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.747345129 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.748313324 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.751107816 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.748455183 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.748688267 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.75453248 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.747517971 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.748854712 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.748529875 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.745088626 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748437855 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.747443776 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.745839831 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.7453862 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746987023 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.746869411 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.747689759 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745678394 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.745264455 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.74508468 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.745855938 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749360486 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.749520941 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.748514796 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.743957762 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.742809336 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.743916209 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.747407287 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.742110409 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.742847349 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.739838972 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.746058398 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.751526162 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.744269283 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.742567026 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.746430131 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.742578286 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.743507768 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.743777092 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.749252819 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.751955105 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.742435875 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.749275401 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.74324735 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.744337619 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.745189353 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.74146078 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.741203226 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.741481505 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.745929105 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.754396887 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754379529 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.752761046 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.743022958 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.747468965 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.743649184 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.751024185 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.745762493 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.743843214 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.742620176 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.742855025 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.741598041 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.743522902 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.742152202 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.740632985 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.741078949 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.740220267 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.741162201 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.742858941 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.742257236 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.741909658 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.741130932 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.738616002 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74153465 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.740685059 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.741619543 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.737465608 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.738155133 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.740824649 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.74235596 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.74049781 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.7479154 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.737653916 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.742041958 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741967279 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.742075508 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.740038742 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.741871738 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.743015557 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.740880851 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.745105687 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.741372093 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.741503934 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745513013 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.74075033 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.741547471 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.744003447 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.739181919 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.738137829 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.743788817 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.749190178 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.741295031 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.742054404 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.740052764 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.74221876 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.740590474 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.745294096 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.738301766 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.741961289 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.740598744 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.743374869 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.739231888 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.740614743 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.741843429 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.744806124 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.742384302 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.742445086 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.741050013 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.741053031 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.743682604 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.740416733 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.742092031 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.743477274 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.749967775 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.744766759 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.742120817 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.7425485 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.742382288 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.743343124 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.740704896 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.738559683 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.740812097 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.751982872 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.750336266 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746792495 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.740995741 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.743291049 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.743098942 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.740247238 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.743848158 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.738983843 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.740235973 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.741994171 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.739189873 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.737331248 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.739782389 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.740655115 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.740952833 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.745430695 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.74260974 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.740588838 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.740418482 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.739275437 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.739692286 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.745085919 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.739748331 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.740533261 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.741616449 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.741169648 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.741683916 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.738347665 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.745347957 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.740444154 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.74267512 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.738646237 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.742847266 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.740388324 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.741209902 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.738705762 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.743381524 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.748864177 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.747513061 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.750136852 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.740412466 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747214843 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.740998753 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.742373967 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.75141101 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.737088895 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.739245296 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.740209829 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.740025523 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749641141 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.73973473 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.739875374 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.743672963 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.739419634 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.739711559 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.744230895 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.738941242 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.738882906 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.740122015 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.746897135 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.740275394 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.746154178 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.739934428 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.736942613 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.739356923 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.738547336 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.738739959 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.746179128 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.738519893 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.7415973 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.739134127 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.739588785 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.742498801 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.739089982 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.738868098 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.737122123 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.740542756 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.745214436 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.745148047 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.744151981 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.740070939 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.747016001 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.739561514 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.746232139 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.746776603 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.739077593 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.740106134 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.740514321 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.742447435 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.739187964 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.744801739 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.740185078 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.740399912 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.742727063 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.741288566 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.745959844 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.73979771 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.739572321 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.738836983 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.74900699 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.76149005 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.743667788 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743458979 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.736563695 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.740508308 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.743292178 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.739980291 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.739432702 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.741407765 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.748860069 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.74614096 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.739792556 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.74190151 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.741817201 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.741162994 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.740524976 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.740007159 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.739982648 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.741393436 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.741041046 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.740583834 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.744710275 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.740634397 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.741482172 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741228077 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.740497659 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.748416511 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.741507496 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.740957325 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739381436 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.742887946 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.739677659 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.740136584 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.74206199 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.740934297 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.740241143 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.742757319 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.747078133 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.746734499 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.743387298 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.739653206 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.742218228 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.740679853 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.741580967 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.742835287 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.74149479 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.742693226 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.744086462 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.742131127 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.74124954 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.741246483 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.740711862 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.741103468 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744764111 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.745006802 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.747202997 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.74236586 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.738352918 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.741671412 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.743630941 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.742906844 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.742500055 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.749291916 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.744577539 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.753203965 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.750069425 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.747039465 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.744148227 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.744289536 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.750716952 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.745840623 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.744252193 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.743411054 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.744861642 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.744868043 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.746774954 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.746609492 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.749000126 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.742755548 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.744442961 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.750410873 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.747173297 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744559051 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.745566845 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.746123755 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.742994003 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.742513804 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.745633288 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.744441722 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74904964 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.74444042 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.745399118 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.746707055 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.74432946 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.745191912 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748213241 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.744523938 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.743344536 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.741230021 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.745330452 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.74540803 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.745719837 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.743003225 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.744201431 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.744622903 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.749719529 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.749990318 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.741484667 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.74654953 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.744513195 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.74459997 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.744473926 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745783654 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.743319777 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.741244343 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.744627588 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.746492571 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.746241641 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.74691864 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.745704755 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.745835121 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.746305305 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.746973174 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.748456542 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.754118495 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.752553829 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.74200193 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.745264395 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.746108239 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.748982862 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.745911164 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.745776375 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.746145756 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.75052104 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.745471759 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74592506 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.745669549 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.748344451 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.759993207 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.748815045 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.748175008 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.746448619 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.749310374 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.745684745 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.746071007 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.746933116 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.748440468 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.750054999 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.753740457 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.747430774 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.752288227 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747631045 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.748296549 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.749889632 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.749580771 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.753953505 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.749269508 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.74774528 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.747494419 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.749147214 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.762501317 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.747002162 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755360492 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.77266586 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.74897014 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.749356914 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.747656181 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747281031 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.747476663 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.750433352 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.750052372 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.747627863 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748482991 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.748897267 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.748612859 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754843552 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.751260636 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.74834045 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.749446714 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.749152333 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.750392949 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.74615396 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.748611726 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.748696981 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.750132669 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.749381077 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.750317792 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.749825196 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.760531385 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.756312823 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.748700907 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.748245752 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.745961034 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.751377695 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.750338629 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757472852 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.754560496 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.749676784 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.749896979 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.751491014 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.749248613 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.747741687 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.750884215 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.748564767 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750433845 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.747554668 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.761489869 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.756548414 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.753370358 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.750152224 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.75165427 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.749794178 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.750590108 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748923092 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.75021543 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.751015255 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.752504522 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.753404751 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.750492085 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.751048769 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.752058223 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.758209416 seconds)
  done (took 1042.785208868 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.749134672 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749365327 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.749143496 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.749636319 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.748567687 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.747922279 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747741525 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.750015191 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.74834198 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.749607672 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.748296562 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74803905 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.748699513 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.748845256 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.749520845 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.750189353 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.749812014 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.748331869 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.750794053 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.748805714 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.748589082 seconds)
  done (took 38.412064689 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.75130179 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.748864843 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.748794616 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.751194361 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750466307 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.750670061 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.749234996 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751663687 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752265491 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748783016 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.751595226 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751883676 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.750289838 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.750162714 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751562189 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752696413 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.75427462 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749521004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.752700497 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.749698829 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752973986 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.749247281 seconds)
  done (took 40.204079454 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.752687085 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.75275493 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.752133295 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.752088277 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.75516736 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.750636648 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.754398759 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.753821846 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.753814154 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.756019735 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.7538607 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.756022885 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.761202678 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.757533983 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.757633862 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.756261263 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.899106831 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.755279208 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.755972685 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.755212518 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.75266572 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.759346002 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.753228713 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.751823803 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.754095326 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.757167547 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.754443022 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.755440025 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.754605574 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.755225693 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.759119467 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.75612105 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.754941374 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.757238231 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.753855142 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.754797048 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.759477438 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.75577204 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.753129786 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.755152553 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.76330612 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.77442906 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.7573465 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.761066812 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.755884235 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.757281276 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.758807452 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.762273163 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.752752399 seconds)
  done (took 87.876867414 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.755895588 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.756491592 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.752634915 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.757036735 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.755199932 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.756235316 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.756328294 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.756374151 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.753345802 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.754387499 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.755625731 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.75509403 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.753845928 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.756156048 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.75720428 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.754570514 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.756608134 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.754880454 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.754471233 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.754251135 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.754828944 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.757011627 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.756571428 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.755422681 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.758706889 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.754800273 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.755056808 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.756403624 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.756489415 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.755330139 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.756801283 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.75743571 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.756400779 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.754526858 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.75528222 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.758209998 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.757892058 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.755658882 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.757381341 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.754501729 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.758202759 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.758229736 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.757398769 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.759415508 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.757320565 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.75722838 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.757755369 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.757240722 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.758376917 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.760082116 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.760050814 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.756742272 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.759540566 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.757742956 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.759887381 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.75968996 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.757142827 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.757343457 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.761320695 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.757223011 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.757806552 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.761186677 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.757495944 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.76072998 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.759982906 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.758310754 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.757706466 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.760308038 seconds)
  done (took 121.163216017 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.761369037 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.760020211 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761013366 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760682404 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.761459551 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.760477325 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.761426683 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.761245458 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.76167268 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.761696328 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761350301 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.761681652 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.760293595 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.759307522 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.759659834 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.760342081 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.761161259 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760633993 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.761787774 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.762172541 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.761661744 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.761654713 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.761534354 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.760545484 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.761609409 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.76093118 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.760811718 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.760716555 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760862921 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.761534488 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.762784974 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.761925371 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.761004301 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.762098301 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.763304075 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.762122073 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.760856104 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762377307 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.761569014 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.762589661 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.763461864 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.76336976 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.761398232 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.762342973 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763605258 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.762917509 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.761331815 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.762680366 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.761312211 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.762986631 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.762070229 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.762801716 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761178618 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.76156623 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.763060139 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.762795396 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762457435 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761969062 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763635483 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.763242727 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763259888 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.76159524 seconds)
  done (took 110.92088211 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764418515 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.761987095 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.760420674 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.761211497 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.763349225 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.760347123 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76287349 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.763342565 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.762088828 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.764092085 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762336267 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760843681 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761201999 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763810916 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.761106677 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761661187 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762969685 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.760351446 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764278012 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.761465015 seconds)
  done (took 36.936946616 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.759601883 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.762370648 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.760381151 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.76105442 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.763733661 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.761506118 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.764540675 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763439895 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761460916 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765378857 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.766160624 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.764985437 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761483607 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.762411161 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.76561907 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.762593247 seconds)
  done (took 29.900682183 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.763117474 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.764380598 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.765452569 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.765281089 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.763228639 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.762875483 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.765430936 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.762079885 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.762427601 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.766061101 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.765960251 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.765314367 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.764114913 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.766299439 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.762994125 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.764011978 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.763291963 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.762711537 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.76518101 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.766044122 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.764457863 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.764227216 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.767300131 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.766424106 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.764817997 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.765325256 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.763205452 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.763895895 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.763074418 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.765145231 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.763826951 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.764199982 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.762488772 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.764308101 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.767375069 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.764402019 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.766106349 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.765585767 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.76595871 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.766138546 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.765758061 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.763834839 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.766778559 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.76668923 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.763294287 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.768744432 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.764389878 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.765948703 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.76458846 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.763686931 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.767050398 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.767847366 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.767259906 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.768292861 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.766755707 seconds)
  done (took 98.772925298 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768145101 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.765700179 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.765588091 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.768961386 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.766916178 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.765715665 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.76820086 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.76448307 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764117589 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.767147768 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.766710992 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.768146707 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767199378 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.767361508 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.765964973 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76693909 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.765406654 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.764351305 seconds)
  done (took 33.493999906 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.767360654 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766384555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.768616744 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.765652416 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.76586623 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.768857602 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767253313 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.768148548 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768262028 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.767117716 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766893554 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.768834995 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770137054 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.769202851 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.766983507 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766123049 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.769938181 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.770055596 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.767681382 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767378677 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768921635 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767890089 seconds)
  done (took 40.593247459 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.768851434 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.769250769 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.784125404 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.786850115 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.789539832 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.798805749 seconds)
  done (took 12.39770198 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768360299 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769991686 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.767449737 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77014878 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770658074 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768532917 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7663683 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767799716 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769600947 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767657068 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767925207 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770415968 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770467098 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768342069 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771394305 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770704535 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767777982 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767266838 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769273013 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769828118 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766722219 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77083214 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767354205 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768733613 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769336218 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768623781 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772436004 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769326951 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768884968 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771744754 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771605427 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768337176 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771112586 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770427639 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773385252 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771893975 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769030911 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772078949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773879555 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768627378 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.771583705 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772598743 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772135364 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769845785 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772907037 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769192253 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770103651 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76945457 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769819791 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772529767 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772677729 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769326908 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773159374 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772845975 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772220945 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770933688 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771342181 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770835726 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771927753 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770717514 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769883087 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77323025 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770603387 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770885354 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772540524 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770251678 seconds)
  done (took 118.540592121 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770482669 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.769979894 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771885638 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772315793 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771190257 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770949474 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771776449 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771304208 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772033389 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772687222 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77395368 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772008667 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772478361 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772156301 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772936702 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773240182 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772209472 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772310908 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770595857 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775636674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773192901 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772287365 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773430751 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772783522 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772071845 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775790767 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771807121 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771879641 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774583899 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772672953 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772888381 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772256912 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772151698 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.771696009 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772542281 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772722735 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77358102 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773835024 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772556646 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775857869 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773119135 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775470708 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772976382 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773910529 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772908159 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772417234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773936594 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774380921 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773350858 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773440835 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773166614 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774101071 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77367159 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773956882 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773852012 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772664493 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774520305 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773354113 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773995546 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776791919 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774298216 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774393428 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776567449 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775297325 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773798707 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773195957 seconds)
  done (took 118.732096875 seconds)
done (took 2436.306663381 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.824937314 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.796443519 seconds)
  done (took 15.326472678 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.938167116 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.889450484 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.777124885 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.809413394 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.773352155 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.770461013 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.794662777 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.775171714 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.775368468 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.775449635 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.776398454 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.962764249 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.775116441 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.772413546 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.77571967 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.873865515 seconds)
  done (took 50.728592635 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.780497812 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.779694995 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.791822527 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.782419125 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.781028427 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.792641499 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.812619968 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.782412965 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.813496899 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.793391296 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.847615477 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.789466409 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.779222701 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.828623266 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.79202728 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.798292701 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.867797069 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.85157223 seconds)
  done (took 34.171680244 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.856308775 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.790650431 seconds)
  done (took 10.362252965 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.810096235 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.783447968 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.775724134 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.80038653 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.779853342 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.81969377 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.803062331 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.810379363 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.795764553 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.799928867 seconds)
  done (took 69.691895291 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.785761263 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.783002518 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.781211761 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.778520401 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.773506331 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.774826811 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.780846147 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.776927787 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.453568426 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.817614965 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.785964894 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.785801241 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.780644119 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.783405662 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.778771398 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.806248459 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.90747658 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.779492451 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.77726178 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.786409443 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.78112723 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.844431804 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.793350497 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.781034183 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.809491877 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.457178925 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.790494354 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.787093773 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.906362182 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.779902739 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.779815876 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.783306764 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.783837441 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.169108399 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.060322456 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.776820398 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.78835213 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.789435244 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.77913093 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.904661243 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.782383368 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.786269636 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.757726327 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.036136926 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.877730839 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.822142831 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.136023247 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.787425562 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.783473222 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.813545659 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.783069583 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.7843046 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.797368435 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.299307574 seconds)
  done (took 127.784112925 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.777705361 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.073632647 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931705065 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.776948271 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050445018 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98128779 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.722439393 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.826602179 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.776936119 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.981209508 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.938704648 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.88354214 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.776988263 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.775857538 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.774233539 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.779125649 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.938013848 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.842983811 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.779134341 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.775088595 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804866039 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986853999 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.90413937 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.779281307 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.797993728 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.988775967 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.902154199 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.882088005 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.055372601 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.775011293 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8423896 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.779298495 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.777878644 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.778685289 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.933724451 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.872536512 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.870490911 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.781095342 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.775951937 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777535497 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.43948648 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.973819691 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.875723639 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.921121203 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.972674711 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.982047607 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.425506389 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.776895892 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.413732225 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.940536841 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.991669863 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.988345547 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.901823086 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.779210268 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.014201875 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.777974734 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.778772688 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.014806259 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926384262 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.885098029 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.778541107 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.777810196 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.776147255 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.022690477 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.779730836 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.876758421 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.778978216 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.777542738 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.880486929 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.887766508 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.920560386 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991505081 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.811615508 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.692352098 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.28406684 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.994889886 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.847411534 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016754889 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.780524758 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.777971892 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865615702 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.533780008 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.940725611 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.030512447 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001749849 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815140575 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.374682801 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.779958777 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.976137833 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.9689292 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.976422845 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.989377137 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.931198367 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.965129534 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.779652749 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.779118853 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.021865154 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.916119518 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.784337499 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.139703816 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.014443436 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.355444051 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.803400975 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.073278823 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.914695018 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.147942774 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.407816152 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.782882866 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.947621715 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.820189105 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.782521452 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.781879686 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.972121386 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.588337168 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.780335695 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.299370884 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.845051893 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.780920203 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984819813 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.783516571 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.990629417 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.784415136 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018813591 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.939756102 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.814143806 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.953910357 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.987845176 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.57541529 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.028248325 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.027532163 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.901184285 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.005345375 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.373762209 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.782460098 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058081987 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.781623813 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.780876979 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.949971333 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.784203395 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.931784102 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.784366072 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.010761793 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808366425 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937920858 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.783613714 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.017412626 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.81702644 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.835861997 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.785861677 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.914428801 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787459508 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.676111618 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.938669892 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.786738135 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.781698153 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.215553999 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.783541598 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.929467405 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.01516632 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807278389 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852191069 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.310685597 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.784732344 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869871401 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.810714735 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.201871914 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.782909269 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.940501953 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.725998283 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.216654288 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.78367785 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.026305782 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.967784958 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.785051885 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.782458597 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.526621727 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.470710724 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.784660212 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.943299823 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.126586366 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.439617116 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987073312 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787452101 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.911137286 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.785050514 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.860809046 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.134280259 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.784288369 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.784344866 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.785824361 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.785473399 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.783652032 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.994033273 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.817691976 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.279892843 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.921066236 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.00170311 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.095120218 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.006200264 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.830451125 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.789464367 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.049770119 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.787280681 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.851147841 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.787653873 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809664834 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018648796 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.78808899 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.001200089 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.040154038 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.687384835 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.838761227 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.78856573 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.78684602 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.784815425 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.936330054 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881279906 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.787552406 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.787277607 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.897301205 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.913248479 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980278349 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.376185165 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.965390907 seconds)
  done (took 878.313646302 seconds)
done (took 1188.084095563 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.788853614 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.789009671 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.775663996 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.789982444 seconds)
  done (took 28.865445845 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.79744192 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.796867615 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.797409955 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.797356936 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.798536175 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.798846341 seconds)
  done (took 12.512178169 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.846608592 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.790104439 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.788500544 seconds)
  done (took 21.150915867 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.869741467 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.198834395 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.909459831 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.231672166 seconds)
  done (took 9.935630984 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.796968153 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.798845299 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.796173181 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.796920632 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.799180371 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.800341249 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.797571214 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.797804746 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.801774461 seconds)
  done (took 17.913064219 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.188256019 seconds)
done (took 96.286224112 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.829743616 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.983376638 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.797756811 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.832000163 seconds)
    (5/309) benchmarking ("sort", BigInt, false)...
    done (took 6.797016701 seconds)
    (6/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.327504664 seconds)
    (7/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.931384949 seconds)
    (8/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.744690101 seconds)
    (9/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.328709087 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.953137381 seconds)
    (11/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.801513527 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.856389981 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.837259138 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.823034866 seconds)
    (15/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.995065838 seconds)
    (16/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.210042162 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.591689409 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.787754353 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.135584578 seconds)
    (20/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.806025588 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.11840423 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.991493468 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.78608137 seconds)
    (24/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.859538629 seconds)
    (25/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 8.365001605 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.072314537 seconds)
    (27/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.929954095 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.884502857 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.483157623 seconds)
    (30/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.83590712 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.896023209 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.901888432 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.170624496 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.783422125 seconds)
    (35/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.929172548 seconds)
    (36/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.977118529 seconds)
    (37/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.011794864 seconds)
    (38/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.976409552 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.821280128 seconds)
    (40/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.363466523 seconds)
    (41/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.241825112 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.260595009 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.796892951 seconds)
    (44/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.744198698 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.345761273 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.82341659 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.908527806 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.920135146 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.334724714 seconds)
    (50/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.483787464 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.063901523 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.845988661 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.875454684 seconds)
    (54/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.815484929 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.869953493 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.895564289 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.255039186 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.496806229 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.630025694 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.862357441 seconds)
    (61/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.94386584 seconds)
    (62/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.860968936 seconds)
    (63/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.320487962 seconds)
    (64/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.79796549 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.165857934 seconds)
    (66/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.971522167 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.085758869 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.74289511 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.106054649 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.796852607 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.163219426 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.101017582 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.855803136 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.903038477 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.875846358 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.903402089 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 5.491869259 seconds)
    (78/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.066960039 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.140487591 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.097069777 seconds)
    (81/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.887993695 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.78423069 seconds)
    (83/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.907349976 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.906365701 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.038345917 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.158646853 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.371206766 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.439139761 seconds)
    (89/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.996736492 seconds)
    (90/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.606471988 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.88106497 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.900215765 seconds)
    (93/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.900351008 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.896840803 seconds)
    (95/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.783789244 seconds)
    (96/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.565075261 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.723172965 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.805919674 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.970444136 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.787872275 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.176177923 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.791251666 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.871526313 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.826261056 seconds)
    (105/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.101451188 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.876954759 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.9626961 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.040374038 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.470897051 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.923926124 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.812461184 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.066587844 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.012136804 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.807892546 seconds)
    (115/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.814121516 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.094372822 seconds)
    (117/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.392074332 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.190990889 seconds)
    (119/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.90400108 seconds)
    (120/309) benchmarking ("sort", Float32, false)...
    done (took 5.563802499 seconds)
    (121/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.883281749 seconds)
    (122/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.908253504 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.804294229 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.943118038 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 2.245286636 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.825902808 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.966305262 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.065704123 seconds)
    (129/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.981445721 seconds)
    (130/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.830069109 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.015836429 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.059943655 seconds)
    (133/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.884013404 seconds)
    (134/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.91330083 seconds)
    (135/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.904725243 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.138556985 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.791413488 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.833013499 seconds)
    (139/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.831231804 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.93187999 seconds)
    (141/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.930777564 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.136247853 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.831207284 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.053392439 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.997288934 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.48639834 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.696793817 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.062527527 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.023525687 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.002903846 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.831057752 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.076087467 seconds)
    (153/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.984145715 seconds)
    (154/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.872407732 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.184624667 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.447798955 seconds)
    (157/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.063622522 seconds)
    (158/309) benchmarking ("sort", Float64, false)...
    done (took 5.717322641 seconds)
    (159/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.082001948 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.94007155 seconds)
    (161/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.216635473 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.822240081 seconds)
    (163/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.306316746 seconds)
    (164/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.850291065 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.908740756 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.184696199 seconds)
    (167/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.894990966 seconds)
    (168/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.829492172 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.018580283 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.900223352 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.78889567 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.092593699 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.792662236 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.748239492 seconds)
    (175/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.95468186 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.804157016 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.886197669 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.031341435 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.095043044 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.813587193 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.321067303 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.098946441 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.786964293 seconds)
    (184/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.112142757 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.841288297 seconds)
    (186/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.312474972 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.914317628 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.802168635 seconds)
    (189/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.092686049 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.85544428 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.074173537 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.097709563 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.790710918 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.044040146 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.903591478 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.806558496 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.868503206 seconds)
    (198/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.196232751 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.45415532 seconds)
    (200/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.841531201 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.402853309 seconds)
    (202/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.170493858 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.205159338 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.688885377 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.712798715 seconds)
    (206/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.093008359 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.09204056 seconds)
    (208/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.817224781 seconds)
    (209/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.934504006 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.042028026 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.595756645 seconds)
    (212/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.803296715 seconds)
    (213/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.926855731 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.715786044 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.21581664 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.739628368 seconds)
    (217/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.388279814 seconds)
    (218/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.77246987 seconds)
    (219/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.410640806 seconds)
    (220/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.810227797 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.826499292 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.806678971 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.671794343 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.851862226 seconds)
    (225/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.962181723 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.809369177 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.806719222 seconds)
    (228/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.827885063 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.868922082 seconds)
    (230/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.944009533 seconds)
    (231/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.896031006 seconds)
    (232/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.891566304 seconds)
    (233/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.90468442 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.709385914 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.108533899 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.030976093 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.792335504 seconds)
    (238/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.188234817 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.811815215 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.211787098 seconds)
    (241/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.931828244 seconds)
    (242/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.987065374 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.188422875 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.695321301 seconds)
    (245/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.956028989 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.823589762 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.17212064 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.141040674 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.415266365 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.903214905 seconds)
    (251/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.950913291 seconds)
    (252/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.437727189 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.80384127 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.108346569 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.831314542 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.833540207 seconds)
    (257/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.933131463 seconds)
    (258/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.875844987 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.785956323 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.487778165 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.829713146 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.84648024 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.840146223 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.199917144 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.160255932 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.423082171 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.044012364 seconds)
    (268/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.883429075 seconds)
    (269/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.119397283 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.987609435 seconds)
    (271/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.004879165 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.907304073 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.028457108 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.185405914 seconds)
    (275/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.068990785 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.098585527 seconds)
    (277/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.961316364 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.199658678 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.133297085 seconds)
    (280/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.251821277 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.809138515 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.792895538 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.232734545 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.998261633 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.053678794 seconds)
    (286/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.794970288 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.547367664 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.813078179 seconds)
    (289/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.91766803 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.61619791 seconds)
    (291/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.029038103 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.964332942 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.151366657 seconds)
    (294/309) benchmarking ("sort", Int8, false)...
    done (took 4.784364336 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.590335271 seconds)
    (296/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.175532521 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.05769393 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.85623105 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.908612193 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.922432199 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.798617415 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 3.555110239 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.901146144 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.836767284 seconds)
    (305/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.895705654 seconds)
    (306/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.100086411 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.903113918 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.814802935 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.478387435 seconds)
  done (took 995.68893134 seconds)
done (took 997.713645465 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.843533162 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.839952774 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.821664485 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.843447529 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.936556334 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.854038088 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.833156183 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.824723066 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.868326778 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.87076001 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.821200385 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.852343885 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.826731913 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.828564694 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.823711249 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.83798065 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.134382907 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.84849466 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.840499291 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.830389221 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.837942759 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.821794948 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.873905267 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.854328216 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.825274599 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.829789249 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.825163405 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.842277407 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.937585642 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.828239303 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.829353423 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.835037275 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.134018411 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.847266736 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.819396246 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.843319336 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.837955094 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.832413897 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.82539742 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.8600185 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.271977437 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.825517866 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.825567123 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.826123213 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.829054034 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.82933232 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.826749511 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.830039534 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.836826845 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.837422632 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.269521894 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.843554472 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.826001428 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.82475152 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.837609363 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.829538338 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.827602178 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.843489577 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.846263512 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.844120079 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.126720075 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.852759839 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.827072699 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.843883245 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.833657994 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.308642065 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.822815937 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.829823355 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.274283526 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.83231883 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.304443073 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.836967578 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.824810738 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.839033583 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.858770803 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.134897917 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.844725279 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.823679445 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.834015263 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.823434441 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.834899008 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.8427726 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.829109706 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.825928481 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841285393 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.855496563 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.836290454 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.826227435 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.83526848 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.844394972 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.83520251 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.836529666 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.831669743 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.819282596 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.835919285 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.826154192 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.827070008 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.832307578 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.828432269 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.833927871 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.269133035 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845845905 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.822570148 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.821893278 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.826267367 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.842573344 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.270871326 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.832757653 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.847847464 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.873480758 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.826133581 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.124423396 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.852369969 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.847170448 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.833675562 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.829261604 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.819566783 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.123131412 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.297508876 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.845141859 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.828512121 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.827209737 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842244973 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.828429147 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.828944142 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.132562785 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.849357087 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.841339097 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.948897724 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.838319346 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.860361536 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.826655592 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.830859375 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.861982766 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.847521857 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.860925411 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.831125049 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.84300643 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.850028151 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.824982115 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.846672169 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.838973987 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.829425951 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.832916699 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.82386415 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.862277157 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.84110852 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.843645108 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.849520064 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.951169882 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.827589142 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.124721164 seconds)
done (took 287.287998395 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.896702123 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.816087239 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.921137952 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.824154304 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.910359897 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.908526545 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.821849725 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.821597692 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.822275701 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.203958969 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.825412742 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.822155199 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.818912714 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.821793683 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.906968161 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.824042483 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.822612577 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.164959455 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.83045996 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.89596703 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.820000497 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.820797731 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.827549698 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.236176026 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.820030345 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.826470231 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.903391597 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.825078239 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.172873135 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.822980991 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.821443358 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.174827379 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.914225036 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.843923437 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.83588314 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.8318519 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.9134598 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.828217238 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.908717294 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.909443532 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.922694337 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.870805858 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.825755651 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.824842311 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.829594041 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.826841588 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.821206216 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.855550335 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.817330019 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.825282305 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.167981778 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.83669382 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.83395902 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.823272226 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.824190571 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.846825533 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.824017323 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.826800534 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.915369283 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.827419666 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.891297815 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.210069652 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.206677522 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.826827493 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.821490184 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.825208907 seconds)
  done (took 181.416124964 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.893516232 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.90090128 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.894395803 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.828639793 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.302153763 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.900040944 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.828567829 seconds)
  done (took 15.299334605 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.832929121 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.826628749 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.876702051 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.87652486 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.827258596 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.978525772 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.828652718 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.838384421 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.825395731 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.880783972 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.827611773 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.826369018 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.833475935 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.8187745 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.876209533 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.838080936 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.942275089 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.829682585 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.828070218 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.978279389 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.833601775 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.834120149 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.885618894 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.839918891 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.828568399 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.833160171 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.412123139 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.827477229 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.827439511 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.826657327 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.826421697 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.870864961 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.830394898 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.824527346 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.827168346 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.944334014 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.8294553 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.828191304 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.828542228 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.826820363 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.829126975 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.828561 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.828119524 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.82573917 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.827974671 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.852503281 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.829982243 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.828133631 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.829182723 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.829466159 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.877976751 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.830808502 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.82588551 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.827962111 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.886453259 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.836736331 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.829150499 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.828249014 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.830811514 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.826688991 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.981582733 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.879727152 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.830760373 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.879946786 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.830473108 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.829776763 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.830659041 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.828485886 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.885031197 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.831198053 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.879928319 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.828417478 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.988389993 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.855030082 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832600628 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.83292144 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.832748275 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.831592278 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.82629895 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.836728392 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.826595861 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.831597977 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.836171553 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.828881156 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.829395816 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.943396599 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.939565998 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.827838398 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.843979683 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.838891463 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.829730271 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.886953416 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.833028111 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.830606023 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.884337253 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.947083177 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.889672645 seconds)
  done (took 201.841294905 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.839680901 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.839202411 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.833329055 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.848814224 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.834454281 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.834249834 seconds)
  done (took 12.786734788 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.834670082 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.834363591 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.831920305 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.832226748 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.833528893 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.833044036 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.834025659 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.834420207 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.838156485 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.834123486 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.83359315 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.835769172 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.833595257 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.836062228 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.835542937 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.832305684 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.833765285 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.83182984 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.832306903 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83210587 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.977742148 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.836605881 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.83403811 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.833976557 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.837501169 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.835625855 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.842664206 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.834088037 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.833478212 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.842603656 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.838115103 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.835031104 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.837396651 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.839518809 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.840754611 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.836213139 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.838486405 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.837353144 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.833309143 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.835396073 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.835803491 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.837281516 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.833960134 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.836764188 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.835800836 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.839295564 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.841017914 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.841210928 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.836984306 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.836919766 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.834950187 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.834926871 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.834718946 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.836423041 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.837332928 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.840752732 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.841653368 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.835528679 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.835385933 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.836182172 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.836339999 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.835074917 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.838677417 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.839543084 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.843025407 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.837994806 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.836049995 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.838778201 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83493512 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.835813755 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.836949463 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.836216284 seconds)
  done (took 135.110766945 seconds)
done (took 548.220979565 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.115261809 seconds)
  done (took 8.87467788 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.872025598 seconds)
  done (took 8.737614158 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.450161158 seconds)
  done (took 10.221661627 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.854007973 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.842739882 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.842867292 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.835991913 seconds)
  done (took 29.152588123 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.222429108 seconds)
  done (took 8.993712636 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.850912235 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.832034255 seconds)
  done (took 15.520792979 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.905878258 seconds)
  done (took 8.677936193 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.910147889 seconds)
  done (took 8.682629857 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.86478516 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.86281109 seconds)
  done (took 15.51011526 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.824274296 seconds)
  done (took 8.592047649 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.53860714 seconds)
  done (took 11.314853082 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.849119126 seconds)
  done (took 8.632716667 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.838509292 seconds)
  done (took 8.609051365 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.973396596 seconds)
  done (took 9.741190923 seconds)
done (took 163.023159726 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.839056593 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.835787222 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.838164181 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.835731208 seconds)
  done (took 29.117018511 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.878351303 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.876314254 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.877347574 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.887011836 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.879711639 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.875179134 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.868718764 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.870072954 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.886873246 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.879124047 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.87712017 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.877409721 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.877117269 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.868617075 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.878933738 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.879457288 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.887939082 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.878687474 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.870322365 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.879795801 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.843183874 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.888569026 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.880009933 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.847542526 seconds)
  done (took 46.782514347 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.043904169 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.916245581 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.997591722 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.903269907 seconds)
  done (took 9.63077598 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.896936115 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.898311824 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.909803806 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.949904999 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.974060805 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.908076561 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.870145476 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.865888722 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.851264125 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.900528432 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.974031331 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.913245993 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.991040151 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.84264338 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.031019032 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.844714545 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.844304628 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.896757296 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.948402809 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.97493867 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.843306078 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.898066551 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.900240748 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.913965831 seconds)
  done (took 47.611936604 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.844439235 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.851840526 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.851055442 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.845185132 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.84561638 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.846240785 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.851428074 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.846667644 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.867874258 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.846210687 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.845355608 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.845199882 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.845229235 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.847670402 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.84411331 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.859973551 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.85894855 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.844958733 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.849172968 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.852065891 seconds)
  done (took 38.766128716 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.843296261 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.694637025 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.191100836 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.094702487 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.839272103 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.836713844 seconds)
  done (took 31.271898149 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.856464456 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.852168308 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.846188408 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.903492375 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.981703522 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.854240866 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.846568074 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.85717268 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.891013773 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.908818944 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.864687684 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.87480064 seconds)
  done (took 24.313236938 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.843817051 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.840063308 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.840099287 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.857390364 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.857000376 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.855045458 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.853872146 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.84048608 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.859945279 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.864781652 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.855016337 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.858572253 seconds)
  done (took 44.002957315 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929807237 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.886787807 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.890574655 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.529513285 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.224400412 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052093491 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.446490407 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.181480999 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.843566431 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115936653 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900640379 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942305664 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099505825 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.343960681 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.874483799 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.304934996 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141413162 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055350836 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871131128 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522067474 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908310898 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.030342821 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.590155471 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900823286 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052954545 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.973352351 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.103691171 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.842422389 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974751664 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880469459 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852498869 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842280322 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118430743 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224302344 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947090646 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852950725 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.462371004 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.562833963 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.834488153 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.625846741 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.567502734 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.969898381 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855508648 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843192965 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777420791 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.001481582 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224932298 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.849617184 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.554558295 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.843964353 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855648103 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937354586 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.850015851 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.664103686 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758502489 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.84414541 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.841283109 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850874806 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.411442812 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954954793 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.032482097 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.815544902 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.937719057 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.59870195 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233779384 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.99517122 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.852048254 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850058068 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779736889 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.606144353 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900539112 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.177164594 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.86305731 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.495353033 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139798105 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.945652811 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784524365 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115511835 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.365171214 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.817322209 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074893021 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84579978 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780510359 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.791301646 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.782606478 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115613989 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88258094 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.622206098 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887207327 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184544881 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856974081 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865054689 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869609206 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.070108626 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.729215014 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847240766 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.666186998 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98757352 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863853929 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.186281792 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779543354 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.846268726 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102459136 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.057547387 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.911563083 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.343308703 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013497206 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401966754 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.896050957 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.982215813 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891240501 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.113323922 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906237476 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968239354 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901418393 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.845893883 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150842588 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.416589682 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.980820693 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.91869179 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972777165 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.169872801 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875001749 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929640592 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.851354483 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.848607412 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646518943 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40230307 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.846632542 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.849203498 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.91282056 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.893330169 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.846536467 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796491727 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.470662297 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.891331388 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.860113577 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.07228673 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.417265794 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16029147 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782693115 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196916856 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.93618052 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.070179002 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.494394326 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.926324903 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110114018 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.932569309 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.949962563 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893307879 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867339774 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948253435 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87164103 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.983458875 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140453013 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.852650732 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.8544301 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.637559262 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.884102031 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856036139 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.855263223 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.600922512 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120045644 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875441548 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.854696974 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.741446705 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.862468011 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914063404 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856289426 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.859753942 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.388631076 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.560061333 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.85598243 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.436386747 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074333661 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860159382 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.604568678 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964651202 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.939918081 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12242942 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908822269 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.784188673 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.564140766 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.543471841 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850865643 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786886764 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.850239899 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856795772 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860800427 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.046451056 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125142698 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895328742 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.543943445 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.891842933 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860855755 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.855565567 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851577846 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.36188226 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.984741422 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.025031152 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.894682009 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993705722 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.863739648 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78609196 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.854913306 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854046825 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.854972536 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.851491408 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882417509 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.549443553 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2396247 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109751718 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.461746826 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86376068 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.605121067 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.91034168 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.852622848 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.70343908 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017083269 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.899344135 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862393557 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.861024917 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.622116435 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.560385308 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.416563418 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154615287 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155296815 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296454871 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.064590098 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.880675037 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.198003568 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788180651 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.410077241 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913570279 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19676096 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79752831 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939803809 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.500763589 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199010383 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864542366 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080743955 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244047616 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.620506592 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001274451 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064473086 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890132795 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.003102224 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811763475 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.375864069 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996849695 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.566906561 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063553567 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196296233 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.558821141 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.985461197 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.854342021 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.555137937 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944421914 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.563438094 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.026993715 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.032553098 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.842680782 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345981263 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.860780774 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.083334856 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205080886 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.016261885 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.982400602 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791031634 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.867376009 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.866285245 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.857416863 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.8548394 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.714845745 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.11043152 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867173454 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790557145 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.972072034 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142945363 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.764960554 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.861833751 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855113321 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162641599 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.392844214 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025111157 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.951609427 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.375054967 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865651479 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.792948389 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792084543 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.551911153 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.865782603 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.835803038 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067097109 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.962879128 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.77039449 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936864823 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.105019718 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.114478255 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.871348681 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.126211547 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132608635 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.554637471 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880314909 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.960676352 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.565762063 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.971607734 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.857730253 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.092819267 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.610415844 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.080461225 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.906325735 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.812618953 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.857334219 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072507024 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.858440166 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.805605649 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093718606 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.577999769 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.962039335 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170152647 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932083668 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.792011567 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91140366 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.950506539 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867030597 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93701435 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869258865 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.867951808 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869465437 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907379727 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.829750076 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.988325071 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.873888123 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952774508 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.00486161 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.384205073 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.863775314 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134381286 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2212656 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18491837 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917486283 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.859291688 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864283744 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794066184 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005891787 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.087196516 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133185783 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.992686271 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.975022563 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884797459 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.564143872 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.072266043 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09803292 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132662691 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.754591873 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364348914 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.898063132 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.859578257 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872532927 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.071573493 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074351358 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166095696 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.997902298 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.934046011 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.230479416 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13329957 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.8605411 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859594494 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45010212 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.973115223 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.568004953 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.903565691 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849449665 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139854302 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871186295 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254942861 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880588439 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.015774485 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.633649897 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661396694 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150519219 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.855198585 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.924018887 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135610886 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.246789165 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173352588 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927890488 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87181038 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.970178555 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007651351 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.722950402 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.861939822 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.862054275 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912654339 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.571844463 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.871643136 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140020712 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173904279 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.859940458 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.748861428 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884134931 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.873919357 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.08981711 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138821437 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117256544 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874209923 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.873421044 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.681611627 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1395683 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924049612 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798676537 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.867187925 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965651086 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.11285895 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885698123 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.317887084 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.575369297 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142291517 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.86704461 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886198711 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.023530259 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.226542865 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189317968 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.40379859 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076258384 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.452325837 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.438499291 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164872978 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.870769306 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.019962263 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168983304 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.868277015 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.948064305 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902471003 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.13802013 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179787544 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.981064174 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.583625086 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.835687542 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.209046982 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427357624 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806187514 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.864493179 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.927735739 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865126727 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.996242636 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877794671 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.760969562 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01124591 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.647517091 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.138637017 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.86876289 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.857714793 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.612179039 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.1592864 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899062222 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010822505 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87203693 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.539369172 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.213952697 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.120318042 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.943998876 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.872942077 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.870179728 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866599424 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851522115 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.060614435 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.063545461 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143807664 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.970449727 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.900404871 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869367965 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.081523428 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078776397 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.807149876 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009723817 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.944792774 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906600783 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.772025161 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.369919655 seconds)
  done (took 1668.088377285 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.893621314 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.880696534 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.873096566 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.884063041 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.884423168 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.951081229 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.922864336 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.87388348 seconds)
  done (took 56.962557846 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.866794828 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.066036461 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.875932775 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.865785004 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.875839471 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.875783682 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.038632057 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.875648493 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.87461661 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.876434968 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.867370151 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.864743017 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.178804239 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.888495111 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.884416467 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.851787358 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.875636537 seconds)
  done (took 74.306252332 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.900125159 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.92906765 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.88755985 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.884919348 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.820590541 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.882461404 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.655911963 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.885740905 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.86642652 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.096004138 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.503196065 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.880228935 seconds)
  done (took 89.994604017 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.876486314 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.873335902 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.876286785 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.873910768 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.875721573 seconds)
  done (took 11.180856523 seconds)
done (took 2173.823230118 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.122835424 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.095838294 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.134472608 seconds)
  done (took 6.031116541 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.018298093 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.065711884 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.183922459 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.191690256 seconds)
  done (took 10.263525262 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.158382836 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.263180758 seconds)
  done (took 6.222007322 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.265765572 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.869911621 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.254901577 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.866982707 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.867645455 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.869407597 seconds)
  done (took 22.410931238 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.87464981 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.875687667 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.874274408 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.875064022 seconds)
  done (took 9.301323156 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.854236782 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.549318543 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.855870454 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.868977614 seconds)
  done (took 20.929688491 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.62086158 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.634780773 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.625429637 seconds)
  done (took 9.682154757 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.412927717 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.774792649 seconds)
  done (took 8.990284648 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.131501611 seconds)
  done (took 3.934039496 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.006144924 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.182449501 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.350876889 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.388627347 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.478853173 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.566591397 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.183800996 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.113080789 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.311202418 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.311562109 seconds)
  done (took 24.696526644 seconds)
done (took 137.776428674 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.247693399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.115485512 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.075247075 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.208128952 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.091863666 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.071638228 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.086992698 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.190904067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.713625737 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.7115266 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.204342157 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.110968569 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.039122444 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.105505531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.038843455 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.104521749 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.091284522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.258064787 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.902784925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.099953284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.088610879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.844175916 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.04500732 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.853517506 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.088819561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.025143465 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.418591852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.106336018 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.056164218 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.425303286 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.023606816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.251543952 seconds)
  done (took 172.497586119 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.628851701 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.86973527 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.870372385 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.870620861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.321141252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.869887981 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.870045323 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.869557592 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.113878688 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.093744436 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.875796304 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.34555879 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.883887218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.869764458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.886333365 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.871415016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.258856549 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.714298885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.892869183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.896046682 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.900551322 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.285412276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.893339005 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.319277086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.271345872 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.892035191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.872121288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.892573886 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.877363807 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.866500598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.882658272 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.871760309 seconds)
  done (took 208.504269655 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.872757388 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.871403141 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.870074109 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.872443361 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.871100954 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.875401142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.872869619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.871878579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.435153005 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.437280637 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.882991707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.876970596 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.879611215 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.872650051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.883355541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.871406085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.879561725 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.878588993 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.875349607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.877595091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.876637511 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.636836374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.876374304 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.627827346 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.865658503 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.867356347 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.860969971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.866574408 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.868756501 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.868736669 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.86485524 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.85621401 seconds)
  done (took 220.390213883 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.057658261 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.860722673 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.861847179 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.813928884 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.863780076 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.860157418 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.855275666 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.056429134 seconds)
  done (took 19.037032992 seconds)
done (took 622.242134014 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.274868571 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.111227089 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.028840023 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.887703872 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.116594018 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.913438575 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.878418849 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.943998388 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.61077987 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.944978023 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.573632348 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.89343724 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.668560638 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.898508736 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.01033025 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.935921917 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.45286354 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.540474089 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.053266989 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.950885886 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.04392134 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.841858233 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.949705118 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.63755877 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.680917104 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.887265587 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.045052108 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.455778589 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.883586065 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.045059642 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.596463606 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.270072864 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.885699585 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.874059126 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.926802332 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.910095157 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.218964906 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.883694717 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.003319812 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.643927563 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.925084791 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.491539907 seconds)
  done (took 102.576301552 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.848154244 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.847347617 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.846933003 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.847726396 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.848671756 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.847248765 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.847508883 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.846007572 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.847875981 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.847683972 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.848317089 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.849181817 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.846385509 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.849758451 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.847334795 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.847760571 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.847858545 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.84998822 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.847671759 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.84708946 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.850390678 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.848133456 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.850432493 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.849986491 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.848219169 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.850348252 seconds)
  done (took 49.849262919 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.862012831 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.006222477 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.081980695 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.876672941 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.859250138 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.864767203 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.880988773 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.8645696 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.863210366 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.863849225 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.950905067 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.866471487 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.882969968 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.084039161 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.874112623 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.864105363 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.867965477 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.860030659 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.011783965 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.876306543 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.881004863 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.865944458 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.879605951 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.87331823 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.864497799 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.861353779 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.864820484 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.333868713 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.868444387 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.954263547 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.902094372 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.882990974 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.304817866 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.092075556 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.911003277 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.867641591 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.862091104 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.956720608 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.866264338 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.863019978 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.880910659 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.866311225 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.087526139 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.356261328 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.876950826 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.863947888 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.345280877 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.963520858 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.903969058 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.873112823 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.089687391 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.880138942 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.865295785 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.86535216 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.899546766 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.870571945 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.865342583 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.227110927 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.87335664 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.880709517 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.868508139 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.865770752 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.019237768 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.869881855 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.008657653 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.870410913 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.872001315 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.86642024 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.086020024 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.877991993 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.363606797 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.877394661 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.865731651 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.956219567 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.01269614 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.367872869 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.877481941 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.02121517 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.323310494 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.887866756 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.87093328 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.328700421 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.889473991 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.872686223 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.866637494 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.866540016 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.865385514 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.910111977 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.881171844 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.298234871 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.364590046 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.237249408 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.892276939 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.880152179 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.865049827 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.227764781 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.872717852 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.866825616 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.08133179 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.377284932 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.877233721 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.872768557 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.348048558 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.875888445 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.886424242 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.873440316 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.089872817 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.878197608 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.909623016 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.865623182 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.873720597 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.868841178 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.88512162 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.871638603 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.865875904 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.339965192 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.969394085 seconds)
  done (took 231.26990344 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.862808859 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.860551168 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.859440287 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.858642318 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.85984606 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.868799692 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.859410632 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.862232793 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.866971745 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.859384327 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.859812626 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.863961896 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.861251286 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.867098601 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.905353575 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.868555836 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.473964643 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.864602851 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.865264777 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.858721536 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.511996653 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.869460871 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.864025145 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.861416573 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.864735169 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.865163608 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.868929088 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.895350801 seconds)
  done (took 167.302650896 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.872544911 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.983096236 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.880753564 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.895620921 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.872758162 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.868148781 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.893258425 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.881348946 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.873836152 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.867669179 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.867694993 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.930280058 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.874999468 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.964770361 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.897606189 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.898859459 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.967261024 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.874374169 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.86749061 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.868490525 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.897584008 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.862941733 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.928630371 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.990870457 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.880914224 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.984945845 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.86738039 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.870158789 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.868738878 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.986770964 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.878212947 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.927087762 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.891828929 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.88644024 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.98791838 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.977885493 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.968832441 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.897062566 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.869727909 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.86951911 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.868109299 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.861692967 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.982963925 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.885165216 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.870159053 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.976751743 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.884413125 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.872953624 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.879578 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.869166405 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.884018724 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.887291509 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.934133431 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.997156734 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.899371117 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.894413076 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.896920314 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.171022883 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.879700536 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.968170227 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.864085629 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.987660498 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.88580725 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.86097788 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.871530255 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.874796627 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.898730879 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.897904271 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.97088683 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.874326112 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.970178237 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.903760951 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.872568302 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.871063796 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.873144154 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.986910679 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.981042448 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.901905083 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.903209446 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.897600535 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.867076436 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.871136183 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.862367774 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.887932669 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.87340634 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.983568821 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.982959368 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.877021296 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.872998791 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.872178421 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.875382733 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.897375512 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.992106307 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.900536299 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.964901008 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.93582371 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.938584478 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.880463275 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.88465261 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.876292639 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.93496986 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.881429439 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.883889555 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.2244147 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.940356338 seconds)
  done (took 202.466453957 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.336648597 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.92141623 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.925914497 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.158815079 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.289165376 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.635521289 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.91463946 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.922324105 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.947935144 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.078986831 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.974954309 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.938315352 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.904091549 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.894219326 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.92141192 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.943420527 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.922831712 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.216005595 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.03938549 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.029011882 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.896669547 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.200999737 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.238773779 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.306068243 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.951768614 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.242562212 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.607773675 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.154485836 seconds)
  done (took 61.320153891 seconds)
done (took 816.568639711 seconds)
SAVING RESULT...
DONE!
