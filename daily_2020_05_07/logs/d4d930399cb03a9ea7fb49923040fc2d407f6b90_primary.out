cset: moving following pidspec: 17420
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.227249516 seconds)
loading group "string"... done (took 0.58830278 seconds)
loading group "linalg"... done (took 8.168143567 seconds)
loading group "parallel"... done (took 0.173181738 seconds)
loading group "find"... done (took 1.26881777 seconds)
loading group "tuple"... done (took 2.001810224 seconds)
loading group "dates"... done (took 1.311669723 seconds)
loading group "micro"... done (took 0.201554275 seconds)
loading group "io"... done (took 1.014983347 seconds)
loading group "scalar"... done (took 41.116456818 seconds)
loading group "sparse"... done (took 12.907152736 seconds)
loading group "broadcast"... done (took 1.025367212 seconds)
loading group "union"... done (took 14.744656761 seconds)
loading group "simd"... done (took 5.194620497 seconds)
loading group "random"... done (took 9.960498258 seconds)
loading group "problem"... done (took 1.703272733 seconds)
loading group "array"... done (took 23.257210125 seconds)
loading group "misc"... done (took 1.839363099 seconds)
loading group "sort"... done (took 3.837885674 seconds)
loading group "collection"... done (took 19.524344989 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.544651184 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123955053 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137240455 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119918983 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151594048 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119953672 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125752116 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08433496 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.919934554 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149596768 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115433684 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415121753 seconds)
done (took 5.429435032 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175920747 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088213824 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079816843 seconds)
  done (took 1.25762592 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066112429 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128855166 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067408998 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067863685 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067696351 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068415097 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068372505 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068586702 seconds)
  done (took 1.628288366 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073181895 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069089952 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066307306 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068585615 seconds)
  done (took 1.368607401 seconds)
done (took 5.596138876 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.796360396 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209697824 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188843197 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410104111 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137473132 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182544566 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.654588572 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319034734 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193666469 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094129472 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113286038 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392289569 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124508275 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639169974 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077845061 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095896758 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139505805 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452184224 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071179149 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085671347 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092949164 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132391114 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083284605 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079279055 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152734814 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07055645 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143272335 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086613049 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069135123 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.255031827 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175197289 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.703254389 seconds)
  done (took 10.550095501 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102081365 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100011997 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069847659 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127044294 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101298422 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072453966 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077873362 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070115972 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093146036 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133014222 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095007687 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111647917 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068836549 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071518314 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086260835 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200689038 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080687647 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082084197 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069140712 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08072096 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110893533 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085001571 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082563345 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081727372 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129537951 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170740952 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100396208 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100334016 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069567131 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08757449 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118320787 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131022942 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068995662 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068341227 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128550221 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097925328 seconds)
  done (took 4.654761853 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.019455294 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.153316708 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093551757 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.138626576 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067392489 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113676454 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067684853 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085867247 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.240110941 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.446519604 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.640804604 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.151972677 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12002026 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105023085 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072836743 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071686393 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070002658 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.29628241 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101909253 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111762669 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091435476 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072687334 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072621968 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067593304 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074487861 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069156304 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071082897 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090459336 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078691753 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095103513 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.335730283 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126203057 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070884483 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.973981376 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171893259 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070253177 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108549708 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166209517 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094913371 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140596554 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070309981 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06601075 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164529746 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.203034647 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074841322 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067759031 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068945941 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087732659 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112263544 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123551266 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067349481 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068564351 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172344341 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067743046 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083716853 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.160759975 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153228941 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066329244 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301915318 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095636179 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074016353 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06717745 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17239642 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119842525 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07087038 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069786145 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071231154 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073724638 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370428533 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066341755 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.906661294 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071478969 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079686315 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073199167 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074258313 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081879026 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082276016 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093985416 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069342982 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077046383 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069545923 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068798259 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069656949 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102507404 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.398039895 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06771146 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065871871 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074227034 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06683238 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095082087 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101101272 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069609752 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068359585 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104933732 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070877837 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.0664025 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070491535 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101364518 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073505264 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11534439 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070154033 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.18030113 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097921303 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069716272 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103658037 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082242853 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066469289 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073504437 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.468669715 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067357852 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074584392 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068137332 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070228636 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069014834 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081042289 seconds)
  done (took 22.068788687 seconds)
done (took 39.382264134 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247530411 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085703963 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086623135 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085917781 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08587657 seconds)
  done (took 1.771160596 seconds)
done (took 2.933750811 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128138347 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102079611 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066404931 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100384154 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066367244 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103785694 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106095911 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085985803 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102463565 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066544414 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10064162 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066784478 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066641811 seconds)
  done (took 2.337792801 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082140616 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084448646 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071132996 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087028582 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063899645 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083484367 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082614195 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090539569 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082857711 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0740773 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064973977 seconds)
  done (took 2.021507297 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081046602 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084720458 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070783768 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082750933 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064363517 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082691609 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083019915 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086943383 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082849744 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075459575 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064273966 seconds)
  done (took 2.01036839 seconds)
done (took 7.517369155 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075898793 seconds)
  done (took 1.215245909 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.541049944 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.613909525 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080813853 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.103033274 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19782255 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111261125 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.239129276 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085293082 seconds)
  done (took 8.290402642 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.109815399 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070983779 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071778839 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07207786 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07056777 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072973714 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071003802 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07180553 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071123354 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071433844 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070936324 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071227346 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072224938 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07240291 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070742888 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071416304 seconds)
  done (took 2.410820901 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099108 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098123435 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075395517 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077024663 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074568939 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074529627 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076820445 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076041157 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073606449 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075361145 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077909884 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075587591 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075395864 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066324415 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076351229 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078754255 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073694307 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076107334 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077148468 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078312575 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077411023 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066375409 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075510225 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076898868 seconds)
  done (took 3.106756503 seconds)
done (took 16.173874634 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105001854 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068433464 seconds)
  done (took 1.320203417 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078892896 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079686538 seconds)
  done (took 1.315237194 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077256644 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063391184 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086629875 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07595734 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065395479 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064700058 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084574749 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065242354 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065764119 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065937628 seconds)
  done (took 1.871879929 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065108198 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073640514 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070234289 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081459617 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073098134 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066593591 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070894801 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065444281 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074047422 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063460358 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068643239 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083698775 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067925013 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084893357 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068236807 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067708561 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070261641 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068877939 seconds)
  done (took 2.445813392 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062720361 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063813238 seconds)
  done (took 1.289650479 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065990281 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063340341 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066043877 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067466548 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065360003 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06482312 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065184453 seconds)
  done (took 1.615668747 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404288088 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124884975 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337157376 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072130185 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081116884 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.2617696 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06610021 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07120824 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071616713 seconds)
  done (took 2.692621227 seconds)
done (took 13.716703163 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080623687 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08819744 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099715131 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.426402999 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094945827 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06961806 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115493099 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.182829064 seconds)
done (took 2.331992279 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208791119 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.812726442 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.493877373 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212311166 seconds)
  done (took 2.686001485 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343487575 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083158699 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078832378 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069225361 seconds)
  done (took 1.752079181 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066985965 seconds)
    (2/2) benchmarking "read"...
    done (took 0.1869164 seconds)
  done (took 1.426071463 seconds)
done (took 7.243517393 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065785614 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065878068 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066780845 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066648396 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066856396 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065919972 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066838508 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066399501 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091448364 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066375887 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.066256702 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066084226 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071680932 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066500099 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067369128 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066373099 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066750602 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066679775 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066201062 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066274837 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066315966 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066760084 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066611834 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066231225 seconds)
  done (took 2.83239814 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081911201 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066996485 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070549047 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070499448 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071100215 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070564614 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070690191 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068855311 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070326308 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06842307 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070876866 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071450397 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068433341 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071515498 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068531588 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071608306 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070614507 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069478379 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068501 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071427431 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070852022 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069322413 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070821618 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070462375 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071091087 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070950884 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068490219 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069190938 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070769435 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071433514 seconds)
  done (took 3.297792289 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068559355 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062298536 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063669491 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072366098 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062990768 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063713157 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062660414 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063113822 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064856142 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063186549 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063956209 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062615321 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063013354 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063906121 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063578201 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067123171 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080983345 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063217337 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062679834 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063764647 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067091125 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063685267 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06301587 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065193451 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063178704 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062612972 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063086523 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062924435 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063280678 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062731804 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067407765 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067835524 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062978103 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071734919 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067223224 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063351329 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067899877 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062788116 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063783899 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06254727 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062973285 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063038399 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062793528 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072806732 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063331236 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06474602 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063481535 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064179945 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063397247 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065065785 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062771527 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062870427 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064916278 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064227179 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068043778 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062515874 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063716169 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063043038 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063693291 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062868797 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062793449 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062572546 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066395663 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063555019 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080810044 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071712092 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062992031 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064226699 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063449318 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066034819 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064227819 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078589507 seconds)
  done (took 5.873501037 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085284849 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08975574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06845761 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068458304 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063685419 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063468712 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072347046 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063526878 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068763621 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083525308 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063792139 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068081987 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068239858 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067970758 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064471703 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068933618 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072829513 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06423954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064029545 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068024741 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063867318 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072519405 seconds)
  done (took 2.733460287 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146548822 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069379151 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108771709 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073993362 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073053492 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074889197 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069844533 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070112761 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07045836 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070242553 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070174471 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069831652 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072550628 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070057662 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070244429 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069975311 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069619048 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070251878 seconds)
  done (took 2.580432224 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078140218 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068477421 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089583787 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068774433 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068983168 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068676759 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073619922 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074271609 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068710717 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068909022 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074566879 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068579428 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068721845 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069178573 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06842585 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068734199 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069024646 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068897887 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073745357 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073426885 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073171512 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083479907 seconds)
  done (took 2.77869045 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078536729 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067174282 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084716973 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071139026 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063759968 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063937317 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06979027 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068189762 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069313393 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067702668 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068703639 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063649187 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07122896 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068383678 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070863986 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068286863 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067909055 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0688553 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068343407 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063504806 seconds)
  done (took 2.57634259 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083420069 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066103353 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066266139 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073095477 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066962693 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066800933 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073046577 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067057274 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066943886 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087962022 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066901642 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067099911 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072784416 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070900863 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066696477 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073450568 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075979636 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073004855 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066953227 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066656916 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087418097 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066923509 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073099152 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066809444 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066890108 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067150769 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066415956 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070755777 seconds)
  done (took 3.176889586 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065329749 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06549384 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066303537 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06670057 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066294131 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066419285 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066253965 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066472484 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066650709 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067352294 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066336552 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066131472 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066020649 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06629092 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066317585 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066230483 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065880027 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066369877 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066407571 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066071736 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06603547 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066021065 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066301286 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066887675 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066521502 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06607537 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066220485 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06650672 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06550637 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066558732 seconds)
  done (took 3.186247795 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075061724 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073401507 seconds)
  done (took 1.347154033 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062977875 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080381016 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062590686 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073897442 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072072085 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066699663 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073327956 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072382938 seconds)
  done (took 1.757155412 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085291122 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075442368 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065041915 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077973108 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076695057 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086935904 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128734364 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06603316 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076407831 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066574224 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084220412 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06767554 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076144582 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070501748 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07615715 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07940482 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063268183 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070672949 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067238967 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063865184 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065993476 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079157448 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075584405 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063620631 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070886984 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093192512 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082221205 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064823354 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073166716 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077701027 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07585207 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062505118 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065094873 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065690998 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063974631 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076466885 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084362309 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072949821 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078751017 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065963796 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073786246 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063294084 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074307962 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076483227 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081868845 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065631735 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065525191 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06296209 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065955541 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071368374 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063172721 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070464427 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062947614 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077367937 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073230805 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080953539 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064176709 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071442095 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072233456 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072536374 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077014796 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071790108 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075087772 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064776593 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081028871 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074753034 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077305256 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06294523 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062197843 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062979128 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079208448 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093978706 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075039637 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065461645 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066152556 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063048441 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072558355 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065589015 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074503935 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07653562 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064545756 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069666133 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077393352 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070155496 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07206728 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071511461 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063772146 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068698674 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066400202 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085563145 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063888935 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063577573 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066264919 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08069916 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07559371 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065240929 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066244213 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076579613 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062406969 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065174446 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065644633 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071044758 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078735814 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06947817 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069434607 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078702372 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074405593 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07030175 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071502958 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062242925 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065579761 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066892489 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076723268 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061860423 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071886009 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06899171 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065153286 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077008566 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063734955 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064877578 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078208502 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076475902 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062942429 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06189567 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071483291 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063938274 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066602029 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078165834 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062929831 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062325725 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062387452 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072508601 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063763871 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07151809 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068037318 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070789059 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061745053 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062460864 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068273887 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.20297209 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069526366 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072254172 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076374033 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071905513 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064709759 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078381914 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072231545 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068144257 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075294328 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069812255 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06351589 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067559291 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07147545 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063907746 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072692342 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067487902 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07267892 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06568947 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064063033 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071602954 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065303839 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067519563 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070579109 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064155296 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080522182 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071706067 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063611099 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063256912 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073182128 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066529387 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064514793 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06809038 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07176918 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065467432 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063372368 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064782462 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072113543 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073364153 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068121401 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066180616 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075514928 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083266443 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064857876 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072586969 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064532477 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0660165 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066196366 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0804623 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076406669 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070072312 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072194048 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062697911 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075307509 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077719075 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067885391 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06333226 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067727675 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069650643 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076975367 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069384512 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065907167 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064184874 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071481903 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068242676 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071894396 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064689557 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067597456 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070971806 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063818928 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071388438 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065942873 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079904144 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073002792 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063148036 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06756358 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063880643 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076835398 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063517376 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066685778 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067723073 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066226415 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064610865 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071658482 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062045373 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077487933 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078316496 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070681008 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067961478 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064898905 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078172778 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071503594 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073591991 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072389172 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075047293 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080942947 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067713227 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072000679 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081038487 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065036438 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062326279 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.078275262 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064148042 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064384679 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064211719 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063932616 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072030499 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072406352 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075393321 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06212585 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07168677 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063439812 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067436386 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063519885 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073875207 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071750616 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069260726 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07752921 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06538838 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065625764 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073209166 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064540033 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065634652 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066350792 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072046284 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065866907 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071046457 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067498654 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070607077 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067033034 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062789787 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070591634 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064886436 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069747027 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073712422 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064087129 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070312532 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071641794 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064870224 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07075705 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06792738 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066936948 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071433128 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070092008 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068787098 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.202731416 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064352288 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078429798 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066132318 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078865386 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070410491 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062832308 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070806471 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071891008 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070121041 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066657499 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065747165 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070925426 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064770178 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072165617 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077494394 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066697335 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081754378 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076496243 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07105986 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071925309 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070369522 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.0709086 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067976446 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069537745 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066107451 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070911191 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065151699 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073974961 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072333955 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069945225 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07131869 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066268972 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07049235 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066099364 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062857379 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067794091 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068040035 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064905464 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078527962 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065559598 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068751056 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064602299 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066093892 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.0646664 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062892673 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07240421 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073607665 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066162958 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076463661 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068394427 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072085607 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081326808 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062904993 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064658677 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063685843 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066828973 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078282816 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065888299 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079277428 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07081032 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068161502 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062584727 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065787246 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064938368 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062923016 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063526956 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073459327 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067710767 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064411149 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065651332 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072260621 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066197999 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079055749 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064882313 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069508628 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065289472 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063155198 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068096271 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06762504 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072362024 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066082915 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066529101 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06289978 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065312456 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069265739 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071904878 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065014998 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070688683 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078003157 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06524015 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072078213 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067810874 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063087031 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072477264 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065206671 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065153723 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068112662 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073011784 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072892994 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066390312 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079602527 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067740922 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071540135 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06512654 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063802015 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064635958 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06486827 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065184403 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067714726 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065986911 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078310483 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06358477 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071385143 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070359302 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068968931 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075916589 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065717744 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071582847 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070460336 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066763004 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071440405 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078683066 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068794218 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0724924 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065623703 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070363722 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074607485 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06793191 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076748323 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070365506 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065059722 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070554827 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065855857 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064768954 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064431785 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064144313 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075029499 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065271513 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066975428 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06688981 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062554457 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068921457 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066398298 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07743126 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071510226 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07094346 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.197879294 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063874852 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067174983 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067789442 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07167507 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072481756 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075790287 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072786775 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069603362 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064566041 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080210646 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075804037 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073504154 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066866094 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073869816 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066216232 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072241103 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069957642 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070392271 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06687335 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073290683 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071376587 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068457883 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076327855 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073356319 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066654014 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070831295 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071335766 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07034622 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063408813 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065420344 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072340326 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074461596 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072447939 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065466173 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081397536 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066355283 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070439657 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067934033 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06442788 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073899323 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063964905 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072012784 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065843101 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065766419 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063129833 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067923294 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066319078 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072293741 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068227727 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06391378 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081946972 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080099509 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072161871 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064897147 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06430727 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063940356 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064262618 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06824898 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066134012 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07174446 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081379178 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068105878 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06831187 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063740832 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065130462 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072917077 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073726548 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063222286 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063408433 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068293903 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071688695 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077303019 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064313006 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065630201 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073029389 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071930189 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063703014 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068370397 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062963474 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073304326 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082900757 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065618174 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071542764 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075588006 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078116703 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065812681 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063814919 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065951655 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071431348 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071131054 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066136854 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065900755 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084870124 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072511442 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067660921 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064560822 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072339037 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068013287 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079376579 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06628968 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065838416 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07736006 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071852874 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072747308 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076247172 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076899481 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071517394 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07161354 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064680018 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070994127 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064193139 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067850796 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066289493 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066348429 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06957452 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07387377 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068222417 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081648335 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079694672 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068098852 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063311634 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06864183 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068085201 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063567612 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065992217 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063796176 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063851023 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063865369 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064091003 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071854697 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073697307 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068760033 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065258658 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064736154 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062178154 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074172964 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071764818 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070666621 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062164041 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064655597 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064911439 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072635427 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066375269 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065933023 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070754252 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069793456 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.205144144 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063941425 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078393711 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066301849 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07224989 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068545443 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066090658 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066593246 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073412483 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069929533 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066779241 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072979644 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072926709 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067155954 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063126607 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063049194 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075159119 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063769446 seconds)
  done (took 43.351517946 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09989948 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06336616 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06273546 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063996389 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074229391 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065305147 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064753232 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065370829 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065315972 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067242982 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064223574 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064405724 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071608341 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079622019 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0742335 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068212667 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064288282 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06535564 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064659824 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065295246 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072509239 seconds)
  done (took 2.719055124 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069978533 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077435158 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074155149 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079125775 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086831317 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067214928 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074437452 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067072647 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075481756 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072487068 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07592327 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068954255 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074168893 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074408753 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074247228 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069327153 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07732248 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073615448 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069191186 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076970506 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069309471 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077593205 seconds)
  done (took 2.887450408 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063603298 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064540442 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070955013 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062729665 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064234168 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063261679 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067885537 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063583851 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067746393 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067445419 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067655354 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06762165 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071687742 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06370073 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068567333 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063265875 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10966955 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06775368 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065082384 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065930687 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063809231 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07211983 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063429413 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063518561 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067446238 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067910116 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065502797 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063370048 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064510426 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066876316 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06465453 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062846924 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071198501 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070604554 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066986798 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067075473 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064725946 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064726725 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063220728 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063150896 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07372565 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063510062 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064795799 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071138363 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063200827 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063052572 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071591829 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064645771 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062819194 seconds)
  done (took 4.565417503 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074075603 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112379868 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069447591 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092694492 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078305398 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071094415 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069714904 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09496519 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064988199 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06635623 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079926213 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079670126 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06702114 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06874411 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071548792 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067370434 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067766658 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066192899 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070809505 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066456396 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070465641 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071209393 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077975594 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079017245 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068029134 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065753169 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066614383 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068438028 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078659323 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070806008 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06878208 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069184223 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07901442 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069736615 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066361436 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066492986 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079785091 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066847957 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066720067 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064785131 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066329004 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068299184 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071754412 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079374808 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067083783 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071948479 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067486067 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064120771 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078411496 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06671 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071268222 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079747317 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068092045 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066980473 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068419218 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078581682 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067232831 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065311121 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067536215 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078463206 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065030566 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067769309 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079707032 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066427046 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070958999 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079594001 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072044858 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068363137 seconds)
  done (took 6.318462226 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072183427 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094602268 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08131179 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081173455 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075112129 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075141585 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074884341 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075432708 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07508045 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079704235 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075273821 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116711703 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070890839 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076756661 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074939854 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074976245 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074624491 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075257471 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075462816 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074968889 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074878726 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081170451 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074609354 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08152174 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078187827 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070565717 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074657594 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075200566 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081533509 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074998219 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078736976 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074480179 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074668748 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08135131 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078066432 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074826266 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064410327 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074359485 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074742717 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074693522 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070443953 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081919402 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074640066 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070520447 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074903399 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074530764 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081376319 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078116754 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076660494 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078549585 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074690929 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08160157 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074613723 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074912177 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081327268 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084076374 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080841262 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081177215 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074971061 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081082423 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08139218 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083722201 seconds)
  done (took 6.11805041 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077650551 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070451799 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08400043 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063639119 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063574234 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073858133 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063433223 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066407821 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071978247 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071978336 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074512119 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074230346 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076173074 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074392381 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07429205 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076523802 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074108353 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073594264 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071937552 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073574468 seconds)
  done (took 2.760574005 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075692521 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083243492 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068935457 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073583466 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06935697 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074239564 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068614911 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069858957 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069799965 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069335314 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075461747 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075485081 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070071397 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07371644 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075438299 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073892482 seconds)
  done (took 2.462512331 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083214236 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069822584 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078385566 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064882346 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069121279 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064129331 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065099798 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063887281 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064115559 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078869824 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065260244 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076208484 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06477272 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063870742 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064341649 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070695356 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06469355 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064755935 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065286813 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078424799 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072240358 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06615725 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068952057 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065156773 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070319727 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073018322 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067159744 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069092831 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065052108 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065499118 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071161332 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071870507 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064790825 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065807953 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063646578 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064574454 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064881475 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06560882 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088296163 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065419883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063482248 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070183302 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065110355 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066186422 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064601303 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06515337 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064435552 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07105189 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065323211 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07099478 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064582535 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067176 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065226364 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072229996 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067343577 seconds)
  done (took 5.048581103 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078455149 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067288631 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06182307 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061751542 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068630531 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069655279 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069374208 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069259809 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070394999 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063435012 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069981992 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06898101 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069778607 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069298692 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069928281 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069417603 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063715164 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069105706 seconds)
  done (took 2.541708853 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072315219 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06789908 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073031023 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068686718 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068461583 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067796448 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063638813 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063948849 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06383925 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068559137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068419469 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06764287 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063703568 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068414383 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068483656 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068554624 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068563972 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063680849 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068736972 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063952198 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068279453 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063606212 seconds)
  done (took 2.782793838 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094831766 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.0836605 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140083476 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079254844 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086805126 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07277927 seconds)
  done (took 1.861123448 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092387176 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098411195 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067864049 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0683664 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07423168 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072047649 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072848226 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072835793 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077090061 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077102141 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072484008 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077283898 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076772062 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078884032 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074673795 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077670603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072767298 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072230674 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068712531 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081652316 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072557152 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077260699 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072284845 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072245969 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072204417 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078664231 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07669304 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07722535 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072272369 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076835328 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075020781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072245125 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077109888 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077366809 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068975574 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076780497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072973171 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081959503 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074486494 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07930649 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068938693 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074406613 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076926798 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076327572 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076625863 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072253877 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076063387 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072710226 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072636225 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083504478 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073337024 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078109444 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074237242 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076833133 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076515579 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083432589 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077675214 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078835099 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074542435 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077145192 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076588184 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073648547 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076423487 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07512082 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073367064 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076951944 seconds)
  done (took 6.305532322 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103605704 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067908209 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071091924 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076269911 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078238693 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072375701 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072067138 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072497214 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07281243 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070146335 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107974028 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072842901 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079581796 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0789938 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072798957 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072841296 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072710982 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079458934 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069611012 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084132485 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07230211 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078619443 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078976199 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079278726 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077527709 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074740043 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072798623 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072540998 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072702435 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072365388 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076311327 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07279651 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079036188 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069482849 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078709673 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07325672 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072201557 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076370781 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072595676 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074757697 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078969798 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081735126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072205555 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072136077 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077482063 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072156435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07228641 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069716185 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071997398 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069453537 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077029533 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07712439 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07735463 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078631784 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072582839 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072645011 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072453962 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07259439 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072746067 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074734157 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080378689 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072526015 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083578421 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072860824 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072266441 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07872724 seconds)
  done (took 6.313215127 seconds)
done (took 129.350579187 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209268748 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184784034 seconds)
  done (took 1.682460323 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074220847 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104571497 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08524513 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13625922 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071134355 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105585476 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104249354 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08340401 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071252844 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071155506 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071280231 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074865879 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138568915 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071089454 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071346232 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074366365 seconds)
  done (took 2.715125325 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104545252 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.168224077 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111831408 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071378771 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106708141 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079477229 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070496075 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08258247 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075711688 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073561001 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079801957 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080896224 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073328488 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07763532 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078343753 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07954514 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07256861 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079298495 seconds)
  done (took 2.877058603 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10300743 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093950362 seconds)
  done (took 1.512090538 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173736401 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133559614 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201982709 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345097216 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155894871 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.421510783 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.13825149 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139148585 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113430771 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135651764 seconds)
  done (took 3.268248972 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103489847 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168715678 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294615027 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120376138 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076479345 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090694983 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122018105 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08213493 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083984648 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083702244 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083929789 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078398368 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10282043 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078437666 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077892319 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08075077 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108938575 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077104189 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078283924 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081252549 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108521667 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072892622 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07919042 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076951753 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083145361 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083476941 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073497418 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071599356 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080714403 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07903045 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08235589 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090655739 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083268183 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109062233 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076851019 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110404943 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081253897 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.079578878 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078177028 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.079028051 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082666118 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082513818 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080560993 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080254319 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073382413 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080900966 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072920262 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071550274 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083080196 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07298647 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082538191 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081861089 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109303867 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073699769 seconds)
  done (took 6.220029722 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108026761 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107062721 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071425982 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112696696 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104210417 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070618293 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10633933 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099711654 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107643606 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071655047 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069635705 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071646175 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079684179 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081225922 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116272734 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108111503 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073012104 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070712308 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109533004 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107749888 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072172013 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104825541 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101285945 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110781617 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068745172 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070968926 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069980681 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071567525 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078482242 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080102367 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069635517 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079863059 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084804299 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076940332 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068243539 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070659597 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071322205 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08058674 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081267672 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079679169 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076121996 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069177497 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070613712 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071850844 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072210891 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070213843 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079870371 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08124359 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080028556 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071359332 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072699941 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071061326 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072064457 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080733593 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078385229 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082120856 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081151204 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070853428 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071199659 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073949271 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08234259 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079990639 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079835351 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071915649 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081186941 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0711372 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082898293 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087075999 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071077687 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071827038 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070336051 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070643501 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072158564 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078366168 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078429854 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072556472 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071390583 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071130209 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081542426 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078738988 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070749779 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077855601 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070066274 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071103808 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07227265 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072539708 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078940463 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080611892 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072843865 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071199803 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071029731 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070908641 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070562499 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078015636 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080178401 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079561271 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07882991 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071865955 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079459509 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078814509 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072096774 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079418891 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070613515 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072371961 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071810623 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07930513 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078463483 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080241473 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070898012 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070650649 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078799886 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080447 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071361222 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078112872 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079710279 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078005291 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069972699 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081011635 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070530737 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080737428 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07032119 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079806663 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070439445 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.211676741 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070576136 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06923003 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06998246 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078061304 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070775848 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069645979 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070456965 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069171183 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076998284 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080476268 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070704853 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076580605 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076994574 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070462189 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077093329 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069165052 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077912022 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069419934 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070281413 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068786171 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082405045 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071213723 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070911719 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070903481 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082740911 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071749153 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080558503 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080082773 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070815013 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08541382 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082039746 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079206514 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081583448 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073411905 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071044134 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071443962 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071282237 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078679237 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080905098 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07283959 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071014879 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07840391 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081775146 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068513064 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07859871 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077969375 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079088835 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072101612 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071357437 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082504012 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083086796 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079648695 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079715024 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080559495 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07238367 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079113699 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077970044 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069537985 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086102791 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07201074 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.0848508 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079211289 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078141832 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080585335 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080657495 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078985883 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079133224 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081607281 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069422021 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070622631 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080558205 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071383965 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071680508 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078982608 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072298423 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072593789 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08511234 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069409256 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079075351 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06866247 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077500413 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068133198 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070525248 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083991731 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069800396 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070581524 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07772218 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069491251 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076599333 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080329068 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079603416 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069492044 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070382465 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077849381 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078113253 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069158965 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069149473 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070496377 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077023215 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07633556 seconds)
  done (took 18.7891714 seconds)
done (took 38.390450714 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205892271 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153215763 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.1847946 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118333976 seconds)
  done (took 2.075189803 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107315899 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097642518 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091378231 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067440746 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096866085 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067911967 seconds)
  done (took 1.877146283 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285159508 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195075885 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176409234 seconds)
  done (took 2.000825738 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212800607 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194096795 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.4638861 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283848475 seconds)
  done (took 2.595337377 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139944027 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.084261383 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065054024 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082611408 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122878868 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149117883 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095244394 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120342128 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078204517 seconds)
  done (took 2.334244886 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149695804 seconds)
done (took 12.396648937 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.282406305 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.179216013 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.21151678 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100026997 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105915424 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071248632 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.132605623 seconds)
    (8/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074512536 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077621349 seconds)
    (10/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.20936925 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155366757 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185872808 seconds)
    (13/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.216264181 seconds)
    (14/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070560905 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077981021 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.205348095 seconds)
    (17/309) benchmarking ("sort", Int8, false)...
    done (took 0.369899171 seconds)
    (18/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079945922 seconds)
    (19/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.174028976 seconds)
    (20/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.229153432 seconds)
    (21/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076999719 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087573579 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075359554 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074892343 seconds)
    (25/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076529669 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.069065616 seconds)
    (27/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077825391 seconds)
    (28/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.120602972 seconds)
    (29/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.094005958 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075377631 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.168397609 seconds)
    (32/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.167652642 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075267606 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073146723 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099340807 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075008132 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090085614 seconds)
    (38/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.167291781 seconds)
    (39/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087113948 seconds)
    (40/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.165794845 seconds)
    (41/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.130452029 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075767992 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065293987 seconds)
    (44/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094853364 seconds)
    (45/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07607109 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.101436097 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.1444938 seconds)
    (48/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075474759 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065894256 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.240207908 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086463849 seconds)
    (52/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.132399954 seconds)
    (53/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.134589978 seconds)
    (54/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073251387 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.068360355 seconds)
    (56/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074281877 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074590451 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.227684333 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132869447 seconds)
    (60/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.136323263 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065071778 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074633405 seconds)
    (63/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.169279621 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065871414 seconds)
    (65/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.191339309 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126217672 seconds)
    (67/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076375185 seconds)
    (68/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.07830662 seconds)
    (69/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.191122703 seconds)
    (70/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.177841889 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06572645 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.147584228 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078411496 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095011407 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180918133 seconds)
    (76/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.232757391 seconds)
    (77/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08137496 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088864927 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.192047323 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076525539 seconds)
    (81/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.176600304 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070090785 seconds)
    (83/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.162305976 seconds)
    (84/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118812659 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.195948432 seconds)
    (86/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078216591 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065075283 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.170187198 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.096952859 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06379157 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072489314 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.216661976 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.121629073 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067998658 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079017034 seconds)
    (96/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077618512 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074492084 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.130824652 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.207735885 seconds)
    (100/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173493325 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073041763 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117717513 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.228492831 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.082023734 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076649831 seconds)
    (106/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073380752 seconds)
    (107/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066398011 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.193009031 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.0735222 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074433133 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.0669995 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072425239 seconds)
    (113/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.178436427 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066678659 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143350582 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12891081 seconds)
    (117/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074728435 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171948992 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.098272989 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174811693 seconds)
    (121/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.139274377 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06619653 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066490281 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074490862 seconds)
    (125/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066426311 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074787752 seconds)
    (127/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.088442504 seconds)
    (128/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077215295 seconds)
    (129/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065777542 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086300834 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073352157 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068133854 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066542318 seconds)
    (134/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066972716 seconds)
    (135/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074535726 seconds)
    (136/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077731288 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077178777 seconds)
    (138/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.08167698 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07798947 seconds)
    (140/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.176037083 seconds)
    (141/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.23351347 seconds)
    (142/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075885315 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075853599 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081545783 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068581804 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075813374 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09120653 seconds)
    (148/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.142684269 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068585416 seconds)
    (150/309) benchmarking ("sort", Float32, false)...
    done (took 0.135075299 seconds)
    (151/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076899446 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.070387426 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07632842 seconds)
    (154/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069735693 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08210082 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066946685 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067377397 seconds)
    (158/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067076479 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119102194 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065914576 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066602843 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088539774 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183106664 seconds)
    (164/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076840231 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066822562 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069079145 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141637206 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173461006 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077182967 seconds)
    (170/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.173217418 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068434102 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142462712 seconds)
    (173/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070565162 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067643089 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068679157 seconds)
    (176/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080153755 seconds)
    (177/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06854067 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06737986 seconds)
    (179/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067838852 seconds)
    (180/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.139298921 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066887491 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092160735 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092884426 seconds)
    (184/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080700008 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07863282 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.171031366 seconds)
    (187/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067559033 seconds)
    (188/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.086615257 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066189493 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066332559 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07481637 seconds)
    (192/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.138718877 seconds)
    (193/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072178717 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119642249 seconds)
    (195/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094799222 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127855805 seconds)
    (197/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.069343301 seconds)
    (198/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.068696375 seconds)
    (199/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184940154 seconds)
    (200/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.12933494 seconds)
    (201/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.201135119 seconds)
    (202/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07929176 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067294532 seconds)
    (204/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066312856 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065681044 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065497934 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088000731 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066040604 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072275788 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065219149 seconds)
    (211/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.210456503 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068421227 seconds)
    (213/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.065793398 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090293491 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068804305 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071276676 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087029581 seconds)
    (218/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.064730004 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.225201071 seconds)
    (220/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.17740144 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066644788 seconds)
    (222/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066020021 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066856894 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07608824 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.0742134 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136675154 seconds)
    (227/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066612125 seconds)
    (228/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066377326 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067438641 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069641335 seconds)
    (231/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091883199 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074373165 seconds)
    (233/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074952519 seconds)
    (234/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.217911316 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109654638 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066281824 seconds)
    (237/309) benchmarking ("sort", Float64, false)...
    done (took 0.131712507 seconds)
    (238/309) benchmarking ("sort", BigInt, false)...
    done (took 0.196218059 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078175448 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093408291 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136995435 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.071103497 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.06936542 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067674559 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136583913 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09423034 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124969819 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06782817 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065820509 seconds)
    (250/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069392435 seconds)
    (251/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121029396 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068138226 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147405399 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067300782 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06939197 seconds)
    (256/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072242053 seconds)
    (257/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06861068 seconds)
    (258/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073624226 seconds)
    (259/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083138929 seconds)
    (260/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071713643 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070964591 seconds)
    (262/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075960661 seconds)
    (263/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079844421 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069239676 seconds)
    (265/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.069079458 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068942547 seconds)
    (267/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.070195185 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069879073 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068928037 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094417636 seconds)
    (271/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091189201 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078292107 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06906558 seconds)
    (274/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06872022 seconds)
    (275/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.141287649 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076104213 seconds)
    (277/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067017044 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07311167 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066386797 seconds)
    (280/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066837794 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078253194 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119687245 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086288252 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094134634 seconds)
    (285/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.069436203 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123589124 seconds)
    (287/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082507511 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113305249 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067334446 seconds)
    (290/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.079457907 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074504501 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068422629 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067884306 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068953013 seconds)
    (295/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067403924 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134835107 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08853557 seconds)
    (298/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069355226 seconds)
    (299/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068982206 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074986462 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069928179 seconds)
    (302/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071463227 seconds)
    (303/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.082377186 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068989014 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089478669 seconds)
    (306/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074101546 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067421696 seconds)
    (308/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094404627 seconds)
    (309/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068452553 seconds)
  done (took 33.239268885 seconds)
done (took 34.59810291 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086457834 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098480258 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073733907 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093164424 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081722572 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097824824 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074475117 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081092126 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083983004 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082746089 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081464563 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074988993 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077626701 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077668035 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075176798 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100202085 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081798186 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076268832 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075995039 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067860655 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076119575 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06831152 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067583237 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074832928 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079768398 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075725701 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078199488 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07714476 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068283293 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068127859 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072795728 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076784727 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067750063 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080543517 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077408078 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076519995 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078136897 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080003039 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065631997 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066955128 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07595893 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066920771 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075938508 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074525558 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073263478 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074755261 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076697558 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080715492 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100027652 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073077458 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078110266 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079489516 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079825441 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073581464 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073261184 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076126888 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074042326 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100470115 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076788924 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072773956 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076646481 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077873314 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074363202 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075874207 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076527901 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07880685 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080163604 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074223217 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078395684 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074693329 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067484956 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07579668 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072519019 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068297276 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078927099 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080593058 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067464442 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072365454 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078511096 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076657666 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068058409 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0726477 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067309785 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07235498 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073127157 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074567918 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073267672 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07538917 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067340185 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076442421 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075084375 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076208589 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068036264 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080852054 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068012886 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07396882 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067977653 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067961511 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067301845 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073028308 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067911909 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073134488 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076514532 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066854124 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072460394 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081359511 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067668085 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075482176 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067874459 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068324719 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078967752 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077998433 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067525477 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07257969 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067322702 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072968666 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067004255 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067094841 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066390923 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066177472 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069684452 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065590451 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069451086 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070904861 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077574496 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065206049 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069902127 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070119107 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065350347 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072218683 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065813913 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065327211 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065075456 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079136419 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070258773 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065573071 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070717728 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070042906 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073189641 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06537866 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075266994 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072195532 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070371383 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072367814 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064529872 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076432271 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069528099 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069093674 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064374024 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064833251 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0640867 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064144454 seconds)
done (took 12.724699419 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069040946 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116463931 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.091632223 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092663596 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081903039 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067037013 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073530304 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091374492 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068524146 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096122137 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088104026 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087734518 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109042021 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065712571 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067604464 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069981137 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070441421 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081023746 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.096568895 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090844229 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107248881 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068919087 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.088502408 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089751291 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.0865402 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093313277 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06961407 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069878706 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071833793 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.088848227 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091350619 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070044446 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067468689 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089902187 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084049181 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079368971 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067303022 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.074796247 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067372672 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066374513 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070040226 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.089994801 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077825451 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080197397 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069293227 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076324274 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070160483 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085215797 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08798397 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077700693 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084694137 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.093385212 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073385983 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085834231 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068074752 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084911839 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078533515 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069177446 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069057035 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074353387 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069050046 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07144455 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080570892 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.077581484 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072581202 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.083440449 seconds)
  done (took 6.690645417 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084244995 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094146976 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085332306 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086136975 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068867643 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068686522 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071349019 seconds)
  done (took 2.005366355 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066988084 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086532404 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090253055 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092716667 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082535912 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09204756 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074638051 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067054734 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.0949735 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066852468 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086715129 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096898662 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070419114 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078366239 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091576579 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06711837 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091837593 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067344827 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067476328 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090765796 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071387641 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093859962 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077804182 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067578256 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079153751 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067535738 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098993829 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074907729 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068512802 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068775752 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068570651 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093420998 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078936229 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080993727 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068109968 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08207031 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080242957 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07071183 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.07793245 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076220152 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079994445 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068326944 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066019289 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068545891 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069778264 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07820649 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065874362 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068274229 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068367006 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086072355 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066141443 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079297009 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07082881 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07292208 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073072041 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072044921 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0756622 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069212702 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086537543 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068608514 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083876978 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083209413 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080441847 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083699181 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067367364 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079071007 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079993421 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068239985 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06948855 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069357639 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083393023 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070313548 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068832984 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078578581 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067869442 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093253788 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093318023 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068678827 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083181958 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070212796 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070401361 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081399057 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093866233 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075808569 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070194427 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073529283 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071025107 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072333949 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068178261 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072965788 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070350633 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074328279 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070133909 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072913569 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071525962 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086107317 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068519646 seconds)
  done (took 8.861670274 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069222739 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068576192 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071597082 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069548321 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069838548 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070309834 seconds)
  done (took 1.895364538 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091541633 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068572306 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083122796 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069996497 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106453315 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085595347 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086393041 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080518833 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083200283 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079848518 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08344262 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086079052 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087420846 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070173666 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084427551 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069932419 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083849591 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074355502 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081535228 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073285686 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084059308 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072819919 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072992093 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089682113 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074091531 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070978384 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079760313 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081643651 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081289733 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08012139 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072595451 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073841799 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077075747 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079939531 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086644483 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077313713 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070018863 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077238823 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073476795 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07382523 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088647231 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072798159 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074008086 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074403725 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077373985 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074725156 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074213215 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076375541 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082672904 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074755919 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074488791 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068972482 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071448906 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074989867 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077238168 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07981689 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07643371 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08404012 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070655492 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075191882 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069136281 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071897842 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076741582 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071399725 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.074964066 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074167665 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074950808 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070203862 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070486971 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068162284 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074570308 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068470323 seconds)
  done (took 7.013052851 seconds)
done (took 27.927689456 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.519244299 seconds)
  done (took 1.94692617 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611569832 seconds)
  done (took 2.068241778 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.557960238 seconds)
  done (took 8.009234146 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.379868035 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.451603354 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.732241597 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134347843 seconds)
  done (took 3.181895252 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.704180607 seconds)
  done (took 2.167020149 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233611938 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224441553 seconds)
  done (took 1.934080288 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346775072 seconds)
  done (took 1.80304048 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.069718988 seconds)
  done (took 2.528002788 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.234813908 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160191844 seconds)
  done (took 1.855418324 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443614248 seconds)
  done (took 1.900669415 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.209793017 seconds)
  done (took 5.669775569 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217932273 seconds)
  done (took 1.711150686 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233257373 seconds)
  done (took 1.692013434 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.732498353 seconds)
  done (took 3.194212631 seconds)
done (took 41.12964126 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083648897 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085471243 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085805142 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081260117 seconds)
  done (took 1.779092827 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074982081 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070911049 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074497363 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07086755 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074970598 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071531903 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072438048 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073768954 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070678948 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072169652 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071192523 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072025274 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075328367 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075234411 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072112351 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076509218 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077227851 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074177747 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076217243 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073343161 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071509291 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07641773 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076137997 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072286895 seconds)
  done (took 3.231146131 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079219665 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073744734 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077716785 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074969144 seconds)
  done (took 1.773410071 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076934221 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088536048 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086561501 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077578204 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089295644 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084122471 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.0677136 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067910758 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068958034 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079131411 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068960037 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096307461 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088916405 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078523532 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079879567 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064596462 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06584733 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085394354 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078013378 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078201293 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068835175 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077618721 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066781732 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086793407 seconds)
  done (took 3.333826672 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081815666 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102904232 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081640317 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094589885 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093621569 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06657997 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080052044 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094175203 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136537283 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066976744 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072936328 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.0685414 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.114918444 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068934212 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085067629 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11209321 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112892833 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070200976 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101803364 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066893558 seconds)
  done (took 3.244653023 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083747511 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070513093 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071673503 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065938299 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077089238 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073568293 seconds)
  done (took 1.918068581 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068932731 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06880162 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068208482 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069161645 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07533814 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.07044356 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069345262 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071154043 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070869137 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070554815 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070073118 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069305255 seconds)
  done (took 2.313112076 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.191446448 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069434099 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069230475 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066846912 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070983862 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067383284 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082528885 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068335376 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.095118969 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069522057 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069301031 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071921583 seconds)
  done (took 2.464884708 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191971251 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077039208 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223426096 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14738586 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106075839 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112685502 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114802545 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111422948 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136373948 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100488576 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155535678 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162178771 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106713865 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13277874 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091056593 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.123710278 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145323992 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155751831 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09967617 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15357763 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134942308 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122539923 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141708639 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099153537 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103037493 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113878085 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072839274 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078343665 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158106129 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122813301 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135155444 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107676354 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093312413 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166586572 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160621934 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131053449 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141121346 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081647185 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117183063 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129167071 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192511512 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087300298 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150862474 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104040516 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078124357 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126716386 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11303292 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116741916 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099153438 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086470972 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131055675 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315049532 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128224555 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08405507 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116837869 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105044929 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108992619 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113893983 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169058312 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150946106 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120338366 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070771482 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106448519 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142381484 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125676922 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104248727 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117617707 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089345943 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1232961 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151646281 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118531801 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132560839 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11223733 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085097548 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114676467 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13074638 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120097286 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161188175 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117637803 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071610207 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115163466 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095611939 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078327655 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142689077 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076329168 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168669755 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099498059 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.12598953 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129080671 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107932823 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107536314 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151598958 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133557119 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100832675 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084478574 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09983728 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114283165 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137055664 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084649893 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104085165 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109580522 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077283891 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128407899 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073734838 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115914394 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095858288 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116826162 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121330326 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079348064 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118325146 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099586159 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099443614 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271137711 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150045297 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085964529 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07975337 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156635666 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116261481 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099844381 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135025057 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149577119 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118257836 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094018213 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136783577 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162086708 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087761613 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151516872 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099058686 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08128176 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.1022748 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117428308 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109759628 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121384689 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079997724 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11499292 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15361627 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072915577 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094096883 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126840414 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079729214 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078680642 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101322198 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100363323 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094436316 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098097369 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100798833 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129912712 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119466227 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105921356 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121573275 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10028176 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159672064 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088436506 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103250765 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105212741 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073648475 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128060697 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148143122 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080208303 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153737068 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120915065 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115211581 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117369143 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0846179 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134006963 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080170801 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073736761 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135463109 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111959241 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107470786 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146125543 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112270153 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119284875 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.266313543 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128951904 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127448145 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126786892 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10590584 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090138289 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114695839 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12689108 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073833655 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091895748 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083008216 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102808299 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094786493 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0842547 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135024367 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118772934 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10989481 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113471021 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096657466 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144819639 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079545346 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12202687 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120278296 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095196952 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149863592 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146741275 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128064441 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10122542 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133028726 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07467149 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076124874 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089821589 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12031257 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085221409 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085183112 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113095425 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144343206 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123520494 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132837359 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12265442 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115299702 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152550708 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073982344 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119374921 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139779111 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119226661 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106219224 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091891316 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098267778 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138712859 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1031705 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172698457 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110902904 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119953114 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152441584 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10185311 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079943143 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103029779 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126811831 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100238788 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137111441 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097396862 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086357816 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256851798 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080457885 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103336591 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124476139 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116687226 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133013243 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111477198 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12904385 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078755884 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111407326 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121270071 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119520488 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084137249 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111839783 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155907953 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09404932 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110714941 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140649318 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077284414 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135028944 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16533447 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139641563 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085728157 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10250667 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116653901 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120265676 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112828483 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131381948 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103454834 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134341123 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111549834 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086180154 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087747786 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096039993 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103677751 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.113373207 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104323727 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113756612 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096789974 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127292881 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103398477 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110585434 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115109675 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097431568 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093569715 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093177715 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164192465 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113331118 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16265917 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100362513 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.138834784 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154732376 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076261071 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079911216 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081325721 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132978792 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084880308 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126151005 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112095872 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113993983 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118403551 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130464133 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244389939 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071201967 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110568638 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131219331 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122985936 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097621749 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104172224 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153722829 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119397164 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079959175 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111351181 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11545956 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104132311 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167794157 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083144969 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110156406 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077936797 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081719362 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123500183 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144858758 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083397787 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104282514 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118543989 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11017071 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12353593 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095146968 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107405178 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125283141 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139168299 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120437609 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088593942 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106886334 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122417846 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145636328 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100176727 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097898424 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164479371 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150539061 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.154495481 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088980479 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113495376 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1134436 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108963112 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134077614 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085442666 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155163718 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082509122 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130116696 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101009098 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089217572 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125247919 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112403865 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088887907 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140161985 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115649768 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083612887 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08081057 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109711113 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115940553 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101705873 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075214001 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283874937 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075664383 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133298963 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165039404 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081739209 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105512401 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096839427 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083760842 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103651191 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101741619 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086658032 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099788128 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164560106 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088094119 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141323746 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128659047 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108743744 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132466283 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103378097 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642927346 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080898217 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146435942 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115096772 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169177575 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097906451 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113920411 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107163366 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115634986 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13433292 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098937379 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176710222 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123164416 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113474188 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077318113 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098424182 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099565367 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08652573 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102947592 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112447569 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111897814 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095249977 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116884183 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119843649 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083736403 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096229416 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150700902 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114968647 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138532803 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134479976 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08535349 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115372475 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133039618 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080848193 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.114810547 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143988059 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104728856 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099962131 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083273861 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100128295 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165318869 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073487706 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302080202 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119709137 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114164681 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113993837 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109917596 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127667695 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103323793 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120366008 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093723017 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10919425 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150704936 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084654137 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079816113 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105296859 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109355931 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09850394 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098130511 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10065506 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146420082 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073384492 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098278885 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114011438 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139787508 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164982194 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.104854009 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084701484 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117676468 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117714752 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114183976 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119733738 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082833223 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082421451 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08313496 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.101763593 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124845947 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113436232 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118621323 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108668135 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155295247 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085173786 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226735487 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096917625 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105453762 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089972311 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079517442 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096430177 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096753499 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101231328 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108698672 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163819165 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095465697 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090886431 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091514807 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075150812 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082712794 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122783936 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107134173 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112942423 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10046619 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080210752 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099817405 seconds)
  done (took 57.664368508 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122273191 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08324066 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098344348 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145135113 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122381626 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199702298 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150877686 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1891915 seconds)
  done (took 2.706597162 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068651201 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094786697 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104453465 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086470294 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070505786 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071863931 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228128737 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083300056 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067405882 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091934961 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079936846 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071135107 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.45148391 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069242142 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071683223 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081764682 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06803482 seconds)
  done (took 3.418670565 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389634384 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619219416 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347570501 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076615633 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.996409282 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094209036 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.211582731 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.143378258 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082663359 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.552550268 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368657583 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133454781 seconds)
  done (took 18.587026809 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082413653 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079215593 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094426349 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093892762 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081300558 seconds)
  done (took 2.001160688 seconds)
done (took 105.949023221 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082344238 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.439869718 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069749443 seconds)
  done (took 2.104501849 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091507489 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089490497 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089312216 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086835206 seconds)
  done (took 1.935450967 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075010338 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077526835 seconds)
  done (took 1.721675544 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228116551 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176819554 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100637002 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08354747 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083370965 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083938827 seconds)
  done (took 1.827348402 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073398226 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075952824 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0760913 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076498704 seconds)
  done (took 1.874426006 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068597535 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067135758 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069899721 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074172204 seconds)
  done (took 1.853345706 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085021456 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085988171 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082096096 seconds)
  done (took 1.824526175 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101466858 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091966085 seconds)
  done (took 1.764147202 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082153839 seconds)
  done (took 1.655156579 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089769259 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099845176 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135438909 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117356289 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140551484 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114980675 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085066798 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085546605 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07959016 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086371638 seconds)
  done (took 2.606481319 seconds)
done (took 21.322930805 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079267392 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368081382 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360215348 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090905556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671902058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357665456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.971604265 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093130091 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141134196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068716236 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085376466 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651559234 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961813295 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32590962 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.948985831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326426563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652940552 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07243109 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071083898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071768411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.959570212 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071417473 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072066459 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071683708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653372384 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376921175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073519452 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32650335 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072802756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074868562 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359752973 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073054466 seconds)
  done (took 16.108105391 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07121792 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122248492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074009341 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085184957 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071693872 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070773645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073538261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069994549 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121444682 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069397672 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08627675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069311034 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072658482 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069348837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088810424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071368158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073070899 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073669512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073138437 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073514217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093139697 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072815797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076313262 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073698875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073386879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085662545 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073520467 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073000879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074106011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075474868 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076254548 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07388743 seconds)
  done (took 4.090093478 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117239049 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126333707 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076736203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111302377 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117355326 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074565962 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152259177 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098377933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131984754 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072098098 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090198061 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072475309 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107454377 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073306479 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093526961 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073466136 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074569461 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074079576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073231022 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073513581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093813824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073010517 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07350737 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073814067 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073652064 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08779779 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074327782 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073473302 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07331847 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076126822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0769979 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073776527 seconds)
  done (took 4.397872341 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071418215 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07376298 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081818254 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084944593 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070210607 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072581867 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074334911 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071356742 seconds)
  done (took 2.190664322 seconds)
done (took 28.365022737 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079168859 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071070674 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074785921 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090516205 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077663465 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082388375 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068190676 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078306847 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075147989 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075109113 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076842821 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070510342 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073905142 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068665337 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076062491 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.0695628 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084594465 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074174662 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084301894 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084848162 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072829977 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076438951 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078627695 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084539189 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084495385 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084151509 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080169033 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076117776 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071691541 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073768949 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074445341 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.081087654 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081717894 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082596811 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07003595 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070416285 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074356563 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071924432 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085013096 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07907882 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071090575 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077881152 seconds)
  done (took 4.799076659 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084984026 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089585569 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084945054 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082636042 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095052519 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086468528 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089159632 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081120559 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07860215 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087052047 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075008732 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081439321 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079077109 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073319853 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077817444 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075408672 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079574604 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074549876 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077707186 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078199253 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0874561 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073869005 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088419633 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07981707 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076190721 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081674639 seconds)
  done (took 3.718280306 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074257442 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086436804 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093167796 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145331106 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111917062 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081590517 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08247591 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09250984 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097241465 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069206032 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074501677 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094272824 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0948905 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077406379 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071666106 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087586988 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086129075 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073201814 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078298513 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10089164 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092286631 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088094463 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098019736 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088532414 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071022856 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073936252 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076437185 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091067827 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073970731 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082856814 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07418791 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075307425 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071939712 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08197632 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074433065 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070191735 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095341118 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080740998 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082495943 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070596959 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078048052 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069813373 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093988195 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130662624 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070298018 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075815021 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075023209 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082810947 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070289383 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099094096 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082397652 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069452434 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070327466 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069142358 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068050134 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071083361 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071212053 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073399304 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081168783 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077913271 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092588999 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07622302 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08921702 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070659507 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08088559 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068980448 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069770008 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067562784 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097250914 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070843518 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112626545 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069489222 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067316507 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079908605 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078576493 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074586734 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06917216 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086362606 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081776999 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074832379 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079407675 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074678897 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074887616 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101682079 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071686351 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070554257 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070041289 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075041064 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074124755 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071614189 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083466195 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070127217 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074734413 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089386702 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070742604 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071751034 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073966528 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072410917 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068623071 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081077413 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075053259 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07192546 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081541487 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072003531 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074863555 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084175085 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077834629 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069987957 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07364208 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074980377 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070255457 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070124539 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072171032 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070625208 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075319159 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075214739 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074182815 seconds)
  done (took 10.928663359 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16570747 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156694615 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070998595 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148577479 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077195477 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080985348 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152821191 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098746024 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071423064 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072838283 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071938752 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114263382 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109184499 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122458353 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085265063 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07258121 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094305304 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119364028 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157861719 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152077068 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094519338 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080064594 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074438561 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074144011 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073064111 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081492646 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090799008 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078362635 seconds)
  done (took 4.475706255 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078671667 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104980685 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076032643 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093860828 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090688327 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071117167 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072157873 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071038439 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085818248 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078577209 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06937476 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074418014 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.0733418 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072535432 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070187956 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075969303 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076642223 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068465725 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073265663 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074793583 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079420425 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093859684 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072741417 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069361741 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072023707 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069067732 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07877528 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085857269 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071682037 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105248629 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069248936 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076522842 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086322089 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072041493 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071381612 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071936027 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071855687 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071487644 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07320301 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070091309 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070197434 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075203984 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.07013776 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079375525 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084746835 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073367247 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072267751 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074550047 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074580971 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069225723 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074332411 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074464182 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075028397 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07934377 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075904799 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074694494 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072528317 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100048419 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077383076 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070925285 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070604642 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070653152 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073898224 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079548725 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086933671 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074299809 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070852926 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071684753 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.084318213 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084584967 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07131232 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076681856 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069227352 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073383603 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074185165 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073972601 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072629644 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068920036 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070197672 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07199376 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075217483 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071035641 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071399924 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074620422 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069853114 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070737228 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070958015 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071821576 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079143118 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070341351 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075535327 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072665409 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070805384 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074863572 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077534094 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075194898 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082481261 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08279893 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072399481 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070507337 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085126934 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074407995 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071263512 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077764998 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076374017 seconds)
  done (took 9.580243644 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092483749 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071715965 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088990902 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09558187 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081326238 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077624637 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081855525 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071653682 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087813042 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076546251 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079989914 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07044894 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082523168 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082106579 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072524392 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082454754 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075282191 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090441655 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087214141 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070919045 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080726091 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085012657 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.084107189 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086177857 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085170672 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086811933 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.083856537 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081605566 seconds)
  done (took 3.936804341 seconds)
done (took 39.02148162 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.683034826 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.83791973 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.660393452 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.863027613 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.883183821 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.67604784 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.849025337 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.655387629 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.020077211 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.703098385 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.985171871 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.901614458 seconds)
done (took 64.455149975 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.6784315 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.804045191 seconds)
    (2/2) benchmarking "String"...
    done (took 1.909231983 seconds)
  done (took 5.306927691 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.848243734 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.327136403 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.888629695 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.654856932 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.66170733 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.908891693 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.434573321 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.102969532 seconds)
  done (took 29.574801761 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.834225759 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.882908021 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.3890584 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.389729582 seconds)
  done (took 15.137171359 seconds)
done (took 61.237285359 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.673775796 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.707138578 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.698212361 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.655752281 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.75018071 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.677690045 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.970466579 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.675938219 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.660014023 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.658716517 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.658301661 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.139123171 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.665948183 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.94227574 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.65652606 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.658302646 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.663086069 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.176440174 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.809926189 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.669920068 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.660855229 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.665632612 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.661701845 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.658947307 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.68400565 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.657271434 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.054466746 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.661205293 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.492174833 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.660690996 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.712971897 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.207014456 seconds)
  done (took 200.538847926 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.656691112 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.787564438 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.878883432 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.676841669 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.210826196 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.834702411 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.754773669 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.236494084 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.663556794 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.674042311 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.828118354 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.658197288 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.833212092 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.604157858 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.693103489 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.744906823 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.927346075 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.842448636 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.697599251 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.805907536 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.668192293 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.630467912 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.610159525 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.801843605 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.659987831 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.742871074 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.679068923 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.68482976 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.849119559 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.939003256 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.665922668 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.689560477 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.862788382 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.527988419 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.669658077 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.675489298 seconds)
  done (took 165.962643755 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.848921328 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.659771744 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.657972816 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.658146832 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.664142855 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.657937468 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.781323996 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783646513 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.308481627 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.250275643 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.714333156 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.659122966 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.4166688 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.658779602 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.724841003 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.670282481 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.661005735 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.674503335 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.686901279 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.658662608 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.659726588 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780948369 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.676004069 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.659085312 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.668053487 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.659624103 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.664483013 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.045264281 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.659660353 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.659875356 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.825828157 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.665329884 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.664726366 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.899690538 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.660161176 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.661064577 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.484903429 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.687014368 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.740947494 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.661087164 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.666682457 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.659981821 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.877453024 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.661089702 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.66029573 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.66095859 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.661764377 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.661032346 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.767798627 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.661197565 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.785786355 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.665825529 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.141396706 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.661546047 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.662552237 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.945439415 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.23070231 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.659390967 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.662865402 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.660268358 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.660854487 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.666408569 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.093248168 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.730231196 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.663053124 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.662475234 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.665900286 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.66189918 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.83370388 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.660234916 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.964053988 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.67800245 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.89591294 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.78213664 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.666166962 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.725951324 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.754476859 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.662378104 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.66176106 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.661218 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.661223953 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.742467019 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.662693043 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.745089557 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.671825773 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.663437493 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.661809381 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.716222949 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.730918558 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.664270128 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.483691073 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.666476379 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.662686146 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.899390299 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.727567041 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.663862722 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.664226844 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.745719521 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.785755671 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.375763624 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.666681095 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.011387121 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.738408194 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.664104704 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.764730537 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.663793715 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.663025033 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.742056855 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.670251865 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.665018598 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.697651479 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.662720186 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.674983235 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.663180916 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.034979859 seconds)
  done (took 387.988365774 seconds)
done (took 757.996617159 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.276009611 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.241407868 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.332341559 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.260784954 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.230989054 seconds)
  done (took 12.941669562 seconds)
done (took 14.544282232 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.741323303 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.747547868 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.680759808 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.743433081 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.679277063 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.743667389 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.726441539 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.686712613 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.712597181 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.686545443 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.713551093 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.686444624 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.671930416 seconds)
  done (took 23.821572497 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.884772611 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.891485391 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.726203176 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.897740687 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.702901057 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.888277992 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.819203829 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.804625369 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.819230378 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.674688062 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.674864257 seconds)
  done (took 21.387239203 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.894521103 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.902297046 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.733226135 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.89416443 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.706086611 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.893584341 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.826821277 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.813286749 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.803550491 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.674628906 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.671276102 seconds)
  done (took 21.41788329 seconds)
done (took 68.231152662 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.66805041 seconds)
  done (took 3.2707371 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.68878156 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.840275908 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.66758203 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.668216804 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.66759523 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.668723438 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.669545935 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.668048779 seconds)
  done (took 15.143042268 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.668103067 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.668246628 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.667992743 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.667808749 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.667079724 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.667032997 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.668037986 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.668311477 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.667867401 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.66848032 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.667515945 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.667754102 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.668672862 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.66880509 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.668220562 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.668307947 seconds)
  done (took 28.292107878 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.67039784 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.668288022 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.668426145 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.669260255 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.668617461 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.669065171 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.669684405 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.668829588 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.668647021 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.66814006 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.668838557 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.669034926 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.669432527 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.669002793 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.668779416 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.669219525 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.668408644 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.669616212 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.673150175 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.66936868 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.668654977 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.669700607 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.668462013 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.668418773 seconds)
  done (took 41.665761884 seconds)
done (took 89.9753249 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.385842563 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.280644589 seconds)
  done (took 9.271497608 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.675504726 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.670967216 seconds)
  done (took 5.018356006 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.670286179 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.669863616 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.670409535 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.66964872 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.669228291 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.669781415 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.668698724 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.669606253 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.668973543 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.670647356 seconds)
  done (took 18.303212855 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.669931364 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.670665886 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.670156507 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.671350505 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.671984357 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.671716362 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.671665256 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.670360276 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.671782326 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.670240591 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.670384002 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.671618666 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.671550345 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.670748208 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.671235546 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.671076882 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.67134939 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.67163642 seconds)
  done (took 31.684811392 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.670286502 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.671324864 seconds)
  done (took 4.948448458 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.671024554 seconds)
    (2/7) benchmarking "second"...
    done (took 1.671337718 seconds)
    (3/7) benchmarking "month"...
    done (took 1.671395248 seconds)
    (4/7) benchmarking "year"...
    done (took 1.670386285 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.671850064 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.671753081 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.671126355 seconds)
  done (took 13.305046991 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.672256358 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.820616021 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.882681338 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.257358623 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.672943082 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.674714133 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.583413321 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.674119113 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.676160984 seconds)
  done (took 18.520521592 seconds)
done (took 102.658097648 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.532435581 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.671534602 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.899815882 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.727302408 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.699194093 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.007686908 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.707253014 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.929278739 seconds)
done (took 41.783744388 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.694473474 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.338902833 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.587847271 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.706253314 seconds)
  done (took 15.242738721 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.67192835 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.069126844 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.701155277 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.512218502 seconds)
  done (took 21.566611637 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.033373567 seconds)
    (2/2) benchmarking "read"...
    done (took 2.023785592 seconds)
  done (took 5.669334694 seconds)
done (took 50.784861605 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.67348321 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.673756464 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.672647517 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.672614337 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.672315024 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.673366251 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.672792304 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.672907513 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.673873095 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.673224164 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.673303399 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.673285048 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.674256068 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.67308395 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.673716171 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.673684853 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.673716747 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673863308 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.673321385 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.673504005 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.673348111 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.674182081 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.674711081 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.673487838 seconds)
  done (took 41.77134626 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.674194444 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.673625781 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.67449822 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.673634642 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.67477171 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.674977667 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.674443853 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.674265035 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.674495371 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.674982861 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.674646023 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.67510391 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.675597462 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.675531141 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.674618812 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.674323739 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.675322535 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.675392288 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.675328259 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.675195961 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.674918067 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.674972384 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.675713387 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.675271809 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.674738374 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.673907105 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.675710708 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.674135979 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.674624344 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.675541981 seconds)
  done (took 51.855097097 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.678758606 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.683130623 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.674474077 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.674940583 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.675230562 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.675614247 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.675284847 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.675918229 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.674699128 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.67674681 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.675988734 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.675592682 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.675287912 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.676463081 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.675925378 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.675849773 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.676816188 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.678901088 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.676527542 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.675579012 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.67616188 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.675702329 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.67637359 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.677059185 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.675804586 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.676128284 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.676059809 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.675915542 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.676727948 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.676740577 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.676042826 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.676824678 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.677162241 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.676448803 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.677671498 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.676755722 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.679732785 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.683898984 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.67741176 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.676967307 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.676391429 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.678293139 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.676238002 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.677405821 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.677504494 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.677881843 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.677638307 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.676703969 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.676658456 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.678754481 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.67774735 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.678113542 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.67760363 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.677376074 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.677788626 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.677294306 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.678661684 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.67726011 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.677211869 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.67798473 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.677948108 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.678018227 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.678744774 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.677640205 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.678428672 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.677561573 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.678351271 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.678334223 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.678711167 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.679406911 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.679473723 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.679076386 seconds)
  done (took 122.37519297 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.678700304 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.679411119 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.678314615 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.678920212 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.678790437 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.679590551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.679873904 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.678500748 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678989329 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.679929867 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.679282929 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.67898782 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.679260453 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.680107754 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.678432531 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.678508774 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.678801108 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.679938579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.680140172 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.678479723 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.679343405 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.680158825 seconds)
  done (took 38.557788349 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.680018055 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.680336389 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.679650244 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.680472224 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.679604892 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.679993734 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.679329548 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.67992593 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.679996162 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.679240413 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.680952467 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.680584088 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.681199943 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.680552827 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.680936096 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.681240523 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.681285394 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.681290892 seconds)
  done (took 31.861424799 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.681453716 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.679997662 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.680709795 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.680367303 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.680234571 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.681416248 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.680947931 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.680996042 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.680349555 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.680256253 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.680085468 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680278869 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.681958167 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.681126001 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.680526708 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.680224859 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.681713225 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.681046656 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.680850841 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.681099341 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.681473915 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.681529243 seconds)
  done (took 38.595300148 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.681068615 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.681078178 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.681146417 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.681020036 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.680951335 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.681275118 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.680525628 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.681399314 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.681166733 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.682207011 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.681965957 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.681527986 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.682286111 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.68164248 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.682192775 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.683420056 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.682260274 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.682477945 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.682531904 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.681766051 seconds)
  done (took 35.251934276 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.682660349 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.682814503 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.682575431 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.683362283 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.682315259 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.68361127 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.682736946 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.683713775 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.682243206 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.68424562 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.68403358 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.683575802 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.684365126 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.6838208 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.683627345 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.683802556 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.68412854 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.683779579 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.683682778 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.683934146 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.683591935 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.68324044 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.684217431 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.684063763 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.683964723 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.684691729 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.683220535 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.684267783 seconds)
  done (took 48.758857107 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.683920163 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.684087592 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.684063877 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.683793346 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.683789673 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.684228161 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.684023032 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.684132247 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.682784113 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.68423253 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.68407297 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.684346446 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.68345378 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.684847088 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.685458957 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.685684648 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.684727926 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.685683498 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684481142 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.68447823 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.68461846 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684158135 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.684625211 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.684904593 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.685178262 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.685347998 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.685206223 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.684748483 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.685076577 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.685525445 seconds)
  done (took 52.156478251 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.706121972 seconds)
    (2/2) benchmarking "in"...
    done (took 1.70621374 seconds)
  done (took 5.032284623 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.685202392 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685409779 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.684994833 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.685342598 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.684773661 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.684983662 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.685200119 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.684139979 seconds)
  done (took 15.099736078 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.687031555 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.686271424 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.686250951 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.686310126 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.686278487 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.68599231 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.692427929 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.68591674 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.688019572 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.686633671 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.69356437 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.694932451 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.688532415 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.687069387 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.686996661 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.687575625 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.68610319 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.687255773 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.686248337 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.686402783 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.68596481 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.6885343 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.689017791 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.687944499 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.688984129 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.697318943 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.691152272 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.686832959 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.688907191 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.691112432 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.687753616 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.68607435 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.687065041 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.686601284 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.687330417 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.687605785 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.695166093 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.6889168 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.693086023 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.68740444 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.688406125 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.688505183 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.691154044 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.690013281 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.690706356 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.688382601 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.688945907 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.689086828 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.687965093 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.691154905 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.696538306 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.689390433 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.68858208 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.692743077 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.690033248 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.69613216 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.688531559 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.692756255 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.698629427 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.699846195 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.700331676 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.697386307 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.690731538 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.688806791 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.697958974 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.71388333 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.696618024 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.688602266 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.688438243 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.689534678 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.696146987 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.700771797 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.698785829 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.689704757 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.690650408 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.688577878 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.691036041 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.689505595 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.696774071 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.693541922 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.690001463 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.690100145 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.698444945 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.713534024 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.690525596 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.688998085 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.690263179 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.689753074 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.692561308 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.701352144 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.69048876 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.690002107 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.690098546 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.690817959 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.69215125 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.691298048 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.690053222 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.693090819 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.68985531 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.690794304 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.691625593 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.694455627 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.700114279 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.692368494 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.690626869 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.697439317 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.69177137 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.693079345 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.697732718 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.691060635 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.692319811 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.692254022 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.698243126 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.690463269 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.694563886 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.700051257 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.691444574 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.693691193 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.691778351 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.691472313 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.699995972 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.717713754 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.691261135 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.691774964 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.696954226 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.702621372 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.691486208 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.696048164 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.691292508 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.69135081 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.692127076 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.693890398 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.691995311 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.694119046 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.691299038 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.694155089 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.692179981 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.691552806 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.692110348 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.694235257 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.69448719 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.69404986 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.695123501 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.694126235 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.693183673 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.694195637 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.701229264 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.693553746 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.694275245 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.693675785 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.692771528 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.693112826 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.694970059 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.693990141 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.693802947 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.693447458 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.694468873 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.692732842 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.692823677 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.693450828 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.693095164 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.694827511 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.698395333 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.693728863 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.698091423 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.694644065 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.693765608 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.694409666 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.694455229 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.694424662 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.694437733 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.694262531 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.698055286 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.701809198 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.694438793 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.694628973 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.697828248 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.694878381 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.695506446 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.694592745 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.697609123 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.703543264 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.695343001 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.701028157 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.69405432 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.694746517 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.694327134 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.69625715 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.69506861 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.695947658 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.69786346 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.702496835 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.707234338 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.704817779 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.696054729 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.698628869 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.696954362 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.69924032 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.698518059 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.694671574 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.696283994 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.695002342 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.696164575 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.695657034 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.697155382 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.695683195 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.696050524 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.696541332 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.695224491 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.696075641 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.696026267 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.697985284 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.698960802 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.694891615 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.696353516 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.695897194 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.696449529 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.695798393 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.695779266 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.697063764 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.696087129 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.697295229 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.703797333 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.696571083 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.699664744 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.700098105 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.698322614 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.696921129 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.696535655 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.701140879 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.697362084 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.704549691 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.698522764 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.699419853 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.705838835 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.698396126 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.697212762 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.701807522 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.696256941 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.696892434 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.700733977 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.70465446 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.69762572 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.697174784 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.697585579 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.698957173 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.697081201 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.704503731 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.698426173 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.699058643 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.698257051 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.699257004 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.698050999 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.700339168 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.700067095 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.698646206 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.70054778 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.697717241 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.697611837 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.701278227 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.699081219 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.697974483 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.699091135 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.702176088 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.706687986 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.703975482 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.699901728 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.700236991 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.700177642 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.702382043 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.700605845 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.699116126 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.699316336 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.710571234 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.706898865 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.705381321 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.700946073 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.70017298 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.705346947 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.700394453 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.702527294 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.700646295 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.700451156 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.699809821 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.699918194 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.699069429 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.700377101 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.699805517 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.701776592 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.701756938 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.704229874 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.699013793 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.700959024 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.700520827 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.699856441 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.69980443 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.701005486 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.699796308 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.70260283 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.703132406 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.700704403 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.70100068 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.707312435 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.700763771 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.702468728 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.700926168 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.70104525 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.699510541 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.701389088 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.700594999 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.703741418 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.707560684 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.704581335 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.711629762 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.70222499 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.710050456 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.700932583 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.704051619 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.708475712 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.700528744 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.700163588 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.702819637 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.701010839 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.708395806 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.702462176 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.702144111 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.705837775 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.700932039 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.7011236 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.701337799 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.701489161 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.702093855 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.701141673 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.709535013 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.702721559 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.707566442 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.704588751 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.70211888 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.702451947 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.703147673 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.702416693 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.706918618 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.703096937 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.703910524 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.70273087 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.703428784 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.703067598 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.702722382 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.702366595 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.70348672 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.702969461 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.709834917 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.703663814 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.707729123 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.703294512 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.710499004 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.704291275 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.709833278 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.703674955 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.704375905 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.703099303 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.702246691 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.704720912 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.703185532 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.704040663 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.703621348 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.705436116 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.706965848 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.703768206 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.705230861 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.704757102 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.70367734 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.704325794 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.71325034 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.726512957 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.705508426 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.706772728 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.702918012 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.705665713 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.707185029 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.70323473 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.703729338 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.7074232 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.715018438 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.711975536 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.704874034 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.704408383 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.704964405 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.704466427 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.703912119 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.704382049 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.703663429 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.704277429 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.705416153 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.704721859 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.707458098 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.705275364 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.707154549 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.706229507 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.706850014 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.715456264 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.706309433 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.706720133 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.705581143 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.70474275 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.706469046 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.707558849 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.704925724 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.70684734 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.704569788 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.707166707 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.712935489 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.712575142 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.708813669 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.706073279 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.705569235 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.707618758 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.706455195 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.705998157 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.706162074 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.706496658 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.707450587 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.705709376 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.706574162 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.705557861 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.706314859 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.705834053 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.705041359 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.709114593 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.714448716 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.706775684 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.706250766 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.706189813 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.705401204 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.705821901 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.708072149 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.715459096 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.709862508 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.718575706 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.715048232 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.710379336 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.707614435 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.711229853 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.715200072 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.706474323 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.707308799 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.706390858 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.7092297 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.707977096 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.711182561 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.706581598 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.713921074 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.707885905 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.707812648 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.715957401 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.710355572 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.706848186 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.709013078 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.712615231 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.708920033 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.707397258 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.706848408 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.709191087 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.713326596 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.711398288 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.708660487 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.71098928 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.7067762 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.709876099 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.710974957 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.707603169 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.709971051 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.708489897 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.710663395 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.707982012 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.707392234 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.708688719 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.708536276 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.708834512 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.712120769 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.715559852 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.70843631 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.711188015 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.710225812 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.708899684 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.709244105 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.70939655 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.707727165 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.709144324 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.708075468 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.708614973 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.710207001 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.712273575 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.708467734 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.711179334 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.71248093 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.709778478 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.715353493 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.71941808 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.716447719 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.70878516 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.708998929 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.709246698 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.712785305 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.708663781 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.709890185 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.711220704 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.712197261 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.709017491 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.710333115 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.708883936 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.713369151 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.725843582 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.710809261 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.711182918 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.711643265 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.713402874 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.709953495 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.710816317 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.709694804 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.713924742 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.71353498 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.717261486 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.710615122 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.718227358 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.712372955 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.712200588 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.714070411 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.71507639 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.719111842 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.714158976 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.710113226 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.710875 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.716028123 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.7274983 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.710524253 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.719630048 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.741273095 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.712054907 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.712457849 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.710930788 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.711716126 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.710846133 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.712478283 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.7112081 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.711181897 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.711063918 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.710447152 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.711817715 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.718285952 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.713056678 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.711165447 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.710953323 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.711969663 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.713259754 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.712170495 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.711810532 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.710780741 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.712344082 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.712154903 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.71214855 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.713133095 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.723760765 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.722739046 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.712314328 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.713064128 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.711236246 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.715884901 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.715509009 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.72299495 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.718931889 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.711941087 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.713756727 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.713736744 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.712125079 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.711975861 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.715586319 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.713465707 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.714055305 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.711868403 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.723356978 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.721858369 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.720396255 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.715375746 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.715443164 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.714937602 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.717289443 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.715657178 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.715245525 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.717725857 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.716752129 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.719390491 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.71446058 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.716685631 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.719620689 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.723078795 seconds)
  done (took 1016.197380012 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.71552529 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.716220649 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.715920201 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.715788592 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.714926861 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.715335791 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.71571605 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.716142837 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.715557712 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.715858945 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.716854955 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.715805194 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.716033258 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.715956751 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.716252728 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.717318292 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.716193869 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.715908016 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.717377803 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716054236 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.716264244 seconds)
  done (took 37.686786548 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.71656014 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.716689617 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.717193583 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.717018545 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716506828 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.71627865 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.716982016 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716795045 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.716806956 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71664567 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.717523732 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717833707 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.717121311 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.717647178 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717179347 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.716956555 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.717410264 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.71790602 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.716638513 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.717354467 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.717305087 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.717593731 seconds)
  done (took 39.426772506 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.71889277 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.718896573 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.719392183 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.717281076 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.718731777 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.718369791 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.718097814 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.718687724 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.719215845 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.719623977 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.717827476 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.718798846 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.725716255 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.725519119 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.720150954 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.717575729 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.864213696 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.719304619 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.718169379 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.719982506 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.718043821 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.724441614 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.71811843 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.718362684 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.717550052 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.71817436 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.719231461 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.718182411 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.719254471 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.718936075 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.723715664 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.718766326 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.720059981 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.721598316 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.719321574 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.720230853 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.723632982 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.720491054 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.719237131 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.71878041 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.730390726 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.74278828 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.719717981 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.725392257 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.7204385 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.719637546 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.723241109 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.728390603 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.720591088 seconds)
  done (took 86.114262727 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.720101863 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.721991345 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.721235886 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.719303121 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.719994289 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.719185273 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.72026643 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.720276084 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.720373371 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.719947658 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.719764704 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.720040864 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.720179026 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.721171049 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.719183893 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.719116164 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.719032119 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.719056854 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.718142263 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.720686872 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.718335155 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.718656727 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.718550232 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.719392195 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.71831625 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.720391206 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.717912703 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.717656896 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.719186998 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.719115378 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.718489851 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.719270152 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.718146004 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.719038658 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.717557981 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.718641322 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.718752374 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.717823062 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.717492285 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.718478053 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.717988678 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.717741686 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.721847322 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.720831362 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.71842395 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.720234925 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.71954564 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.718178999 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.717797075 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.711412573 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.715914918 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.712142756 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.709942108 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.715573041 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.713807904 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.71374397 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.710213121 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.712924689 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.712337686 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.71119854 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.71068773 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.709945162 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.712345254 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.711077767 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.712891356 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.710743683 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.710333753 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.709262976 seconds)
  done (took 118.425030753 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.709185179 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.70996342 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.713988298 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.710017616 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.714321485 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.70990939 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.713479279 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.711182736 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.7113821 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.713419938 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.714293005 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.708783287 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.714484251 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.713922612 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.710855225 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.712939261 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.709104622 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.714159154 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.713894292 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.709410234 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.714168406 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.709497649 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.711435493 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.711682739 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.715013108 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.710736353 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.711139059 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.709483824 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713324386 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.710822794 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.713822524 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.714405647 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.713052607 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.709717853 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.710323422 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.7105044 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.709255385 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.710945003 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.712760482 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.71175214 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.710168973 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.711146602 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.710664992 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.712838974 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.71138272 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.710691849 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.712213659 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.710202505 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.711483993 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.712244546 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.710811179 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.714099676 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712636539 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.711690432 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.712939289 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.712608712 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.71209092 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.710368929 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.712522974 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.713359794 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.71437536 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.715931142 seconds)
  done (took 107.782663773 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.710303542 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.711328918 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.710528038 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.711902896 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.711045559 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.713277062 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.711689544 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.710266605 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.715928932 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.71072346 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713251446 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.712310064 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715864267 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712103074 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.710612379 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712828677 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.708590026 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.710524188 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708129501 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.712052099 seconds)
  done (took 35.877639591 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.71256945 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.710465207 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.710369726 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.711241381 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.711876007 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.709223153 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.71044542 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.707833374 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703456703 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.707427552 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.709999484 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.708169571 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.701137787 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.697552354 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.699888948 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.698992131 seconds)
  done (took 28.95337469 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.696937792 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.700611605 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.699642239 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.701433804 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.698812463 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.702799046 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.698923509 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.702056913 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.699766064 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.69837875 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.698306561 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.699311591 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.699533229 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.699914393 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.699614377 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.699756587 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.699141651 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.699647758 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.701072974 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.704802151 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.699838843 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.698763296 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.699684051 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.697463626 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.697835456 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.700625882 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.697421705 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.69845111 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.696392717 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.70065387 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.708023533 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.694965491 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.69636684 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.698299642 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.696549845 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.697396815 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.697664343 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.702779062 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.702614858 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.702000819 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.702976737 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.702515082 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.701079923 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.701309259 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.700395273 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.702968924 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.703649247 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.702640641 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.701101143 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.700881102 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.703461207 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.70234548 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.703337458 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.703535521 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.701904035 seconds)
  done (took 95.151834215 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.700995603 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.703538838 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.702818933 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.700457472 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.703259347 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.701086057 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.704407417 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.703614551 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.703657598 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.703950909 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.705103256 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.704028487 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.70480482 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.704215943 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.705029858 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.703682488 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.706447823 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.703969279 seconds)
  done (took 32.30338422 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.704565636 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.704397049 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.704078197 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.703867056 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.698414376 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.701619083 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.702904762 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.70068687 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.703911391 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.700562769 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.702246381 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.700007033 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70069974 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.702190335 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.705399069 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.702295761 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.702073847 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.699089703 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.700061823 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.700921174 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.704551991 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.701624786 seconds)
  done (took 39.085053064 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.700892379 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.701024438 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.71426142 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.723155751 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.721464318 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.734718992 seconds)
  done (took 11.929636581 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698148392 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700539342 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.700135362 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700427414 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699992113 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70067587 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700014606 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701159833 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702554874 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698904572 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700707489 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699372545 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700863006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701462458 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699957682 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698938297 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701751199 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700761944 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700538823 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699996872 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700303864 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700363444 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700671174 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700904697 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700996668 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701466649 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701376114 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698598634 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699082567 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700603541 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702033408 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699284424 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69991222 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700669744 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699600913 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699904957 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700163593 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699077468 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699066691 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700015036 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.697500789 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700527361 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698693372 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700278643 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699566711 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698562822 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698747441 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700669828 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698412372 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699654518 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69922005 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699248436 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69919474 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700957715 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698169361 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698169951 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700016971 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70150046 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699018384 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700743507 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698927551 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699757541 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700088176 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700740312 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700046757 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700199389 seconds)
  done (took 113.835725487 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698144863 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.701287388 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700513071 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699711845 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701017713 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700548397 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700470227 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69973691 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700379208 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701915252 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699058007 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701124367 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700550915 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699803941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699842508 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70072318 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700495538 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699831282 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701179721 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700299768 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701359682 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700060826 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698643229 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700383816 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699834184 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699523438 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700239132 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701358703 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700530868 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69942178 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699777912 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698408552 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699603229 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.698821648 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699692384 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700491131 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699546366 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698800074 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699323074 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700391134 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698775092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700323419 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699076521 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699794365 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69729514 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700702831 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698806355 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698112906 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698747687 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701419757 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699740267 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69978437 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698691767 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699187563 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69959314 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700039093 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699636683 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699300684 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699178942 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699857635 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70030804 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698975016 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699767171 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699491493 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698623611 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69973927 seconds)
  done (took 113.824767923 seconds)
done (took 2359.524411386 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.767033975 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.724567446 seconds)
  done (took 15.12588649 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.864826811 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.814677171 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.695551505 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.716045303 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.695115849 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.720833336 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.718624864 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.694644026 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.696167221 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.695208306 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.695460395 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.880370898 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.701887435 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.694748424 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.693990638 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.788196901 seconds)
  done (took 49.405205264 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.697286476 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.698489617 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.707511314 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.701015123 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.698003631 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.709450743 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.729660174 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.701383161 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.731639362 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.708261343 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.766718773 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.70812929 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.696128096 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.745815592 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.709439124 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.710669585 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.791164483 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.772375409 seconds)
  done (took 32.611194648 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.771716513 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.706397647 seconds)
  done (took 10.112205859 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.705583132 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.758453119 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.773876024 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.719740839 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.726501315 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.69809439 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.737968602 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.741027521 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.691981652 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.717326441 seconds)
  done (took 68.902190344 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.702823336 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.699011552 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.696975552 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.694900826 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.693089126 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.6990927 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.695964882 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.693836473 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.357596334 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.73173037 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.703060425 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.700884139 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.696093794 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.699405467 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.694731852 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.717263297 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.807716824 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.693884459 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.692850799 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.703945213 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.698173125 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.748804684 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.708720854 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.696525785 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.725795963 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.355641802 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.704595209 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.701697196 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.80695618 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.693566693 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.697162709 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.882116751 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.69852542 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.155424209 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.963374935 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.701109138 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.710289503 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.703763513 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.695324487 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.816212529 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.697743334 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.702323478 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.598581862 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.945452163 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.789770923 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.740765523 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.01241494 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.715059337 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.69804625 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.727197154 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.700006682 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.696843093 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.711254655 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.201199446 seconds)
  done (took 123.206828471 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.696046625 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.041189579 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.859752479 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.695469587 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.976571337 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.898525155 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.696558999 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.741225228 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.696962534 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.92184342 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.94805229 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.798160932 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.695384557 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.694174972 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.697383504 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.695046141 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.84702221 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.763930988 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.696238734 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.694432475 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721347668 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934633092 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.816912218 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.698158114 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.720868585 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.903627697 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.815802546 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.797342006 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.476648703 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.69580862 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.757790905 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.697428157 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.698866141 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.694608037 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.848783501 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.787229904 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.776048714 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.699435534 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.696916018 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.69574346 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.353244367 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.893500937 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.788167062 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.824545488 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.946857165 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.900712312 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.473419319 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.695405089 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.425743592 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.857932515 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.921797034 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.92220471 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.815131691 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.69928149 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.042152879 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.695540583 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.698458724 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.943718341 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.916548945 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.792976184 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.700013245 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.697781834 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.695676301 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.933279235 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.70047839 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.789953161 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.700369154 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.696235263 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.791852809 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.793450673 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.929616075 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907193818 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.726434585 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.048068096 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.195910347 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.941840362 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.762119562 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.944935047 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.701676441 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.695360825 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774393211 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.538583903 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.94925803 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.939730725 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.940652101 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730454974 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.410318865 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.6977105 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.920538619 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.917746025 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.955779932 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.942619562 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.932348347 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.024556936 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.698212957 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.697458292 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.923231911 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.820004802 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.699851212 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.038688971 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924958173 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.227986018 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.722932408 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.996737375 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.827503446 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.700704561 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.324023136 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.696737352 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.924746432 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.737198372 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.698975556 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.698696424 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.916098568 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.689189383 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.698595234 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.349219875 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.758316235 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.700356364 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929495506 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.701767529 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964444271 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.702126222 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927974872 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.160362052 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.728052334 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.870096955 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.941987383 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.701776419 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.936443997 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.939946613 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.813394881 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.919820658 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.414777459 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.700603445 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984375388 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.700122199 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.699815952 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.869640354 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.700730703 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.840895758 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.702685232 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.989338135 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.720861267 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931377548 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.702786794 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.951005554 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.730671581 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.749528761 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.703690233 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.81839802 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.702446526 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.531480247 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.854933969 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.703583885 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.699816725 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.252270997 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.70262018 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.848291293 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.924072165 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721773107 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.769940798 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.775072436 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.701835903 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.780650732 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.723244853 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.091226447 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.70294914 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.952252675 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.704049168 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.700557012 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.700878052 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.932885206 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.882546704 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.700814914 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.701386455 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.604267047 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.700365193 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.70000087 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.879969175 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.234357806 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.700525747 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.901314288 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.706670661 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.82769967 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.704238831 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.772017943 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.036270792 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.700787051 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.704355737 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.700873471 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.701653325 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.70321661 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.908439848 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.72519158 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.192832977 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.837413593 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971597147 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.010506572 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.940133155 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.742958408 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.706288994 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.953877058 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.705129231 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.76308043 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.705504177 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.721704412 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.926404811 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.706137476 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.909752716 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.969676331 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.546838382 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.749470715 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.705676964 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.702556772 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.701329509 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.845089297 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.78628237 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.704845684 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.703924182 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.816470688 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.823129243 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.910680562 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.703940319 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.738022043 seconds)
  done (took 864.458015913 seconds)
done (took 1165.458012594 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.701323565 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.706436424 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.705768992 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.706694563 seconds)
  done (took 28.46026053 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.708230098 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.704743531 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.705442669 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.704335557 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.706012734 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.704871736 seconds)
  done (took 11.872991299 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.70438832 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.705946934 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.706413695 seconds)
  done (took 20.756263571 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.776559485 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.086888238 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.836941348 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.116807364 seconds)
  done (took 9.456276391 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.707412461 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.705057641 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.705201231 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.706438926 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.706381909 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.70722063 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.706249485 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.705503084 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.70773616 seconds)
  done (took 16.998367405 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.691381133 seconds)
done (took 92.876153489 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.496366156 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.70579365 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.898505526 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.775747497 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.002940464 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.808624042 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.322060937 seconds)
    (8/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.7906234 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.782936215 seconds)
    (10/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.933903525 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.709728119 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.820283922 seconds)
    (13/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.914914485 seconds)
    (14/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.799695752 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.721307255 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.071460465 seconds)
    (17/309) benchmarking ("sort", Int8, false)...
    done (took 4.601242408 seconds)
    (18/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.708219668 seconds)
    (19/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.645652793 seconds)
    (20/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.145050574 seconds)
    (21/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.710478224 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.074512943 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.871283268 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.729715887 seconds)
    (25/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.70587337 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.711971061 seconds)
    (27/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.792102733 seconds)
    (28/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.561372217 seconds)
    (29/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.196800038 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.798561831 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.000924861 seconds)
    (32/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.788909654 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.732844829 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.791758872 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.101633953 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.708779272 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.159995657 seconds)
    (38/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.895988552 seconds)
    (39/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.80110897 seconds)
    (40/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.983919171 seconds)
    (41/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.785756687 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.878132787 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.810936978 seconds)
    (44/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.505275017 seconds)
    (45/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.730811091 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.314103873 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 1.924935047 seconds)
    (48/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.707440014 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.626132363 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.025756897 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.023097497 seconds)
    (52/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.709007501 seconds)
    (53/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.082102535 seconds)
    (54/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.791239046 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 5.353634327 seconds)
    (56/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.083126651 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.958650955 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.15061046 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.837963921 seconds)
    (60/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.956819162 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.867093554 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.726410264 seconds)
    (63/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.949840464 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.793646645 seconds)
    (65/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.046263073 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.816437368 seconds)
    (67/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.163307324 seconds)
    (68/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.912256469 seconds)
    (69/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.099153276 seconds)
    (70/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.710890368 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.904693214 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.70956642 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.713831566 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.706881764 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.802914888 seconds)
    (76/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.088350076 seconds)
    (77/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.373430824 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.598207418 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.037240568 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.733220364 seconds)
    (81/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.863544808 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.773910691 seconds)
    (83/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.70898 seconds)
    (84/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.90924143 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.67683983 seconds)
    (86/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.844366582 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.04619944 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.824159101 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.989725901 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.863789592 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.728167382 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.948672002 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.638042711 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.465354608 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.860440748 seconds)
    (96/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.709395148 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.897054706 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.890943315 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.932919971 seconds)
    (100/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.823752686 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.728741216 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.712442785 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.217755829 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.831969053 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.158187346 seconds)
    (106/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.793460137 seconds)
    (107/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.826147976 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.024182919 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.974330347 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.736402554 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.70951447 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.811120958 seconds)
    (113/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.924599073 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.712315981 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.811168649 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.814830147 seconds)
    (117/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.713602182 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.844349816 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.105976296 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.71328958 seconds)
    (121/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.892910782 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.888036525 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.065692012 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.930829052 seconds)
    (125/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.71305972 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.849446261 seconds)
    (127/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.040075103 seconds)
    (128/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.720340589 seconds)
    (129/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.874441932 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.604814873 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.850982243 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.715356546 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.970259075 seconds)
    (134/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.867509171 seconds)
    (135/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.714293182 seconds)
    (136/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.733663232 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.733592463 seconds)
    (138/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.711311887 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.085024581 seconds)
    (140/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.968258768 seconds)
    (141/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.715953494 seconds)
    (142/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.46169351 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.962592653 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.194853543 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.818619535 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.971531349 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.645757783 seconds)
    (148/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.970832229 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.901858187 seconds)
    (150/309) benchmarking ("sort", Float32, false)...
    done (took 5.453005603 seconds)
    (151/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.745654225 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.712020722 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.417486718 seconds)
    (154/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.099159095 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.275739387 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.389088765 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.030064106 seconds)
    (158/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.726264717 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.716739173 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.997230694 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.038694225 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.601885593 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.716259113 seconds)
    (164/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.736810111 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.727982021 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.093464266 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.850197475 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.712131868 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.714278752 seconds)
    (170/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.606877816 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.716543945 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 8.321188274 seconds)
    (173/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.816261839 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.029069766 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.905903289 seconds)
    (176/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.221532118 seconds)
    (177/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.816641887 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.09485991 seconds)
    (179/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.717023003 seconds)
    (180/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.905973843 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.817169002 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.712938989 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.905604863 seconds)
    (184/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.714513577 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.854218526 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.823836324 seconds)
    (187/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.914408613 seconds)
    (188/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.061060801 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.094689012 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.718139706 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.160767181 seconds)
    (192/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.848094524 seconds)
    (193/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.849793281 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.846354414 seconds)
    (195/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.749724885 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.839744861 seconds)
    (197/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.81704741 seconds)
    (198/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.796076033 seconds)
    (199/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.71599989 seconds)
    (200/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.824228557 seconds)
    (201/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.458666778 seconds)
    (202/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.847278764 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.011361938 seconds)
    (204/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.051571796 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.905910751 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.830329577 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.023181044 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.942332077 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.784483754 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.820686597 seconds)
    (211/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.720882911 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.000224023 seconds)
    (213/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.935733169 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.330442888 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.784631858 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.946319896 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.699795486 seconds)
    (218/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.082640431 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.720436268 seconds)
    (220/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.334170503 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.030572959 seconds)
    (222/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.857973531 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.064609843 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.374831959 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.937406786 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.716342433 seconds)
    (227/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.612922062 seconds)
    (228/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.866375774 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.720356807 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.962743033 seconds)
    (231/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.738180567 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.85980471 seconds)
    (233/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.7387184 seconds)
    (234/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.880297112 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.845525317 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.975240935 seconds)
    (237/309) benchmarking ("sort", Float64, false)...
    done (took 5.493021621 seconds)
    (238/309) benchmarking ("sort", BigInt, false)...
    done (took 6.719542044 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.732862486 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.50049614 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.719855267 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.111655589 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.45771465 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.950758825 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.755562783 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.498789191 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.849577368 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.823118336 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.03011833 seconds)
    (250/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.033933071 seconds)
    (251/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.722901762 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.717284249 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.081373378 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.824184147 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.717948114 seconds)
    (256/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.079237477 seconds)
    (257/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.054136212 seconds)
    (258/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.812184168 seconds)
    (259/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.533469539 seconds)
    (260/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.785313686 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.717534216 seconds)
    (262/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.827387245 seconds)
    (263/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.719430174 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.804427857 seconds)
    (265/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.259343937 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.069122955 seconds)
    (267/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.81648768 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.724792685 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.216597812 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.39035172 seconds)
    (271/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.750085747 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.049730274 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.889018384 seconds)
    (274/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.718644562 seconds)
    (275/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.299053321 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.761197718 seconds)
    (277/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.820532641 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.748701792 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.135295648 seconds)
    (280/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.056945865 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.559048383 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.732478967 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.918800277 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.771025829 seconds)
    (285/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.95169749 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.860696006 seconds)
    (287/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.728924661 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.456897337 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.727738773 seconds)
    (290/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.136873729 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.527683806 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.728368227 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.731218546 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.046778013 seconds)
    (295/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.874768611 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.751808251 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.668233474 seconds)
    (298/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.740375756 seconds)
    (299/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.855725335 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.76292372 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.728618871 seconds)
    (302/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.506528798 seconds)
    (303/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.636335696 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.985489415 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.856632348 seconds)
    (306/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.751907801 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.940693154 seconds)
    (308/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.758268589 seconds)
    (309/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.978574465 seconds)
  done (took 959.420325444 seconds)
done (took 961.125339617 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.758514406 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.74949668 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.732171081 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.75502409 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.845441232 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.778521272 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.74592197 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.736434614 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.784170668 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.782965761 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.732767444 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.779785198 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.736480157 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.735661873 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.735718918 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.753554433 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.052336356 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.768368871 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.754839994 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.74558762 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.75146239 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.732198263 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.783338401 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.77820131 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.738905008 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.738239369 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.736172184 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.753704249 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.845936076 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.737037622 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.739708371 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.748013621 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.048797531 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.770750626 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.73157501 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.753441465 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.745825255 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.747502177 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.739200744 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.767097902 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.139082078 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.782972031 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.735373019 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.735957469 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.734918294 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.741739257 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.734493121 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.743213565 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.749879339 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.753158197 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.134308339 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.795959276 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.738068154 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.736227329 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.750162397 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.736452299 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.740208546 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.752519529 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.75530189 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.752386969 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.032788835 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.779329249 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.740076975 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.753718345 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.745979284 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.172637542 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.782942896 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.742482607 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.138228808 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.788836005 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.168620381 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.789681789 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.739148841 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.751165193 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.771298627 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.050362114 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.771499251 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.735465799 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.744732003 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.734024232 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.748527601 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.751316954 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.741331027 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.736324561 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.75225199 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.782926884 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.749095438 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.738094193 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.748284638 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.756545301 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.744908361 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.749120778 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.741203567 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.735848352 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.750413146 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.741366447 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.740368669 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.739246262 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.742721106 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.75124952 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.133922399 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.80105533 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.734332285 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.734841659 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.739346791 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.753722853 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.133365801 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.782785041 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.760375111 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.789717115 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.740223386 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.033309523 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.7773069 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.755017356 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.749449236 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.742167487 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.737160765 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.034616933 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.170292618 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.799668082 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.738712619 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.735923687 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.75536188 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.740204054 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.736446847 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.05526811 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.777217672 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.754855763 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.861369431 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.751304089 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.771925566 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.737281705 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.742765827 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.789074439 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.755506761 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.770635266 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.741314174 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.75622096 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.756852856 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.736157573 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.750272944 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.752772718 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.738397432 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.747739193 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.737822324 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.788889863 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.75445879 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.754229573 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.760261746 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.862362691 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.736741194 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.034889341 seconds)
done (took 273.930874472 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.817164948 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.739304157 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.829212942 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.738820823 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.825599102 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.814160254 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.736972656 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.738654188 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.738196266 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.224218538 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.738409931 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.746135062 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.737979539 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.738795268 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.808178687 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.738440619 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.738985685 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.174907583 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.740014269 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.818082083 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.738167358 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.738717724 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.739256745 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.234103125 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.737744518 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.737715531 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.822635926 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.739322531 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.185232444 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.740259051 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.739836344 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.187424807 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.8190856 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.765971967 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.7469647 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.747512003 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.826449284 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.751671422 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.805513044 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.807420771 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.829712952 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.772618836 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.740872885 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.737772216 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.746596951 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.740501356 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.739948987 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.774849187 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.738820109 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.747417456 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.176674509 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.745015967 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.748508781 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.740742431 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.740038541 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.769862429 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.741387362 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.740243834 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.819155391 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.741472587 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.808144343 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.235832405 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.226190478 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.740702604 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.740547473 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.740566031 seconds)
  done (took 176.489621004 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.808396515 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.816512813 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.808107238 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.747931508 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.788095301 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.807102719 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.749986797 seconds)
  done (took 14.198414271 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.747133492 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.742249288 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.78993124 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.789831959 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.741111689 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.908801255 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.742125787 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.75302591 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.746936415 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.769145002 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.742047211 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.743134431 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.748441879 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.740392698 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.791692659 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.753240693 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.856671009 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.743883256 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.743192396 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.889714106 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.749287551 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.749690505 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.767390219 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.754007311 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.743364559 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.751829871 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.319681683 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.743159753 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.742751502 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.743763049 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.742569412 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.784712777 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.742861344 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.741676512 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.743919061 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.856260905 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.74239251 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.742552795 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.74419354 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.742005989 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.742327228 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.743521483 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.744964609 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.743487396 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.743691998 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.766083103 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.744226945 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.743392369 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.743821839 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.744460433 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.768718528 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.743561047 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.743295377 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.748427564 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.787591675 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.751316359 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.744037154 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.743525291 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.744310388 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.74492991 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.892594038 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.79469263 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.745077055 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.793040696 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.743667595 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.74481857 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.743984889 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.743749223 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.830429438 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.743617951 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.793794751 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.745630847 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.903906258 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.766532767 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.74561589 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.747417966 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.750002547 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.745025591 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.743399494 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.753140037 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.744626152 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.747140603 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.751867982 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.750697105 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.746211926 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.856871052 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.884987139 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.745081492 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.747627009 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.751626326 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.745977704 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.789262179 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.744952349 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.74546424 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.801611506 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.859796933 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.772345339 seconds)
  done (took 193.443289424 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.752342016 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.752717935 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.746936278 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.761337058 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.747243473 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.74616855 seconds)
  done (took 12.184128054 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.747593517 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.749114248 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.745774231 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.745765538 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.746249319 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.747526972 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.745943485 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.747149251 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.751121983 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.74509872 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.746607124 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.747545219 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.747056971 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.746522373 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.747375641 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.74657211 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.746295365 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.746808767 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.747975607 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.749063567 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.004677408 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.747815035 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.747474619 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.751667616 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.751965473 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.748892956 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.761023537 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.748106325 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.747649427 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.756646982 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.754304799 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.748183707 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.752105811 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.754238475 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.751715078 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.752753872 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.752838652 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.747873296 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.748253189 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.750063589 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.748630595 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.747697317 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.748585553 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.749018504 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.750889699 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.755522629 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.753261028 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.761054935 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.746657243 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.751597887 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.749482154 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.749327711 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.749525822 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.750987401 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.753997337 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.754888395 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.753590791 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.748827164 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.748776549 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.754333452 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.752764607 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.749993947 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.750718627 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.75373771 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.756701289 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.751176393 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.753468532 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.75326963 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.748938299 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.748286172 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.75081688 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.749235636 seconds)
  done (took 128.947207648 seconds)
done (took 526.954954639 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.028165138 seconds)
  done (took 8.708948825 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.913340898 seconds)
  done (took 8.65434158 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.369435825 seconds)
  done (took 10.052475781 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.76886669 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.798752484 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.766444257 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.749117143 seconds)
  done (took 28.793363915 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.987527836 seconds)
  done (took 8.670890198 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.772153125 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.747934563 seconds)
  done (took 15.274714788 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.791149441 seconds)
  done (took 8.473528261 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.781757618 seconds)
  done (took 8.471553381 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.76922302 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.763962554 seconds)
  done (took 15.241629169 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.750530611 seconds)
  done (took 8.433178046 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.984025632 seconds)
  done (took 9.773089985 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.769734135 seconds)
  done (took 8.523752428 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.764042546 seconds)
  done (took 8.444942562 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.853894855 seconds)
  done (took 8.535341636 seconds)
done (took 157.734495792 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.752008281 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.753814114 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.753222833 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.752526971 seconds)
  done (took 28.692090909 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.781939843 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.781772676 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.783371495 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.793734576 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.78571236 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.781967772 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.77568851 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.77504074 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.793467612 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.785716149 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.786192773 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.784825344 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.782495984 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.77705868 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.784957798 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.786045543 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.79281294 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.785584394 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.775368117 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.786583762 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.751328918 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.794660261 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.785803446 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.751523759 seconds)
  done (took 44.447536481 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.940495233 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.82359984 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.903816951 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.803079602 seconds)
  done (took 9.153573291 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.801339036 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.804209053 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.815084615 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.853660953 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.876607187 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.813440964 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.775357733 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.771203604 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.759246115 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.803995529 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.8789025 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.798375907 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.891973262 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.751518847 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.93702594 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.750677706 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.751151724 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.803019551 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.854444829 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.868000316 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.751088854 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.800645006 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.805238314 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.799071533 seconds)
  done (took 45.19863057 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.752255922 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.759793509 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.758575168 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.753656871 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.754407791 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.754165501 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.758505645 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.75462626 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.774527863 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.755296989 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.752899718 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.752833204 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.760717642 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.753061924 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.752845724 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.766222494 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.767646925 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.754103021 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.756787578 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.759466998 seconds)
  done (took 36.836637745 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.75069283 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.597550641 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.097515446 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.003121187 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.74946467 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.755422368 seconds)
  done (took 30.638698156 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.765578571 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.762119881 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.752635582 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.811328927 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.898277343 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.763768772 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.754028289 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.763737744 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.79965971 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.821445391 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.773714981 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.781512682 seconds)
  done (took 23.133932312 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.753071878 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.755955821 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.755550819 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.768474129 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.762967093 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.761129392 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.761403812 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.75284554 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.768774635 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.771746629 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.763927655 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.766369381 seconds)
  done (took 42.831802109 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832397196 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.628250085 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208398355 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213623857 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278212857 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957269948 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.752969695 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.838162895 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.754569308 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025892636 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.153818244 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963329292 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.000252262 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.568660325 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.760392422 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.230905197 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046493713 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974624327 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787041671 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397260745 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863372487 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.273442973 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.446349507 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.867789383 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957435014 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.876130447 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.014786609 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.704171761 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804129255 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759442556 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760531819 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.756361681 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026721511 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877239884 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824868846 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760510441 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.169507004 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.464089223 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.760303633 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.465390151 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.350829538 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.880181794 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759683355 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757060477 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.682335548 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.277432874 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846813269 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.760351503 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.455838389 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.756519652 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.760438748 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831266216 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.759509479 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.563051273 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.438991127 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.024243581 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.756271745 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758112526 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316234162 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771762001 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39732345 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.690932808 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.839449247 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454936755 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223978049 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.91512542 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.759019361 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760390731 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.684737169 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.455250551 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87431924 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.896592097 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.775429789 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39893949 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052092901 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.198797889 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821611878 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039950043 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.618502529 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.691967233 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977316228 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.724068849 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686599469 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.606100928 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.685231423 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974757977 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796384099 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.3762912 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797251139 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.84114499 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.766643877 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775779225 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761556286 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.973306157 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.653837522 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.760826532 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.069670968 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017481507 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776000097 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.843301521 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687278374 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.760732413 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004989736 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.965007884 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.01265241 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.245474641 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850010788 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.69980201 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.774640865 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.689780453 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.770463808 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.031409732 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821766317 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78218015 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880072903 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.709070622 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012314524 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.726171572 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.860455111 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.149080485 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005055848 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.1051961 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.012409119 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823934012 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.763479177 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.764064133 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.466431028 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373695532 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.97825074 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.777639187 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256282737 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.771578871 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.762012635 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700990853 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.417512742 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.151908343 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.85342869 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974300729 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.70660538 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042136988 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.690751032 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898115325 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.773559944 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.976784088 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.413376659 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.855520988 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015990912 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.011970578 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.00559076 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77461385 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778877233 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858357501 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782648936 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.183140971 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013355908 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.768429456 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.767681115 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.475267077 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.825888872 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771796273 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.772295984 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.290410601 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045210426 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.79456817 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.771844229 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.642118975 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.776685132 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827709331 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770642762 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.770212529 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.284503525 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273247108 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.772159782 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.422806152 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984486542 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771087418 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.42314241 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950720129 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.77823752 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.038091973 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83506637 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.694045341 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.469527303 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.466886378 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770787627 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.701532116 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.767191025 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772307993 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773524699 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.957787411 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.045714472 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82323584 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.47160831 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.874922622 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768236029 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.772088051 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768752631 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.260176085 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798639651 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270642952 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.902145898 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90010388 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.78090291 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.694673772 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.772751598 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770658092 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.766665562 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.724978752 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816048749 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.478932435 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97823814 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013919386 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.174508927 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775135255 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.478008049 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.893192737 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.780152887 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.114617272 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290265854 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.870431318 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831544197 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.77351889 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.47161104 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.503886165 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327818724 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074460603 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090960923 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129530234 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.133453638 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.088448347 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.854621421 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99473913 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.290044636 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.822402485 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.857990652 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706316568 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778007919 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.419087117 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123627958 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776602713 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987130471 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065222344 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.168844392 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909847941 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.973900645 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800816818 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.585947912 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.795520598 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.304026438 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790549974 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.283823068 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976177801 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851765818 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.094148815 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.838497518 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.770534749 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120213448 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809653466 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.471169557 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.12320724 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.165258627 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.282493307 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997158162 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.769940852 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.209915884 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121939712 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.950865809 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.885530666 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698471427 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.774774379 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.774962606 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.783611591 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.743357289 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.594154821 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.013147303 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77640562 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997083125 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.879431614 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133371515 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.677947334 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.770673282 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77175931 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0218834 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43816297 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922336981 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.063292671 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.334758972 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772393891 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.698163859 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697565554 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.471292519 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.782077029 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735694175 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982794021 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.872316065 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.452319812 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.135482331 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077495485 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014775292 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.786598385 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045278215 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053163192 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.262929234 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794932729 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.873558554 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.109480085 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.479824704 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.988606105 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.99952767 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303799967 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.984968557 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231745663 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.743007736 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.772975043 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979957146 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.987222012 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.181241356 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949074691 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.481587758 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.779407082 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126812643 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836841756 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.174371737 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963478714 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.853623441 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779765911 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846160906 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.775963403 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.775930394 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.780098021 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786231063 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.176466256 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893291041 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.784127802 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850004306 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816973334 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.341298638 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.780337846 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049041645 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132242152 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110735675 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837338952 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.773181942 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783637966 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700691581 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902247335 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.212644586 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046289363 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.891232538 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.90352853 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795568154 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.11503377 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.023828328 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07921686 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046008203 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.657217558 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397228305 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.889699513 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.992837277 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778780649 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.977297506 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993701761 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082901803 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344645271 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.89617796 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963493958 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046806207 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.134037605 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.775915374 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353367532 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.779174729 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170439095 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.810556449 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.178540665 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036122995 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777175687 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895818249 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.778837921 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.978480953 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.226066179 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.491185095 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.122154374 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.633160706 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.780208668 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052405181 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113272986 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08441559 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852750836 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.783453537 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.467193832 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908954648 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.664500343 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.989689949 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778870082 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980024712 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.487580189 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.778393252 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053785036 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081719429 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.774979144 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.711103686 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779018514 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.779387567 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993091087 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992313896 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023741017 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.775986584 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.785981471 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.585833087 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057511681 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841911143 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704788534 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.775950297 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824482579 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007353017 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792466451 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.294267712 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.480380618 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061442164 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.684068402 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791176051 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.173319415 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.154558077 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116564583 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.301524855 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007244414 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.32942411 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.603660757 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152061649 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.778650035 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.176822196 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153068088 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.779821333 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.277658833 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886518089 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.050048078 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106584974 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.784854243 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545389601 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.813386988 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991577473 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.13356426 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713311987 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.779086482 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.82837614 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.778041852 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.761157842 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.78539635 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.713886736 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.216619004 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.6195161 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337986614 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.782335161 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.868814162 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.173190777 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.303430242 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882555412 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800932193 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783777115 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.480663911 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.066335488 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020891093 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.283892642 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.869238841 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.784454601 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779532139 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.699110611 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.959895241 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.965568289 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070854797 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.112118671 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.885866638 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783511035 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.987384572 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984160333 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.18586679 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91427339 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.891092214 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888567516 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.721643625 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.485447437 seconds)
  done (took 1613.762568142 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.808074466 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.808080458 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.801479665 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.83096061 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.802064493 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.801595744 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.846123356 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.877944073 seconds)
  done (took 56.285432693 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.78225599 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.942326298 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.787665202 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.783911171 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.789054813 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.783202988 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.946356789 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.796160906 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.790065658 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.789031548 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.785340237 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.794835788 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.069085789 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.804410541 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.784943919 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.78513376 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.789537901 seconds)
  done (took 72.727598701 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.787379193 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.028886848 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.815546266 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.786019221 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.735393648 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.788523083 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.789323879 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.806795337 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.791941462 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.029855882 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.080710302 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.792332021 seconds)
  done (took 88.949770205 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.796414062 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.786706741 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.786019422 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.785946586 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.786235929 seconds)
  done (took 10.666017442 seconds)
done (took 2105.028126661 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.018293111 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.979784728 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.575841525 seconds)
  done (took 6.272628706 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.927337183 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.976933833 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.088774822 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.096727151 seconds)
  done (took 9.811219489 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.067577577 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.149907941 seconds)
  done (took 5.935218157 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.376899848 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.81519358 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.202419484 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.787783527 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.792802141 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.794256167 seconds)
  done (took 22.099040195 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.787365385 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.787361526 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.787721301 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.78833424 seconds)
  done (took 8.869153614 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.786371342 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.507290163 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.791129975 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.803510372 seconds)
  done (took 20.606520095 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.934916539 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.903484609 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.932100383 seconds)
  done (took 7.489357615 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.008273275 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.582204054 seconds)
  done (took 6.309462377 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.94703783 seconds)
  done (took 3.66730067 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.816655805 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.057284908 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.277967482 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.32538476 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.384562957 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.690206854 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.127261876 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.012178668 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.230410727 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.271924404 seconds)
  done (took 23.913815897 seconds)
done (took 130.105015753 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.328406802 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.823391185 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.987706675 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.156788996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.048404426 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.990040221 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.004245615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.148384661 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.834186071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.82870331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.171707897 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.038456465 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.953129838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.809076799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.960792777 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.809080818 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.019507541 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.176217728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.83621013 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.055128058 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.021291051 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.791752665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.99291738 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.808099486 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.026421358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.94009597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.335670791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.814417518 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.97520055 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.349690884 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.944011269 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.201575343 seconds)
  done (took 165.903057201 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.790926411 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.791345583 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.790703527 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.791309719 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.315332685 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.792285727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.792479868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.790422743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.202990117 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.183824642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.791687859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.301130719 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.791795251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.790009755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.791231741 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.791229503 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.354450928 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.791428686 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.791298627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.789496774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.788926755 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.153295023 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.793449017 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.17179817 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.342632358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.792587352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.793316823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.791086268 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.791490577 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.791880124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.791183499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.791045718 seconds)
  done (took 206.742729189 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.789775813 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.793736802 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.792198353 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.79201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.792585677 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.794607558 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.793355232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.792239767 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.431827693 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.418904062 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.79275962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.793572588 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.795078488 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.792587396 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.794636528 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.792253275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.792379463 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.792108651 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.792596333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.793006317 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.793820677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.560207128 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.793124562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.573932063 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.792713443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.792910702 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.793542199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.793418037 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.793994286 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.794584527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.795666823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.793134136 seconds)
  done (took 217.917460403 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.036037146 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.793773869 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.794775608 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.711896461 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.795553857 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.793312734 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.788251873 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.040298852 seconds)
  done (took 18.480500971 seconds)
done (took 610.774414814 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.152673847 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.993872174 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.97223142 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.81836431 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.070902294 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.86206336 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.813529391 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.876868403 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.62017707 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.891969477 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.476421756 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.838382491 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.568522266 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.843948041 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.937173595 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.871380909 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.361759528 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.461903154 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.99564532 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.880106935 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.995803543 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.714945065 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.899263391 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.663960549 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.598753507 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.773923538 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.841675762 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.369668159 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.827840542 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.972204369 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.464545255 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.075854627 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.831199404 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.812769148 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.870084542 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.8473909 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.016179705 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.828289921 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.941843593 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.508389479 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.884996642 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.531029243 seconds)
  done (took 99.305307057 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.807141971 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.801739914 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.801256979 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.801622747 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.810494782 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.800936041 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.800802706 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.801193175 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.80101861 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.801402788 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.80269925 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.811560772 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.802356115 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.812193178 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.802231836 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.802474378 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.801538912 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.811353019 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.803072331 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.803142129 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.802675112 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.801883699 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.798562276 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.802804848 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.802924146 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.803083551 seconds)
  done (took 48.634258936 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.797737788 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.969177608 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.041390705 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.818785364 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.797640132 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.801567521 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.815820727 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.802263024 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.79993764 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.799734374 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.88878727 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.804429741 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.816494816 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.042064489 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.81466703 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.797969159 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.798845525 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.79852312 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.982984968 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.814698085 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.818530305 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.803543658 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.817124225 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.811558786 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.800820093 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.798998691 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.801606736 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.298097915 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.807518455 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.890680867 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.856364878 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.827283252 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.247498032 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.048983256 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.85597989 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.812904215 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.799217422 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.894729795 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.805547909 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.799396779 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.817186755 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.805026598 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.041517662 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.322867274 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.815002284 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.799734604 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.30690204 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.904550541 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.841660961 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.809485405 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.041809288 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.816002588 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.800925951 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.800936257 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.836228818 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.806732649 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.799428548 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.157371887 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.811773326 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.818820858 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.805233617 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.800262266 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.981364087 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.809555471 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.975448581 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.809435336 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.806204198 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.801358667 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.042958758 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.817273838 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.334128086 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.814788242 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.800627109 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.892324902 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.981842236 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.329032759 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.813583294 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.982257102 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.264389512 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.826049396 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.808761958 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.286515156 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.828745607 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.80770156 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.802660968 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.80266959 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.801449947 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.843437859 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.817044035 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.245947659 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.335074845 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.173761501 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.828350129 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.81628467 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.804496699 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.156329045 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.810846645 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.80240773 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.033485434 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.34006702 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.816969166 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.809177219 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.317420827 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.818205066 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.82039678 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.81154903 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.047624668 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.8189837 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.845797441 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.802997165 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.808777692 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.805719081 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.820549784 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.810199678 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.80260991 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.310628512 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.913911235 seconds)
  done (took 224.502378836 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.803192358 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.806017941 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.801475797 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.806393157 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.801222301 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.801915681 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.80052006 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.801050186 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.803252052 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.801522478 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.801735786 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.802003896 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.804433223 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.803206175 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.81072912 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.805105615 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.407110262 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.801872423 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.80212678 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.801296356 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.44175794 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.807272979 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.80366983 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.801289292 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.803576182 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.803539649 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.804681718 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.808656957 seconds)
  done (took 165.478166264 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.804495193 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.916099192 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.824232322 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.833028999 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.815064398 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.805107571 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.901286782 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.824299971 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.810051623 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.805534748 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.805495811 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.86381599 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.816518982 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.901964494 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.836487287 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.910759279 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.90929431 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.812783594 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.804927933 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.804311714 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.833819716 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.816583451 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.865303952 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.928315233 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.825072291 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.916625586 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.826311298 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.806043535 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.8046204 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.917531754 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.82480766 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.865672934 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.835865321 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.824290053 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.92173765 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.920427358 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.910246503 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.910456621 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.813528643 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.805147263 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.806420962 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.806727859 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.917014725 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.826278727 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.806756167 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.921002692 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.826192686 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.807027305 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.807648805 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.807037691 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.819863399 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.824131074 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.870985776 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.934789625 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.843145301 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.830429036 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.903834232 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.929686942 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.808279623 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.903330932 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.816118041 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.919725032 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.829097259 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.809406012 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.808827791 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.811378652 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.83590305 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.9115142 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.910910316 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.816537245 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.903430875 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.844195481 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.815161171 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.808236833 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.80795804 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.919941856 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.922794487 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.845479876 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.844118062 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.837058371 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.817646381 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.806569696 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.808923546 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.822816717 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.812913797 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.920640148 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.924377453 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.815840292 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.808451867 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.80994093 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.808693627 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.83188453 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.927187999 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.844277404 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.912758722 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.874612288 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.881878098 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.823748131 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.823370641 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.813909061 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.870375697 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.824457288 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.821438409 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.095348519 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.868658363 seconds)
  done (took 196.106687957 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.178550342 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.859356024 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.86519441 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.121093203 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.165490391 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.70566568 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.855479774 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.855998824 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.879467223 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.037537572 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.932272555 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.876001174 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.842457433 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.831293816 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.853194156 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.875462791 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.863651299 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.183164183 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.080011215 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.976103793 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.845859639 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.151570054 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.171119072 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.426602565 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.904067859 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.254356814 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.413858612 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.989298285 seconds)
  done (took 59.740213609 seconds)
done (took 795.496025633 seconds)
SAVING RESULT...
DONE!
